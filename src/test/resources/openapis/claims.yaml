openapi: 3.0.1
info:
  title: Claim API
  description: APIs for claims and related objects
  version: 1.4.0
servers:
  - url: >-
      https://cc-aaaracqpoc-salesdemo.guidewire.galileo-andromeda.guidewire.net:443/rest/claim/v1
security:
  - basicAuth: []
paths:
  /batch:
    post:
      summary: Issue multiple requests at once as a non-transactional batch
      description: >-
        Post a list of subrequests to make against this endpoint. Subrequests
        will be executed serially, in the order they are specified in the
        "requests" property of the input. Responses to each subrequest will then
        be batched up and returned all together. Subrequests inherit the headers
        from the main request, with the exception of the GW-Checksum header, but
        headers can be specified on the subrequest and will override any headers
        from the main request.
      operationId: batchRequest
      parameters:
        - name: includeResponseHeaders
          in: query
          description: >-
            Controls what response headers, if any, are included for
            subresponses. If unspecified, or set to the value "*all", all
            headers for subresponses will be returned. If set to the value
            "*none", no headers for subresponses will be returned. Otherwise,
            this parameter can consist of a comma-separated list of the names of
            headers that should be included on subresponses.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: The body of the batch request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRequest'
        required: true
      responses:
        '200':
          description: >-
            The batch request itself was well-formed; individual subrequests may
            have succeeded or failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponse'
      x-codegen-request-body-name: body
  /claim-infos:
    get:
      summary: Retrieves a list of claim infos
      description: Retrieves a list of claim infos (Since 1.3.1)
      operationId: getClaimInfos
      parameters:
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: The list of claim infos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimInfosList'
      x-gw-sinceVersion: 1.3.1
      x-gw-extensions:
        childResourceType: ClaimInfo
        operationType: get-collection
        resourceType: ClaimInfos
  /claim-infos/{claimInfoId}:
    get:
      summary: Retrieve a claim info
      description: Retrieve a claim info (Since 1.3.1)
      operationId: getClaimInfo
      parameters:
        - name: claimInfoId
          in: path
          description: The identifier for the claim info (Since 1.3.1)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.3.1
          x-gw-sinceVersion: 1.3.1
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimInfoResponse'
      x-gw-sinceVersion: 1.3.1
      x-gw-extensions:
        operationType: get-element
        resourceType: ClaimInfo
  /claim-infos/{claimInfoId}/retrieve:
    post:
      summary: Retrieve a claim
      description: Retrieve a claim (Since 1.3.1)
      operationId: retrieveClaim
      parameters:
        - name: claimInfoId
          in: path
          description: The identifier for the claim info (Since 1.3.1)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.3.1
          x-gw-sinceVersion: 1.3.1
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Successful retrieve
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimInfoResponse'
      x-gw-sinceVersion: 1.3.1
      x-gw-extensions:
        operationType: custom-action
        resourceType: ClaimInfo
  /claims:
    get:
      summary: Retrieves a list of claims
      description: Retrieves a list of assigned claims
      operationId: getClaims
      parameters:
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: The list of claims
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimsList'
      x-gw-extensions:
        childResourceType: Claim
        operationType: get-collection
        resourceType: Claims
    post:
      summary: Create a new draft claim
      description: Create a new draft claim
      operationId: createClaim
      parameters:
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimRequest'
        required: true
      responses:
        '201':
          description: Successful creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimResponse'
      x-gw-extensions:
        childResourceType: Claim
        operationType: post-collection
        resourceType: Claims
      x-codegen-request-body-name: body
  /claims/{claimId}:
    get:
      summary: Retrieve a claim
      description: Retrieve a claim
      operationId: getClaim
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimResponse'
      x-gw-extensions:
        operationType: get-element
        resourceType: Claim
    patch:
      summary: Update a claim
      description: Update a claim
      operationId: patchClaim
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimResponse'
      x-gw-extensions:
        operationType: patch-element
        resourceType: Claim
      x-codegen-request-body-name: body
  /claims/{claimId}/activities:
    get:
      summary: Returns a list of activities associated with this claim
      description: Returns a list of activities associated with this claim
      operationId: getClaimActivities
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Returns a list of activities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityList'
      x-gw-extensions:
        childResourceType: Activity
        operationType: get-collection
        resourceType: ClaimActivities
    post:
      summary: Creates a new activity associated with this claim
      description: Creates a new activity associated with this claim
      operationId: createClaimActivity
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityRequest'
        required: true
      responses:
        '201':
          description: Returns the details for the newly-created activity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityResponse'
      x-gw-extensions:
        childResourceType: Activity
        operationType: post-collection
        resourceType: ClaimActivities
      x-codegen-request-body-name: body
  /claims/{claimId}/activity-assignees:
    get:
      summary: >-
        The list of suggested people, groups, queues, etc. that new activities
        on this claim can be assigned to
      description: >
        The list of suggested people, groups, queues, etc. that new activities
        on this claim can be assigned to
      operationId: getClaimActivityAssignees
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: The suggested assignees
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssigneeList'
      x-gw-extensions:
        childResourceType: Assignee
        operationType: get-collection
        resourceType: ClaimActivityAssignees
  /claims/{claimId}/activity-patterns:
    get:
      summary: >-
        Returns a list of activity patterns that can be used to create
        activities on this claim
      description: >-
        Returns a list of activity patterns that can be used to create
        activities on this claim
      operationId: getClaimActivityPatterns
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Returns a list of activities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityPatternList'
      x-gw-extensions:
        childResourceType: ActivityPattern
        operationType: get-collection
        resourceType: ClaimActivityPatterns
  /claims/{claimId}/assessment-summaries:
    get:
      summary: Retrieve a collection of assessment summaries
      description: Retrieve a collection of assessment summaries (Since 1.4.0)
      operationId: getAssessmentSummaries
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentSummaryList'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        childResourceType: AssessmentSummary
        operationType: get-collection
        resourceType: AssessmentSummaries
    post:
      summary: Create a new assessment summary
      description: Create a new assessment summary (Since 1.4.0)
      operationId: createAssessmentSummary
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssessmentSummaryRequest'
        required: true
      responses:
        '201':
          description: The details of the newly-created AssessmentSummary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentSummaryResponse'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        childResourceType: AssessmentSummary
        operationType: post-collection
        resourceType: AssessmentSummaries
      x-codegen-request-body-name: body
  /claims/{claimId}/assessment-summaries/{assessmentSummaryId}:
    get:
      summary: Retrieve details of an assessment summary
      description: Retrieve details of an assessment summary (Since 1.4.0)
      operationId: getAssessmentSummary
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: assessmentSummaryId
          in: path
          description: The REST identifier for the assessment summary (Since 1.4.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.4.0
          x-gw-sinceVersion: 1.4.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentSummaryResponse'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        operationType: get-element
        resourceType: AssessmentSummary
  /claims/{claimId}/assign:
    post:
      summary: Assign claim to a user or a group
      description: Assign claim to a user or a group (Since 1.2.0)
      operationId: assignClaim
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimAssignmentRequest'
        required: true
      responses:
        '200':
          description: Successfully assigned the claim
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimResponse'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        operationType: custom-action
        resourceType: Claim
      x-codegen-request-body-name: body
  /claims/{claimId}/cancel:
    post:
      summary: Cancels and removes the given claim; only allowed on draft claims.
      description: Cancels and removes the given claim; only allowed on draft claims.
      operationId: cancel
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful deletion
          content: {}
      x-gw-extensions:
        operationType: custom-action
        resourceType: Claim
  /claims/{claimId}/check-sets:
    get:
      summary: Retrieve a list of check sets
      description: Retrieve a list of check sets (Since 1.3.0)
      operationId: getCheckSets
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: The list of CheckSets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckSetList'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        childResourceType: CheckSet
        operationType: get-collection
        resourceType: CheckSets
    post:
      summary: Create a new check set with payments
      description: Create a new check set with payments (Since 1.3.0)
      operationId: createCheckSet
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckSetRequest'
        required: true
      responses:
        '201':
          description: Successful creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckSetResponse'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        childResourceType: CheckSet
        operationType: post-collection
        resourceType: CheckSets
      x-codegen-request-body-name: body
  /claims/{claimId}/check-sets/{checkSetId}:
    get:
      summary: Retrieve details of a check set
      description: Retrieve details of a check set (Since 1.3.0)
      operationId: getCheckSet
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: checkSetId
          in: path
          description: The identifier for the check set (Since 1.3.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.3.0
          x-gw-sinceVersion: 1.3.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckSetResponse'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        operationType: get-element
        resourceType: CheckSet
  /claims/{claimId}/checks:
    get:
      summary: Retrieve a list of checks
      description: Retrieve a list of checks (Since 1.3.0)
      operationId: getChecks
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: The list of checks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckList'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        childResourceType: Check
        operationType: get-collection
        resourceType: Checks
  /claims/{claimId}/checks/{checkId}:
    get:
      summary: Retrieve details of a check
      description: Retrieve details of a check (Since 1.3.0)
      operationId: getCheck
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: checkId
          in: path
          description: The identifier for the check (Since 1.3.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.3.0
          x-gw-sinceVersion: 1.3.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckResponse'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        operationType: get-element
        resourceType: Check
    delete:
      summary: Delete a check
      description: Delete a check (Since 1.3.0)
      operationId: deleteCheck
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: checkId
          in: path
          description: The identifier for the check (Since 1.3.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.3.0
          x-gw-sinceVersion: 1.3.0
      responses:
        '204':
          description: Successful deletion
          content: {}
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        allowForCompositeApi: false
        operationType: delete-element
        resourceType: Check
    patch:
      summary: Update a check
      description: Update a check (Since 1.3.0)
      operationId: patchCheck
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: checkId
          in: path
          description: The identifier for the check (Since 1.3.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.3.0
          x-gw-sinceVersion: 1.3.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckResponse'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        allowForCompositeApi: false
        operationType: patch-element
        resourceType: Check
      x-codegen-request-body-name: body
  /claims/{claimId}/checks/{checkId}/acknowledge-submission:
    post:
      summary: Acknowledge the submission of this check
      description: Acknowledge the submission of this check (Since 1.3.0)
      operationId: checkAcknowledgeSubmission
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: checkId
          in: path
          description: The identifier for the check (Since 1.3.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.3.0
          x-gw-sinceVersion: 1.3.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Successfully acknowledged the check's submission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckResponse'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        allowForCompositeApi: false
        operationType: custom-action
        resourceType: Check
  /claims/{claimId}/checks/{checkId}/mark-cleared:
    post:
      summary: Mark check as cleared this check
      description: Mark check as cleared (Since 1.3.0)
      operationId: checkMarkCleared
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: checkId
          in: path
          description: The identifier for the check (Since 1.3.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.3.0
          x-gw-sinceVersion: 1.3.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Successfully marked this check as cleared
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckResponse'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        allowForCompositeApi: false
        operationType: custom-action
        resourceType: Check
  /claims/{claimId}/checks/{checkId}/mark-issued:
    post:
      summary: Mark check as issued
      description: Mark check as issued (Since 1.3.0)
      operationId: checkMarkIssued
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: checkId
          in: path
          description: The identifier for the check (Since 1.3.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.3.0
          x-gw-sinceVersion: 1.3.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Successfully marked this check as issued
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckResponse'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        allowForCompositeApi: false
        operationType: custom-action
        resourceType: Check
  /claims/{claimId}/checks/{checkId}/mark-stopped:
    post:
      summary: Mark check as stopped
      description: Mark check as stopped (Since 1.3.0)
      operationId: checkMarkStopped
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: checkId
          in: path
          description: The identifier for the check (Since 1.3.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.3.0
          x-gw-sinceVersion: 1.3.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Successfully marked this check as stopped
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckResponse'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        allowForCompositeApi: false
        operationType: custom-action
        resourceType: Check
  /claims/{claimId}/checks/{checkId}/mark-voided:
    post:
      summary: Mark check as voided
      description: Mark check as voided (Since 1.3.0)
      operationId: checkMarkVoided
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: checkId
          in: path
          description: The identifier for the check (Since 1.3.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.3.0
          x-gw-sinceVersion: 1.3.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Successfully marked this check as voided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckResponse'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        allowForCompositeApi: false
        operationType: custom-action
        resourceType: Check
  /claims/{claimId}/checks/{checkId}/request-stop:
    post:
      summary: Request to stop this check
      description: Request to stop this check (Since 1.3.0)
      operationId: checkRequestStop
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: checkId
          in: path
          description: The identifier for the check (Since 1.3.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.3.0
          x-gw-sinceVersion: 1.3.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Successfully requested to stop this check
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckResponse'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        allowForCompositeApi: false
        operationType: custom-action
        resourceType: Check
  /claims/{claimId}/checks/{checkId}/request-void:
    post:
      summary: Request to void this check
      description: Request to void this check (Since 1.3.0)
      operationId: checkRequestVoid
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: checkId
          in: path
          description: The identifier for the check (Since 1.3.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.3.0
          x-gw-sinceVersion: 1.3.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Successfully requested to void this check
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckResponse'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        allowForCompositeApi: false
        operationType: custom-action
        resourceType: Check
  /claims/{claimId}/close:
    post:
      summary: Close this claim and transition it to the 'closed' state
      description: Close this claim and transition it to the 'closed' state
      operationId: closeClaim
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimCloseRequest'
        required: false
      responses:
        '200':
          description: Successfully closed the claim
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimResponse'
      x-gw-extensions:
        operationType: custom-action
        resourceType: Claim
      x-codegen-request-body-name: body
  /claims/{claimId}/contact-role-owners:
    get:
      summary: >-
        The contact role owners associated with a given claim, including
        incidents, exposures, policy, and more.
      description: >
        The contact role owners associated with a given claim. This includes the
        claim, policy, incidents, exposures, matters, negotiations, and
        evaluations. Worker's comp injury incidents are not included.
      operationId: getClaimContactRoleOwners
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericRelationList'
      x-gw-extensions:
        childResourceType: GenericRelation
        operationType: get-collection
        resourceType: ClaimContactRoleOwners
  /claims/{claimId}/contacts:
    get:
      summary: The contacts associated with a given claim
      description: The contacts associated with a given claim
      operationId: getClaimContacts
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimContactList'
      x-gw-extensions:
        childResourceType: ClaimContact
        operationType: get-collection
        resourceType: ClaimContacts
    post:
      summary: Create a new contact on the given claim
      description: Create a new contact on the given claim
      operationId: createClaimContact
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactRequest'
        required: true
      responses:
        '201':
          description: Successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactResponse'
      x-gw-extensions:
        childResourceType: ClaimContact
        operationType: post-collection
        resourceType: ClaimContacts
      x-codegen-request-body-name: body
  /claims/{claimId}/contacts/{contactId}:
    get:
      summary: The details of a specific contact
      description: The details of a specific contact
      operationId: getClaimContact
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: contactId
          in: path
          description: The identifier for the contact
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactResponse'
      x-gw-extensions:
        operationType: get-element
        resourceType: ClaimContact
    delete:
      summary: Delete a contact on the given claim
      description: Delete a contact on the given claim
      operationId: deleteClaimContact
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: contactId
          in: path
          description: The identifier for the contact
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful deletion
          content: {}
      x-gw-extensions:
        operationType: delete-element
        resourceType: ClaimContact
    patch:
      summary: Update the details of the specific contact on the given claim
      description: Update the details of the specific contact on the given claim
      operationId: patchClaimContact
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: contactId
          in: path
          description: The identifier for the contact
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactRequest'
        required: true
      responses:
        '200':
          description: Successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactResponse'
      x-gw-extensions:
        operationType: patch-element
        resourceType: ClaimContact
      x-codegen-request-body-name: body
  /claims/{claimId}/documents:
    get:
      summary: The documents associated with a given claim
      description: The documents associated with a given claim
      operationId: getClaimDocuments
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentList'
      x-gw-extensions:
        childResourceType: ClaimDocument
        operationType: get-collection
        resourceType: ClaimDocuments
    post:
      summary: Create a new document on the given claim
      description: Create a new document on the given claim
      operationId: createClaimDocument
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - metadata
              properties:
                metadata:
                  type: string
                  x-gw-schema-ref: '#/definitions/ClaimDocumentRequest'
                content:
                  type: string
                  format: binary
        required: true
      responses:
        '201':
          description: Successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimDocumentResponse'
      x-gw-extensions:
        childResourceType: ClaimDocument
        operationType: post-collection
        resourceType: ClaimDocuments
  /claims/{claimId}/documents/{documentId}:
    get:
      summary: The details of a specific document
      description: The details of a specific document
      operationId: getClaimDocument
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          description: The identifier for the document
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimDocumentResponse'
      x-gw-extensions:
        operationType: get-element
        resourceType: ClaimDocument
    delete:
      summary: Delete a document on the given claim
      description: Delete a document on the given claim
      operationId: deleteClaimDocument
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          description: The identifier for the document
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful deletion
          content: {}
      x-gw-extensions:
        operationType: delete-element
        resourceType: ClaimDocument
    patch:
      summary: Update a document on the given claim
      description: Update a document on the given claim
      operationId: patchClaimDocument
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          description: The identifier for the document
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                metadata:
                  type: string
                  x-gw-schema-ref: '#/definitions/ClaimDocumentRequest'
                content:
                  type: string
                  format: binary
      responses:
        '200':
          description: Successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimDocumentResponse'
      x-gw-extensions:
        operationType: patch-element
        resourceType: ClaimDocument
  /claims/{claimId}/documents/{documentId}/content:
    get:
      summary: The contents of a document
      description: The contents of a document
      operationId: getDocumentContent
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          description: The identifier for the document
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentContentsResponse'
      x-gw-extensions:
        operationType: get-element
        resourceType: ClaimDocumentContent
  /claims/{claimId}/dwelling-incidents:
    get:
      summary: Retrieve dwelling incidents on a claim
      description: Retrieve dwelling incidents on a claim
      operationId: getDwellingIncidents
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DwellingIncidentList'
      x-gw-extensions:
        childResourceType: DwellingIncident
        operationType: get-collection
        resourceType: ClaimDwellingIncidents
    post:
      summary: Create a new dwelling incident
      description: Create a new dwelling incident
      operationId: createClaimDwellingIncident
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DwellingIncidentRequest'
        required: true
      responses:
        '201':
          description: Successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DwellingIncidentResponse'
      x-gw-extensions:
        childResourceType: DwellingIncident
        operationType: post-collection
        resourceType: ClaimDwellingIncidents
      x-codegen-request-body-name: body
  /claims/{claimId}/dwelling-incidents/{incidentId}:
    get:
      summary: Retrieve a dwelling incident
      description: Retrieve a dwelling incident
      operationId: getDwellingIncident
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: incidentId
          in: path
          description: The identifier for the incident
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DwellingIncidentResponse'
      x-gw-extensions:
        operationType: get-element
        resourceType: DwellingIncident
    patch:
      summary: Update a dwelling incident
      description: Update a dwelling incident
      operationId: patchDwellingIncident
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: incidentId
          in: path
          description: The identifier for the incident
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DwellingIncidentRequest'
        required: true
      responses:
        '200':
          description: Successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DwellingIncidentResponse'
      x-gw-extensions:
        operationType: patch-element
        resourceType: DwellingIncident
      x-codegen-request-body-name: body
  /claims/{claimId}/exposures:
    get:
      summary: The exposures associated with a given claim
      description: The exposures associated with a given claim
      operationId: getClaimExposures
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExposuresList'
      x-gw-extensions:
        childResourceType: Exposure
        operationType: get-collection
        resourceType: ClaimExposures
    post:
      summary: Create a new exposure on the given claim
      description: Create a new exposure on the given claim
      operationId: createClaimExposure
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExposureRequest'
        required: true
      responses:
        '201':
          description: Successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExposureResponse'
      x-gw-extensions:
        childResourceType: Exposure
        operationType: post-collection
        resourceType: ClaimExposures
      x-codegen-request-body-name: body
  /claims/{claimId}/exposures/{exposureId}:
    get:
      summary: The details of a specific exposure
      description: The details of a specific exposure
      operationId: getExposure
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: exposureId
          in: path
          description: The identifier for the exposure
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExposureResponse'
      x-gw-extensions:
        operationType: get-element
        resourceType: Exposure
    delete:
      summary: Delete the draft exposure
      description: Delete the draft exposure
      operationId: deleteExposure
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: exposureId
          in: path
          description: The identifier for the exposure
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful deletion
          content: {}
      x-gw-extensions:
        operationType: delete-element
        resourceType: Exposure
    patch:
      summary: Update the details of the specific exposure on the given claim
      description: Update the details of the specific exposure on the given claim
      operationId: patchExposure
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: exposureId
          in: path
          description: The identifier for the exposure
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExposureRequest'
        required: true
      responses:
        '200':
          description: Successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExposureResponse'
      x-gw-extensions:
        operationType: patch-element
        resourceType: Exposure
      x-codegen-request-body-name: body
  /claims/{claimId}/exposures/{exposureId}/assign:
    post:
      summary: Assign exposure to a user or a group
      description: Assign exposure to a user or a group (Since 1.2.0)
      operationId: assignExposure
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: exposureId
          in: path
          description: The identifier for the exposure
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExposureAssignmentRequest'
        required: true
      responses:
        '200':
          description: Successfully assigned the exposure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExposureResponse'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        operationType: custom-action
        resourceType: Exposure
      x-codegen-request-body-name: body
  /claims/{claimId}/exposures/{exposureId}/close:
    post:
      summary: Close the exposure
      description: Close the exposure
      operationId: closeExposure
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: exposureId
          in: path
          description: The identifier for the exposure
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExposureCloseRequest'
        required: false
      responses:
        '200':
          description: Successfully closed the exposure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExposureResponse'
      x-gw-extensions:
        operationType: custom-action
        resourceType: Exposure
      x-codegen-request-body-name: body
  /claims/{claimId}/exposures/{exposureId}/validate:
    post:
      summary: Validate the exposure
      description: Validate the exposure
      operationId: validateExposure
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: exposureId
          in: path
          description: The identifier for the exposure
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExposureValidationRequest'
        required: false
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExposureValidationResponse'
      x-gw-extensions:
        operationType: custom-action
        resourceType: Exposure
      x-codegen-request-body-name: body
  /claims/{claimId}/fixed-property-incidents:
    get:
      summary: The fixed property incidents associated with a given claim
      description: The fixed property incidents associated with a given claim
      operationId: getClaimFixedPropertyIncidents
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FixedPropertyIncidentList'
      x-gw-extensions:
        childResourceType: FixedPropertyIncident
        operationType: get-collection
        resourceType: ClaimFixedPropertyIncidents
    post:
      summary: Create a new fixed property incident on the given claim
      description: Create a new fixed property incident on the given claim
      operationId: createClaimFixedPropertyIncident
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FixedPropertyIncidentRequest'
        required: true
      responses:
        '201':
          description: Successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FixedPropertyIncidentResponse'
      x-gw-extensions:
        childResourceType: FixedPropertyIncident
        operationType: post-collection
        resourceType: ClaimFixedPropertyIncidents
      x-codegen-request-body-name: body
  /claims/{claimId}/fixed-property-incidents/{incidentId}:
    get:
      summary: The details of a specific fixed property incident
      description: The details of a specific fixed property incident
      operationId: getFixedPropertyIncident
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: incidentId
          in: path
          description: The identifier for the incident
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FixedPropertyIncidentResponse'
      x-gw-extensions:
        operationType: get-element
        resourceType: FixedPropertyIncident
    delete:
      summary: Delete a fixed property incident on the given claim
      description: Delete a fixed property incident on the given claim
      operationId: deleteFixedPropertyIncident
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: incidentId
          in: path
          description: The identifier for the incident
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful deletion
          content: {}
      x-gw-extensions:
        operationType: delete-element
        resourceType: FixedPropertyIncident
    patch:
      summary: Update the details of a specific fixed property incident
      description: Update the details of a specific fixed property incident
      operationId: patchFixedPropertyIncident
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: incidentId
          in: path
          description: The identifier for the incident
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FixedPropertyIncidentRequest'
        required: true
      responses:
        '200':
          description: Successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FixedPropertyIncidentResponse'
      x-gw-extensions:
        operationType: patch-element
        resourceType: FixedPropertyIncident
      x-codegen-request-body-name: body
  /claims/{claimId}/injury-incidents:
    get:
      summary: The injury incidents associated with a given claim
      description: The injury incidents associated with a given claim
      operationId: getClaimInjuryIncidents
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InjuryIncidentList'
      x-gw-extensions:
        childResourceType: InjuryIncident
        operationType: get-collection
        resourceType: ClaimInjuryIncidents
    post:
      summary: Create a new injury incident on the given claim
      description: Create a new injury incident on the given claim
      operationId: createClaimInjuryIncident
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InjuryIncidentRequest'
        required: true
      responses:
        '201':
          description: Successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InjuryIncidentResponse'
      x-gw-extensions:
        childResourceType: InjuryIncident
        operationType: post-collection
        resourceType: ClaimInjuryIncidents
      x-codegen-request-body-name: body
  /claims/{claimId}/injury-incidents/{incidentId}:
    get:
      summary: The details of a specific injury incident
      description: The details of a specific injury incident
      operationId: getInjuryIncident
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: incidentId
          in: path
          description: The identifier for the incident
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InjuryIncidentResponse'
      x-gw-extensions:
        operationType: get-element
        resourceType: InjuryIncident
    delete:
      summary: Delete an injury incident on the given claim
      description: Delete an injury incident on the given claim
      operationId: deleteInjuryIncident
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: incidentId
          in: path
          description: The identifier for the incident
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful deletion
          content: {}
      x-gw-extensions:
        operationType: delete-element
        resourceType: InjuryIncident
    patch:
      summary: Update the details of a specific injury incident
      description: Update the details of a specific injury incident
      operationId: patchInjuryIncident
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: incidentId
          in: path
          description: The identifier for the incident
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InjuryIncidentRequest'
        required: true
      responses:
        '200':
          description: Successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InjuryIncidentResponse'
      x-gw-extensions:
        operationType: patch-element
        resourceType: InjuryIncident
      x-codegen-request-body-name: body
  /claims/{claimId}/intake-interactions:
    get:
      summary: The intake interactions associated with a given claim
      description: The intake interactions associated with a given claim (Since 1.3.0)
      operationId: getClaimIntakeInteractions
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntakeInteractionsList'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        childResourceType: IntakeInteraction
        operationType: get-collection
        resourceType: ClaimIntakeInteractions
    post:
      summary: Create a new intake interaction on the given claim
      description: Create a new intake interaction on the given claim (Since 1.3.0)
      operationId: createIntakeInteraction
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntakeInteractionRequest'
        required: true
      responses:
        '201':
          description: Successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntakeInteractionResponse'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        childResourceType: IntakeInteraction
        operationType: post-collection
        resourceType: ClaimIntakeInteractions
      x-codegen-request-body-name: body
  /claims/{claimId}/intake-interactions/{interactionId}:
    get:
      summary: The details of a specific intake interaction
      description: The details of a specific intake interaction (Since 1.3.0)
      operationId: getIntakeInteraction
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: interactionId
          in: path
          description: The intake interaction identifier (Since 1.3.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.3.0
          x-gw-sinceVersion: 1.3.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntakeInteractionResponse'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        operationType: get-element
        resourceType: IntakeInteraction
    patch:
      summary: Update the details of a specific intake interaction
      description: Update the details of a specific intake interaction (Since 1.3.0)
      operationId: patchIntakeInteraction
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: interactionId
          in: path
          description: The intake interaction identifier (Since 1.3.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.3.0
          x-gw-sinceVersion: 1.3.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntakeInteractionRequest'
        required: true
      responses:
        '200':
          description: Successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntakeInteractionResponse'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        operationType: patch-element
        resourceType: IntakeInteraction
      x-codegen-request-body-name: body
  /claims/{claimId}/living-expenses-incidents:
    get:
      summary: Retrieve living expense incidents on a claim
      description: Retrieve living expense incidents on a claim
      operationId: getLivingExpensesIncidents
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LivingExpensesIncidentList'
      x-gw-extensions:
        childResourceType: LivingExpensesIncident
        operationType: get-collection
        resourceType: ClaimLivingExpensesIncidents
    post:
      summary: Create a new living expense incident
      description: Create a new living expense incident
      operationId: createClaimLivingExpensesIncident
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LivingExpensesIncidentRequest'
        required: true
      responses:
        '201':
          description: Successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LivingExpensesIncidentResponse'
      x-gw-extensions:
        childResourceType: LivingExpensesIncident
        operationType: post-collection
        resourceType: ClaimLivingExpensesIncidents
      x-codegen-request-body-name: body
  /claims/{claimId}/living-expenses-incidents/{incidentId}:
    get:
      summary: Retrieve a living expense incident
      description: Retrieve a living expense incident
      operationId: getLivingExpensesIncident
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: incidentId
          in: path
          description: The identifier for the incident
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LivingExpensesIncidentResponse'
      x-gw-extensions:
        operationType: get-element
        resourceType: LivingExpensesIncident
    patch:
      summary: Update a living expense incident
      description: Update a living expense incident
      operationId: patchLivingExpensesIncident
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: incidentId
          in: path
          description: The identifier for the incident
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LivingExpensesIncidentRequest'
        required: true
      responses:
        '200':
          description: Successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LivingExpensesIncidentResponse'
      x-gw-extensions:
        operationType: patch-element
        resourceType: LivingExpensesIncident
      x-codegen-request-body-name: body
  /claims/{claimId}/notes:
    get:
      summary: The notes associated with a given claim
      description: The notes associated with a given claim
      operationId: getClaimNotes
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteList'
      x-gw-extensions:
        childResourceType: Note
        operationType: get-collection
        resourceType: ClaimNotes
    post:
      summary: Create a new note on this claim
      description: Create a new note on this claim
      operationId: createClaimNote
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteRequest'
        required: true
      responses:
        '201':
          description: The details of the newly-created note
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteResponse'
      x-gw-extensions:
        childResourceType: Note
        operationType: post-collection
        resourceType: ClaimNotes
      x-codegen-request-body-name: body
  /claims/{claimId}/other-structure-incidents:
    get:
      summary: Retrieve a collection of other structure incidents
      description: Retrieve a collection of other structure incidents (Since 1.4.0)
      operationId: getOtherStructureIncidents
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OtherStructureIncidentList'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        childResourceType: OtherStructureIncident
        operationType: get-collection
        resourceType: ClaimOtherStructureIncidents
    post:
      summary: Create a new other structure incident
      description: Create a new other structure incident (Since 1.4.0)
      operationId: createOtherStructureIncident
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OtherStructureIncidentRequest'
        required: true
      responses:
        '201':
          description: The details of the newly-created OtherStructureIncident
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OtherStructureIncidentResponse'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        childResourceType: OtherStructureIncident
        operationType: post-collection
        resourceType: ClaimOtherStructureIncidents
      x-codegen-request-body-name: body
  /claims/{claimId}/other-structure-incidents/{incidentId}:
    get:
      summary: Retrieve details of a other structure incident
      description: Retrieve details of a other structure incident (Since 1.4.0)
      operationId: getOtherStructureIncident
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: incidentId
          in: path
          description: The identifier for the incident
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OtherStructureIncidentResponse'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        operationType: get-element
        resourceType: OtherStructureIncident
    delete:
      summary: Delete a other structure incident
      description: Delete a other structure incident (Since 1.4.0)
      operationId: deleteOtherStructureIncident
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: incidentId
          in: path
          description: The identifier for the incident
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful deletion
          content: {}
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        operationType: delete-element
        resourceType: OtherStructureIncident
    patch:
      summary: Update a other structure incident
      description: Update a other structure incident (Since 1.4.0)
      operationId: updateOtherStructureIncident
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: incidentId
          in: path
          description: The identifier for the incident
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OtherStructureIncidentRequest'
        required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OtherStructureIncidentResponse'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        operationType: patch-element
        resourceType: OtherStructureIncident
      x-codegen-request-body-name: body
  /claims/{claimId}/payments:
    get:
      summary: The payments associated with a given claim
      description: The payments associated with a given claim (Since 1.3.0)
      operationId: getPayments
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionList'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        childResourceType: Payment
        operationType: get-collection
        resourceType: Payments
  /claims/{claimId}/payments/{transactionId}:
    get:
      summary: The details of a specific payment
      description: The details of a specific payment (Since 1.3.0)
      operationId: getPayment
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: transactionId
          in: path
          description: The identifier for the transaction (Since 1.3.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.3.0
          x-gw-sinceVersion: 1.3.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        operationType: get-element
        resourceType: Payment
  /claims/{claimId}/payments/{transactionId}/acknowledge-submission:
    post:
      summary: Acknowledge submission of this payment
      description: Acknowledge submission of this payment (Since 1.3.0)
      operationId: paymentAcknowledgeSubmission
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: transactionId
          in: path
          description: The identifier for the transaction (Since 1.3.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.3.0
          x-gw-sinceVersion: 1.3.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Successfully acknowledged the payment's submission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        allowForCompositeApi: false
        operationType: custom-action
        resourceType: Payment
  /claims/{claimId}/policy:
    get:
      summary: The policy associated with a given claim
      description: The policy associated with a given claim
      operationId: getPolicy
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyResponse'
      x-gw-extensions:
        operationType: get-element
        resourceType: Policy
  /claims/{claimId}/policy/coverages:
    get:
      summary: The policy level coverages associated with a given claim
      description: The policy level coverages associated with a given claim
      operationId: getPolicyCoverages
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyCoverageList'
      x-gw-extensions:
        childResourceType: PolicyCoverage
        operationType: get-collection
        resourceType: PolicyCoverages
  /claims/{claimId}/policy/coverages/{coverageId}:
    get:
      summary: The policy level coverage associated with a given claim
      description: The policy level coverage associated with a given claim
      operationId: getPolicyCoverage
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: coverageId
          in: path
          description: The identifier for the coverage
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyCoverageResponse'
      x-gw-extensions:
        operationType: get-element
        resourceType: PolicyCoverage
  /claims/{claimId}/policy/endorsements:
    get:
      summary: The policy endorsements of a given claim
      description: The policy endorsements of a given claim
      operationId: getPolicyEndorsements
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyEndorsementList'
      x-gw-extensions:
        childResourceType: Endorsement
        operationType: get-collection
        resourceType: PolicyEndorsements
  /claims/{claimId}/policy/endorsements/{endorsementId}:
    get:
      summary: The policy endorsement of a given claim
      description: The policy endorsement of a given claim
      operationId: getPolicyEndorsement
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: endorsementId
          in: path
          description: The identifier for policy endorsement
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyEndorsementResponse'
      x-gw-extensions:
        operationType: get-element
        resourceType: Endorsement
  /claims/{claimId}/policy/location-based-risk-units:
    get:
      summary: The location based risk units of a policy associated with a given claim
      description: The location based risk units of a policy associated with a given claim
      operationId: getLocationBasedRiskUnits
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationBasedRiskUnitList'
      x-gw-extensions:
        childResourceType: LocationBasedRiskUnit
        operationType: get-collection
        resourceType: LocationBasedRiskUnits
  /claims/{claimId}/policy/location-based-risk-units/{locationBasedRiskUnitId}:
    get:
      summary: Retrieve a location based risk unit
      description: Retrieve a location based risk unit
      operationId: getLocationBasedRiskUnit
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: locationBasedRiskUnitId
          in: path
          description: The identifier for the location based risk unit
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationBasedRiskUnitResponse'
      x-gw-extensions:
        operationType: get-element
        resourceType: LocationBasedRiskUnit
  /claims/{claimId}/policy/location-based-risk-units/{locationBasedRiskUnitId}/coverages:
    get:
      summary: Retrieves a list of coverages on a location based risk unit
      description: >-
        Retrieves a list of coverages on a location based risk unit (Since
        1.4.0)
      operationId: getLocationBasedRiskUnitCoverages
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: locationBasedRiskUnitId
          in: path
          description: The identifier for the location based risk unit
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyCoverageList'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        childResourceType: LocationBasedRiskUnitCoverage
        operationType: get-collection
        resourceType: LocationBasedRiskUnitCoverages
  /claims/{claimId}/policy/location-based-risk-units/{locationBasedRiskUnitId}/coverages/{coverageId}:
    get:
      summary: Details of a coverage on a location based risk unit
      description: Details of a coverage on a location based risk unit (Since 1.4.0)
      operationId: getLocationBasedRiskUnitCoverage
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: locationBasedRiskUnitId
          in: path
          description: The identifier for the location based risk unit
          required: true
          schema:
            type: string
        - name: coverageId
          in: path
          description: The identifier for the coverage
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyCoverageResponse'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        operationType: get-element
        resourceType: LocationBasedRiskUnitCoverage
  /claims/{claimId}/policy/locations:
    get:
      summary: The locations associated with a given claim's policy
      description: The locations associated with a given claim's policy
      operationId: getPolicyLocations
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyLocationList'
      x-gw-extensions:
        childResourceType: PolicyLocation
        operationType: get-collection
        resourceType: PolicyLocations
  /claims/{claimId}/policy/locations/{locationId}:
    get:
      summary: Details of a location on the given claim's policy
      description: Details of a location on the given claim's policy
      operationId: getPolicyLocation
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: locationId
          in: path
          description: The identifier for the location
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyLocationResponse'
      x-gw-extensions:
        operationType: get-element
        resourceType: PolicyLocation
  /claims/{claimId}/policy/vehicle-risk-units:
    get:
      summary: The vehicle risk units of a policy associated with a given claim
      description: The vehicle risk units of a policy associated with a given claim
      operationId: getVehicleRiskUnits
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleRiskUnitList'
      x-gw-extensions:
        childResourceType: VehicleRiskUnit
        operationType: get-collection
        resourceType: VehicleRiskUnits
  /claims/{claimId}/policy/vehicle-risk-units/{vehicleRiskUnitId}:
    get:
      summary: Retrieve a vehicle risk unit
      description: Retrieve a vehicle risk unit
      operationId: getVehicleRiskUnit
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: vehicleRiskUnitId
          in: path
          description: The identifier for the vehicle risk unit
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleRiskUnitResponse'
      x-gw-extensions:
        operationType: get-element
        resourceType: VehicleRiskUnit
  /claims/{claimId}/policy/vehicle-risk-units/{vehicleRiskUnitId}/coverages:
    get:
      summary: Retrieves a list of coverages on a vehicle risk unit
      description: Retrieves a list of coverages on a vehicle risk unit (Since 1.4.0)
      operationId: getVehicleRiskUnitCoverages
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: vehicleRiskUnitId
          in: path
          description: The identifier for the vehicle risk unit
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyCoverageList'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        childResourceType: VehicleRiskUnitCoverage
        operationType: get-collection
        resourceType: VehicleRiskUnitCoverages
  /claims/{claimId}/policy/vehicle-risk-units/{vehicleRiskUnitId}/coverages/{coverageId}:
    get:
      summary: Details of a coverage on a vehicle risk unit
      description: Details of a coverage on a vehicle risk unit (Since 1.4.0)
      operationId: getVehicleRiskUnitCoverage
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: vehicleRiskUnitId
          in: path
          description: The identifier for the vehicle risk unit
          required: true
          schema:
            type: string
        - name: coverageId
          in: path
          description: The identifier for the coverage
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyCoverageResponse'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        operationType: get-element
        resourceType: VehicleRiskUnitCoverage
  /claims/{claimId}/property-contents-incidents:
    get:
      summary: Retrieve a collection of property contents incidents
      description: Retrieve a collection of property contents incidents (Since 1.4.0)
      operationId: getPropertyContentsIncidents
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyContentsIncidentList'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        childResourceType: PropertyContentsIncident
        operationType: get-collection
        resourceType: ClaimPropertyContentsIncidents
    post:
      summary: Create a new property contents incident
      description: Create a new property contents incident (Since 1.4.0)
      operationId: createPropertyContentsIncident
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyContentsIncidentRequest'
        required: true
      responses:
        '201':
          description: The details of the newly-created PropertyContentsIncident
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyContentsIncidentResponse'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        childResourceType: PropertyContentsIncident
        operationType: post-collection
        resourceType: ClaimPropertyContentsIncidents
      x-codegen-request-body-name: body
  /claims/{claimId}/property-contents-incidents/{incidentId}:
    get:
      summary: Retrieve details of a property contents incident
      description: Retrieve details of a property contents incident (Since 1.4.0)
      operationId: getPropertyContentsIncident
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: incidentId
          in: path
          description: The identifier for the incident
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyContentsIncidentResponse'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        operationType: get-element
        resourceType: PropertyContentsIncident
    delete:
      summary: Delete a property contents incident
      description: Delete a property contents incident (Since 1.4.0)
      operationId: deletePropertyContentsIncident
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: incidentId
          in: path
          description: The identifier for the incident
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful deletion
          content: {}
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        operationType: delete-element
        resourceType: PropertyContentsIncident
    patch:
      summary: Update a property contents incident
      description: Update a property contents incident (Since 1.4.0)
      operationId: updatePropertyContentsIncident
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: incidentId
          in: path
          description: The identifier for the incident
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyContentsIncidentRequest'
        required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyContentsIncidentResponse'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        operationType: patch-element
        resourceType: PropertyContentsIncident
      x-codegen-request-body-name: body
  /claims/{claimId}/property-contents-incidents/{incidentId}/assessment-content-items:
    get:
      summary: Retrieve a collection of assessment content items
      description: Retrieve a collection of assessment content items (Since 1.4.0)
      operationId: getPropertyContentsIncidentAssessmentContentItems
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: incidentId
          in: path
          description: The identifier for the incident
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentContentItemList'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        childResourceType: AssessmentContentItem
        operationType: get-collection
        resourceType: AssessmentContentItems
    post:
      summary: Create a new assessment content item
      description: Create a new assessment content item (Since 1.4.0)
      operationId: createPropertyContentsIncidentAssessmentContentItem
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: incidentId
          in: path
          description: The identifier for the incident
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssessmentContentItemRequest'
        required: true
      responses:
        '201':
          description: The details of the newly-created AssessmentContentItem
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentContentItemResponse'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        childResourceType: AssessmentContentItem
        operationType: post-collection
        resourceType: AssessmentContentItems
      x-codegen-request-body-name: body
  /claims/{claimId}/property-contents-incidents/{incidentId}/assessment-content-items/{assessmentContentItemId}:
    get:
      summary: Retrieve details of a assessment content item
      description: Retrieve details of a assessment content item (Since 1.4.0)
      operationId: getPropertyContentsIncidentAssessmentContentItem
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: incidentId
          in: path
          description: The identifier for the incident
          required: true
          schema:
            type: string
        - name: assessmentContentItemId
          in: path
          description: The REST identifier for the assessment content item (Since 1.4.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.4.0
          x-gw-sinceVersion: 1.4.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentContentItemResponse'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        operationType: get-element
        resourceType: AssessmentContentItem
    delete:
      summary: Delete a assessment content item
      description: Delete a assessment content item (Since 1.4.0)
      operationId: deletePropertyContentsIncidentAssessmentContentItem
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: incidentId
          in: path
          description: The identifier for the incident
          required: true
          schema:
            type: string
        - name: assessmentContentItemId
          in: path
          description: The REST identifier for the assessment content item (Since 1.4.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.4.0
          x-gw-sinceVersion: 1.4.0
      responses:
        '204':
          description: Successful deletion
          content: {}
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        operationType: delete-element
        resourceType: AssessmentContentItem
    patch:
      summary: Update a assessment content item
      description: Update a assessment content item (Since 1.4.0)
      operationId: updatePropertyContentsIncidentAssessmentContentItem
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: incidentId
          in: path
          description: The identifier for the incident
          required: true
          schema:
            type: string
        - name: assessmentContentItemId
          in: path
          description: The REST identifier for the assessment content item (Since 1.4.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.4.0
          x-gw-sinceVersion: 1.4.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssessmentContentItemRequest'
        required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentContentItemResponse'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        operationType: patch-element
        resourceType: AssessmentContentItem
      x-codegen-request-body-name: body
  /claims/{claimId}/recoveries:
    get:
      summary: The recoveries associated with a given claim
      description: The recoveries associated with a given claim (Since 1.3.0)
      operationId: getRecoveries
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionList'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        childResourceType: Recovery
        operationType: get-collection
        resourceType: Recoveries
  /claims/{claimId}/recoveries/{transactionId}:
    get:
      summary: The details of a specific recovery
      description: The details of a specific recovery (Since 1.3.0)
      operationId: getRecovery
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: transactionId
          in: path
          description: The identifier for the transaction (Since 1.3.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.3.0
          x-gw-sinceVersion: 1.3.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        operationType: get-element
        resourceType: Recovery
  /claims/{claimId}/recoveries/{transactionId}/acknowledge-submission:
    post:
      summary: Acknowledge submission of this recovery
      description: Acknowledge submission of this recovery (Since 1.3.0)
      operationId: recoveryAcknowledgeSubmission
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: transactionId
          in: path
          description: The identifier for the transaction (Since 1.3.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.3.0
          x-gw-sinceVersion: 1.3.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Successfully acknowledged the recovery's submission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        allowForCompositeApi: false
        operationType: custom-action
        resourceType: Recovery
  /claims/{claimId}/recovery-reserve-sets:
    get:
      summary: Retrieve a list of recovery reserve sets
      description: Retrieve a list of recovery reserve sets (Since 1.3.0)
      operationId: getRecoveryReserveSets
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: The list of recovery reserve sets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecoveryReserveSetList'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        childResourceType: RecoveryReserveSet
        operationType: get-collection
        resourceType: RecoveryReserveSets
    post:
      summary: Create a new recovery reserve set with recovery reserves
      description: Create a new recovery reserve set with recovery reserves (Since 1.3.0)
      operationId: createRecoveryReserveSet
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecoveryReserveSetRequest'
        required: true
      responses:
        '201':
          description: Successful creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecoveryReserveSetResponse'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        allowForCompositeApi: false
        childResourceType: RecoveryReserveSet
        operationType: post-collection
        resourceType: RecoveryReserveSets
      x-codegen-request-body-name: body
  /claims/{claimId}/recovery-reserve-sets/{recoveryReserveSetId}:
    get:
      summary: Retrieve details of a recovery reserve set
      description: Retrieve details of a recovery reserve set (Since 1.3.0)
      operationId: getRecoveryReserveSet
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: recoveryReserveSetId
          in: path
          description: The identifier for the recovery reserve set (Since 1.3.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.3.0
          x-gw-sinceVersion: 1.3.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecoveryReserveSetResponse'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        operationType: get-element
        resourceType: RecoveryReserveSet
  /claims/{claimId}/recovery-reserves:
    get:
      summary: The recovery reserves associated with a given claim
      description: The recovery reserves associated with a given claim (Since 1.3.0)
      operationId: getRecoveryReserves
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionList'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        childResourceType: RecoveryReserve
        operationType: get-collection
        resourceType: RecoveryReserves
  /claims/{claimId}/recovery-reserves/{transactionId}:
    get:
      summary: The details of a specific recovery reserve
      description: The details of a specific recovery reserve (Since 1.3.0)
      operationId: getRecoveryReserve
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: transactionId
          in: path
          description: The identifier for the transaction (Since 1.3.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.3.0
          x-gw-sinceVersion: 1.3.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        operationType: get-element
        resourceType: RecoveryReserve
  /claims/{claimId}/recovery-reserves/{transactionId}/acknowledge-submission:
    post:
      summary: Acknowledge submission of this recovery reserve
      description: Acknowledge submission of this recovery reserve (Since 1.3.0)
      operationId: recoveryReserveAcknowledgeSubmission
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: transactionId
          in: path
          description: The identifier for the transaction (Since 1.3.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.3.0
          x-gw-sinceVersion: 1.3.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Successfully acknowledged the recovery reserve's submission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        allowForCompositeApi: false
        operationType: custom-action
        resourceType: RecoveryReserve
  /claims/{claimId}/recovery-sets:
    get:
      summary: Retrieve a list of recovery sets
      description: Retrieve a list of recovery sets (Since 1.3.0)
      operationId: getRecoverySets
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: The list of recovery sets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecoverySetList'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        childResourceType: RecoverySet
        operationType: get-collection
        resourceType: RecoverySets
    post:
      summary: Create a new recovery set with recoveries
      description: Create a new recovery set with recoveries (Since 1.3.0)
      operationId: createRecoverySet
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecoverySetRequest'
        required: true
      responses:
        '201':
          description: Successful creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecoverySetResponse'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        allowForCompositeApi: false
        childResourceType: RecoverySet
        operationType: post-collection
        resourceType: RecoverySets
      x-codegen-request-body-name: body
  /claims/{claimId}/recovery-sets/{recoverySetId}:
    get:
      summary: Retrieve details of a recovery set
      description: Retrieve details of a recovery set (Since 1.3.0)
      operationId: getRecoverySet
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: recoverySetId
          in: path
          description: The identifier for the recovery set (Since 1.3.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.3.0
          x-gw-sinceVersion: 1.3.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecoverySetResponse'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        operationType: get-element
        resourceType: RecoverySet
  /claims/{claimId}/related-objects:
    get:
      summary: The list of objects related to this claim
      description: >
        The list of objects related to this claim which can be used as the
        values for the "relatedTo" field on a note or activity. This includes
        the claim, contacts, unpromoted service requests, service request
        specialists, exposures, and matters.
      operationId: getClaimRelatedObjects
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Successful request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericRelationList'
      x-gw-extensions:
        childResourceType: GenericRelation
        operationType: get-collection
        resourceType: ClaimRelatedObjects
  /claims/{claimId}/reserve-sets:
    get:
      summary: Retrieve a list of reserve sets
      description: Retrieve a list of reserve sets (Since 1.3.0)
      operationId: getReserveSets
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: The list of reserve sets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReserveSetList'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        childResourceType: ReserveSet
        operationType: get-collection
        resourceType: ReserveSets
    post:
      summary: Create a new reserve set with reserves
      description: Create a new reserve set with reserves (Since 1.3.0)
      operationId: createReserveSet
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReserveSetRequest'
        required: true
      responses:
        '201':
          description: Successful creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReserveSetResponse'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        allowForCompositeApi: false
        childResourceType: ReserveSet
        operationType: post-collection
        resourceType: ReserveSets
      x-codegen-request-body-name: body
  /claims/{claimId}/reserve-sets/{reserveSetId}:
    get:
      summary: Retrieve details of a reserve set
      description: Retrieve details of a reserve set (Since 1.3.0)
      operationId: getReserveSet
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: reserveSetId
          in: path
          description: The identifier for the reserve set (Since 1.3.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.3.0
          x-gw-sinceVersion: 1.3.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReserveSetResponse'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        operationType: get-element
        resourceType: ReserveSet
  /claims/{claimId}/reserves:
    get:
      summary: The reserves associated with a given claim
      description: The reserves associated with a given claim (Since 1.3.0)
      operationId: getReserves
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionList'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        childResourceType: Reserve
        operationType: get-collection
        resourceType: Reserves
  /claims/{claimId}/reserves/{transactionId}:
    get:
      summary: The details of a specific reserve
      description: The details of a specific reserve (Since 1.3.0)
      operationId: getReserve
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: transactionId
          in: path
          description: The identifier for the transaction (Since 1.3.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.3.0
          x-gw-sinceVersion: 1.3.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        operationType: get-element
        resourceType: Reserve
  /claims/{claimId}/reserves/{transactionId}/acknowledge-submission:
    post:
      summary: Acknowledge submission of this reserve
      description: Acknowledge submission of this reserve (Since 1.3.0)
      operationId: reserveAcknowledgeSubmission
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: transactionId
          in: path
          description: The identifier for the transaction (Since 1.3.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.3.0
          x-gw-sinceVersion: 1.3.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Successfully acknowledged the reserve's submission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        allowForCompositeApi: false
        operationType: custom-action
        resourceType: Reserve
  /claims/{claimId}/service-requests:
    get:
      summary: Returns a list of service requests associated with the claim
      description: >-
        Returns a list of service requests associated with the claim (Since
        1.1.0)
      operationId: getServiceRequestsForClaim
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Returns a list of service requests for a claim
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRequestList'
      x-gw-sinceVersion: 1.1.0
      x-gw-extensions:
        childResourceType: ServiceRequest
        operationType: get-collection
        resourceType: ClaimServiceRequests
    post:
      summary: Adds a service request to the claim
      description: Adds a service request to the claim (Since 1.1.0)
      operationId: addServiceRequestToClaim
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequestRequest'
        required: true
      responses:
        '201':
          description: Returns the details of the newly created service request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRequestResponse'
      x-gw-sinceVersion: 1.1.0
      x-gw-extensions:
        childResourceType: ServiceRequest
        operationType: post-collection
        resourceType: ClaimServiceRequests
      x-codegen-request-body-name: body
  /claims/{claimId}/service-requests/{serviceRequestId}:
    get:
      summary: Retrieves a service request by its id
      description: Retrieves a service request by its id (Since 1.1.0)
      operationId: getServiceRequest
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: serviceRequestId
          in: path
          description: The service request identifier
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Returns the details of the service request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRequestResponse'
      x-gw-sinceVersion: 1.1.0
      x-gw-extensions:
        operationType: get-element
        resourceType: ServiceRequest
    patch:
      summary: Modifies an existing service request
      description: Modifies an existing service request (Since 1.1.0)
      operationId: changeServiceRequest
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: serviceRequestId
          in: path
          description: The service request identifier
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequestRequest'
        required: true
      responses:
        '200':
          description: Returns the details of the modified service request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRequestResponse'
      x-gw-sinceVersion: 1.1.0
      x-gw-extensions:
        operationType: patch-element
        resourceType: ServiceRequest
      x-codegen-request-body-name: body
  /claims/{claimId}/service-requests/{serviceRequestId}/accept:
    post:
      summary: Accepts a service request
      description: >-
        Records that the specialist has accepted this service request (Since
        1.1.0)
      operationId: acceptServiceRequest
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: serviceRequestId
          in: path
          description: The service request identifier
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequestOperationRequest'
        required: true
      responses:
        '200':
          description: Returns the details of the accepted service request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRequestResponse'
      x-gw-sinceVersion: 1.1.0
      x-gw-extensions:
        allowForCompositeApi: false
        operationType: custom-action
        resourceType: ServiceRequest
      x-codegen-request-body-name: body
  /claims/{claimId}/service-requests/{serviceRequestId}/add-quote:
    post:
      summary: Adds a quote to the service request
      description: Adds a quote to the service request (Since 1.3.0)
      operationId: addServiceRequestQuote
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: serviceRequestId
          in: path
          description: The service request identifier
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequestOperationRequest'
        required: true
      responses:
        '200':
          description: Returns the details of the updated service request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRequestResponse'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        allowForCompositeApi: false
        operationType: custom-action
        resourceType: ServiceRequest
      x-codegen-request-body-name: body
  /claims/{claimId}/service-requests/{serviceRequestId}/approve-quote:
    post:
      summary: Approves the quote on the service request
      description: Approves the quote on the service request (Since 1.3.0)
      operationId: approveQuote
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: serviceRequestId
          in: path
          description: The service request identifier
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequestOperationRequest'
        required: true
      responses:
        '200':
          description: Returns the details of the updated service request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRequestResponse'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        allowForCompositeApi: false
        operationType: custom-action
        resourceType: ServiceRequest
      x-codegen-request-body-name: body
  /claims/{claimId}/service-requests/{serviceRequestId}/assign:
    post:
      summary: Assigns a service request
      description: Assigns a service request (Since 1.1.0)
      operationId: assignServiceRequest
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: serviceRequestId
          in: path
          description: The service request identifier
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequestAssignmentRequest'
        required: true
      responses:
        '200':
          description: Returns the details of the assigned service request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRequestResponse'
      x-gw-sinceVersion: 1.1.0
      x-gw-extensions:
        allowForCompositeApi: false
        operationType: custom-action
        resourceType: ServiceRequest
      x-codegen-request-body-name: body
  /claims/{claimId}/service-requests/{serviceRequestId}/cancel:
    post:
      summary: Cancels a service request
      description: >-
        Records that the specialist does not intend to perform any further work
        on this service request (Since 1.2.0)
      operationId: cancelServiceRequest
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: serviceRequestId
          in: path
          description: The service request identifier
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequestOperationRequest'
        required: true
      responses:
        '200':
          description: Returns the details of the canceled service request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRequestResponse'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        allowForCompositeApi: false
        operationType: custom-action
        resourceType: ServiceRequest
      x-codegen-request-body-name: body
  /claims/{claimId}/service-requests/{serviceRequestId}/complete-work:
    post:
      summary: Indicates that the specialist has completed work
      description: Indicates that the specialist has completed work (Since 1.2.0)
      operationId: completeRequestedWork
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: serviceRequestId
          in: path
          description: The service request identifier
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequestOperationRequest'
        required: false
      responses:
        '200':
          description: Returns the details of the service request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRequestResponse'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        allowForCompositeApi: false
        operationType: custom-action
        resourceType: ServiceRequest
      x-codegen-request-body-name: body
  /claims/{claimId}/service-requests/{serviceRequestId}/decline:
    post:
      summary: Declines a service request
      description: >-
        Records that the specialist has declined to perform this service request
        (Since 1.2.0)
      operationId: declineServiceRequest
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: serviceRequestId
          in: path
          description: The service request identifier
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequestOperationRequest'
        required: true
      responses:
        '200':
          description: Returns the details of the declined service request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRequestResponse'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        allowForCompositeApi: false
        operationType: custom-action
        resourceType: ServiceRequest
      x-codegen-request-body-name: body
  /claims/{claimId}/service-requests/{serviceRequestId}/internal-cancel:
    post:
      summary: Cancels a service request without specialist response
      description: >-
        Internally cancels this service request without further input from the
        specialist (Since 1.2.0)
      operationId: internalCancelServiceRequest
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: serviceRequestId
          in: path
          description: The service request identifier
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequestOperationRequest'
        required: true
      responses:
        '200':
          description: Returns the details of the canceled service request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRequestResponse'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        operationType: custom-action
        resourceType: ServiceRequest
      x-codegen-request-body-name: body
  /claims/{claimId}/service-requests/{serviceRequestId}/invoices:
    get:
      summary: Retrieves the invoices on a service request
      description: Retrieves the invoices on a service request (Since 1.1.0)
      operationId: getServiceRequestInvoices
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: serviceRequestId
          in: path
          description: The service request identifier
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Returns the list of the service request's invoices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRequestStatementList'
      x-gw-sinceVersion: 1.1.0
      x-gw-extensions:
        childResourceType: ServiceRequestInvoice
        operationType: get-collection
        resourceType: ServiceRequestInvoices
    post:
      summary: Creates a new service request invoice
      description: Creates a new service request invoice (Since 1.1.0)
      operationId: addInvoice
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: serviceRequestId
          in: path
          description: The service request identifier
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequestStatementRequest'
        required: true
      responses:
        '201':
          description: Returns the details of the newly created invoice
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRequestStatementResponse'
      x-gw-sinceVersion: 1.1.0
      x-gw-extensions:
        childResourceType: ServiceRequestInvoice
        operationType: post-collection
        resourceType: ServiceRequestInvoices
      x-codegen-request-body-name: body
  /claims/{claimId}/service-requests/{serviceRequestId}/invoices/{invoiceId}:
    get:
      summary: Retrieves a service request invoice by its id
      description: Retrieves a service request invoice by its id (Since 1.1.0)
      operationId: getInvoice
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: serviceRequestId
          in: path
          description: The service request identifier
          required: true
          schema:
            type: string
        - name: invoiceId
          in: path
          description: The identifier for the invoice
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Returns the the service request invoice
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRequestStatementResponse'
      x-gw-sinceVersion: 1.1.0
      x-gw-extensions:
        operationType: get-element
        resourceType: ServiceRequestInvoice
  /claims/{claimId}/service-requests/{serviceRequestId}/invoices/{invoiceId}/approve:
    post:
      summary: Approves an invoice that has been submitted
      description: Approves an invoice that has been submitted (Since 1.3.0)
      operationId: approveInvoice
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: serviceRequestId
          in: path
          description: The service request identifier
          required: true
          schema:
            type: string
        - name: invoiceId
          in: path
          description: The identifier for the invoice
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequestInvoiceOperationRequest'
        required: false
      responses:
        '200':
          description: Returns the details of the approved service request invoice
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRequestStatementResponse'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        operationType: custom-action
        resourceType: ServiceRequestInvoice
      x-codegen-request-body-name: body
  /claims/{claimId}/service-requests/{serviceRequestId}/invoices/{invoiceId}/mark-as-paid:
    post:
      summary: Mark an invoice as paid
      description: Mark an invoice as paid (Since 1.3.0)
      operationId: markInvoiceAsPaid
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: serviceRequestId
          in: path
          description: The service request identifier
          required: true
          schema:
            type: string
        - name: invoiceId
          in: path
          description: The identifier for the invoice
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequestInvoiceMarkAsPaidRequest'
        required: true
      responses:
        '200':
          description: Returns the details of the paid service request invoice
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRequestStatementResponse'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        operationType: custom-action
        resourceType: ServiceRequestInvoice
      x-codegen-request-body-name: body
  /claims/{claimId}/service-requests/{serviceRequestId}/invoices/{invoiceId}/withdraw:
    post:
      summary: Withdraws an invoice that has been submitted
      description: Withdraws an invoice that has been submitted (Since 1.2.0)
      operationId: withdrawInvoice
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: serviceRequestId
          in: path
          description: The service request identifier
          required: true
          schema:
            type: string
        - name: invoiceId
          in: path
          description: The identifier for the invoice
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequestInvoiceOperationRequest'
        required: true
      responses:
        '200':
          description: Returns the details of the withdrawn invoice
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRequestStatementResponse'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        allowForCompositeApi: false
        operationType: custom-action
        resourceType: ServiceRequestInvoice
      x-codegen-request-body-name: body
  /claims/{claimId}/service-requests/{serviceRequestId}/submit:
    post:
      summary: Requests service from specialist
      description: >-
        Submits the service request to the specialist for acceptance (with
        optional instruction) (Since 1.1.0)
      operationId: submitServiceRequest
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: serviceRequestId
          in: path
          description: The service request identifier
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRequestOperationRequest'
        required: false
      responses:
        '200':
          description: Returns the resulting service request (state)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRequestResponse'
      x-gw-sinceVersion: 1.1.0
      x-gw-extensions:
        operationType: custom-action
        resourceType: ServiceRequest
      x-codegen-request-body-name: body
  /claims/{claimId}/service-requests/{serviceRequestId}/try-auto-approve-quote:
    post:
      summary: Try automatically approving the latest quote on a Service Request
      description: Try automatically approving the latest quote on a Service Request
      operationId: tryAutoApproveQuote
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: serviceRequestId
          in: path
          description: The service request identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully run auto-approval process
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRequestResponse'
      x-gw-extensions:
        allowForCompositeApi: false
        operationType: custom-action
        parameters:
          - in: body
            name: body
            required: true
            schema:
              $ref: '#/definitions/ServiceRequestOperationRequest'
        resourceType: ServiceRequest
        x-gw-parameter-sets:
          - custom-action
  /claims/{claimId}/submit:
    post:
      summary: Submit this claim and transition it to the 'open' state
      description: Submit this claim and transition it to the 'open' state
      operationId: submitClaim
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimSubmitRequest'
        required: false
      responses:
        '200':
          description: Successfully submitted the claim
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimResponse'
      x-gw-extensions:
        operationType: custom-action
        resourceType: Claim
      x-codegen-request-body-name: body
  /claims/{claimId}/validate:
    post:
      summary: Validate a claim
      description: Validate a claim
      operationId: validate
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimValidationRequest'
        required: false
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimValidationResponse'
      x-gw-extensions:
        operationType: custom-action
        resourceType: Claim
      x-codegen-request-body-name: body
  /claims/{claimId}/vehicle-incidents:
    get:
      summary: Retrieve vehicle incidents on a claim
      description: Retrieve vehicle incidents on a claim
      operationId: getClaimVehicleIncidents
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleIncidentList'
      x-gw-extensions:
        childResourceType: VehicleIncident
        operationType: get-collection
        resourceType: ClaimVehicleIncidents
    post:
      summary: Create a new vehicle incident
      description: Create a new vehicle incident
      operationId: createClaimVehicleIncident
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleIncidentRequest'
        required: true
      responses:
        '201':
          description: Successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleIncidentResponse'
      x-gw-extensions:
        childResourceType: VehicleIncident
        operationType: post-collection
        resourceType: ClaimVehicleIncidents
      x-codegen-request-body-name: body
  /claims/{claimId}/vehicle-incidents/{incidentId}:
    get:
      summary: Retrieve a vehicle incident
      description: Retrieve a vehicle incident
      operationId: getVehicleIncident
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: incidentId
          in: path
          description: The identifier for the incident
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleIncidentResponse'
      x-gw-extensions:
        operationType: get-element
        resourceType: VehicleIncident
    delete:
      summary: Delete a vehicle incident on the given claim
      description: Delete a vehicle incident on the given claim
      operationId: deleteVehicleIncident
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: incidentId
          in: path
          description: The identifier for the incident
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful deletion
          content: {}
      x-gw-extensions:
        operationType: delete-element
        resourceType: VehicleIncident
    patch:
      summary: Update a vehicle incident
      description: Update a vehicle incident
      operationId: patchVehicleIncident
      parameters:
        - name: claimId
          in: path
          description: The identifier for the claim
          required: true
          schema:
            type: string
        - name: incidentId
          in: path
          description: The identifier for the incident
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleIncidentRequest'
        required: true
      responses:
        '200':
          description: Successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleIncidentResponse'
      x-gw-extensions:
        operationType: patch-element
        resourceType: VehicleIncident
      x-codegen-request-body-name: body
  /graph-schema:
    get:
      summary: Return the JSON Schema Draft-7 representation of the claim graph schema
      description: >-
        Return the JSON Schema Draft-7 representation of the claim graph schema
        (Since 1.2.0)
      operationId: getClaimGraphSchema
      parameters:
        - name: prettyPrint
          in: query
          description: >-
            Whether to pretty-print the returned schema, making it larger but
            more human readable. Defaults to false.
          schema:
            type: boolean
            default: false
        - name: inlineTypelists
          in: query
          description: >-
            Whether to include all referenced typelist values inline on
            properties. Defaults to false.
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        operationType: get-element
        resourceType: ClaimGraphSchema
  /openapi.json:
    get:
      summary: Return the Open API 3.0 representation of the schema
      description: Return the Open API 3.0 representation of the schema
      operationId: getOpenApiSchema
      parameters:
        - name: enablePolymorphism
          in: query
          description: >-
            Whether or not to use the `discriminator`/`oneOf` pattern to output
            schemas in cases where the valid set of fields can vary based on
            some attribute of the data such as the country or subtype.  Defaults
            to `true`. See the documentation for more information.
          schema:
            type: boolean
            default: true
        - name: filterByUser
          in: query
          description: >-
            Whether or not to filter endpoints and schema properties by the
            authorization of the caller. Defaults to `false`.
          schema:
            type: boolean
            default: false
        - name: omitInclusions
          in: query
          description: >-
            Whether or not to omit the `included` properties on request and
            response schemas.  Defaults to `false`. See the documentation for
            more information. (Since 1.4.0)
          schema:
            type: boolean
            default: false
            x-gw-sinceVersion: 1.4.0
          x-gw-sinceVersion: 1.4.0
        - name: prettyPrint
          in: query
          description: >-
            Whether or not to pretty-print the returned schema, making it larger
            but more human readable.  Defaults to `false`.
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
      x-gw-extensions:
        operationType: get-element
        resourceType: ClaimApiOpenApiSchema
  /role-constraints:
    get:
      summary: All contact role constraints list
      description: All contact role constraints list
      operationId: getContactRolesConstraints
      parameters:
        - name: schema
          in: query
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactRoleConstraintList'
      x-gw-extensions:
        childResourceType: ContactRoleConstraint
        operationType: get-collection
        resourceType: ContactRoleConstraints
  /role-constraints/{contactRoleId}:
    get:
      summary: The constraints of the given contact role
      description: The constraints of the given contact role
      operationId: getContactRoleConstraint
      parameters:
        - name: contactRoleId
          in: path
          description: The identifier for the contact role
          required: true
          schema:
            type: string
        - name: schema
          in: query
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactRoleConstraintResponse'
      x-gw-extensions:
        operationType: get-element
        resourceType: ContactRoleConstraint
  /search/claims:
    post:
      summary: Deprecated. Searches for active claims that match the specified criteria
      description: >-
        Deprecated. Please use /search/claims-v2. Searches for active claims
        that match the specified criteria.
      operationId: searchClaims
      parameters:
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimSearchRequest'
        required: true
      responses:
        '200':
          description: Returns a list of active claims that match the search criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimSearchResultList'
      x-gw-extensions:
        childResourceType: ClaimSearchResult
        operationType: search-collection
        resourceType: ClaimSearch
      x-codegen-request-body-name: body
  /search/claims-freetext:
    post:
      summary: Searches for claims that match the specified criteria
      description: Searches for claims that match the specified criteria (Since 1.4.0)
      operationId: searchClaimsFreeText
      parameters:
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimSolrSearchRequest'
        required: true
      responses:
        '200':
          description: Returns a list of claims that match the search criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimSolrSearchResultList'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        childResourceType: ClaimSolrSearchResult
        operationType: search-collection
        resourceType: ClaimSolrSearch
      x-codegen-request-body-name: body
  /search/claims-v2:
    post:
      summary: Searches for active or archived claims that match the specified criteria
      description: >-
        Searches for active or archived claims that match the specified criteria
        (Since 1.3.1)
      operationId: searchClaimsV2
      parameters:
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimSearchV2Request'
        required: true
      responses:
        '200':
          description: >-
            Returns a list of active or archived claims that match the search
            criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimSearchResultWrapperList'
      x-gw-sinceVersion: 1.3.1
      x-gw-extensions:
        childResourceType: ClaimSearchResultWrapper
        operationType: search-collection
        resourceType: ClaimSearchV2
      x-codegen-request-body-name: body
  /service-requests:
    get:
      summary: Retrieves service requests
      description: Retrieves a list of assigned service requests (Since 1.2.0)
      operationId: getServiceRequests
      parameters:
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Returns a list of service requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRequestList'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        childResourceType: ServiceRequest
        operationType: get-collection
        resourceType: ServiceRequests
  /swagger.json:
    get:
      summary: Returns the Swagger schema for this API
      description: Returns a Swagger 2.0 schema for this API as json
      operationId: generateDocs
      responses:
        '200':
          description: Successful operation
          content: {}
      x-gw-authenticated: false
  /unverified-policies:
    get:
      summary: Get all unverified policies
      description: Get all unverified policies (Since 1.2.0)
      operationId: getUnverifiedPolicies
      parameters:
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesList'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        childResourceType: UnverifiedPolicy
        operationType: get-collection
        resourceType: UnverifiedPolicies
    post:
      summary: Create an unverified policy
      description: >-
        Create an unverified policy for a new claim; this endpoint cannot be
        used in isolation, and can only be used as part of a composite request
        followed by a /claims POST (Since 1.2.0)
      operationId: postUnverifiedPolicy
      parameters:
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRequest'
        required: true
      responses:
        '201':
          description: Successful creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyResponse'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        childResourceType: UnverifiedPolicy
        operationType: post-collection
        resourceType: UnverifiedPolicies
      x-codegen-request-body-name: body
  /unverified-policies/{policyId}:
    get:
      summary: Get details of an unverified policy
      description: Get details of an unverified policy (Since 1.2.0)
      operationId: getUnverifiedPolicy
      parameters:
        - name: policyId
          in: path
          description: The identifier for the policy (Since 1.2.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.2.0
          x-gw-sinceVersion: 1.2.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyResponse'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        operationType: get-element
        resourceType: UnverifiedPolicy
    patch:
      summary: Update an unverified policy
      description: Update an unverified policy (Since 1.2.0)
      operationId: patchUnverifiedPolicy
      parameters:
        - name: policyId
          in: path
          description: The identifier for the policy (Since 1.2.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.2.0
          x-gw-sinceVersion: 1.2.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyResponse'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        operationType: patch-element
        resourceType: UnverifiedPolicy
      x-codegen-request-body-name: body
  /unverified-policies/{policyId}/contacts:
    post:
      summary: Create a policy contact
      description: >-
        Create a contact on an unverified policy that has not yet been attached
        to a claim; if this policy has already been attached to a claim, use
        /claims/{claimId}}/contacts POST instead (Since 1.2.0)
      operationId: postUnverifiedPolicyContact
      parameters:
        - name: policyId
          in: path
          description: The identifier for the policy (Since 1.2.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.2.0
          x-gw-sinceVersion: 1.2.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactRequest'
        required: true
      responses:
        '201':
          description: Successful creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactResponse'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        childResourceType: UnverifiedPolicyContact
        operationType: post-collection
        resourceType: UnverifiedPolicyContacts
      x-codegen-request-body-name: body
  /unverified-policies/{policyId}/coverages:
    get:
      summary: Retrieves a list of policy coverages on an unverified policy
      description: >-
        Retrieves a list of policy coverages on an unverified policy (Since
        1.2.0)
      operationId: getUnverifiedPolicyCoverages
      parameters:
        - name: policyId
          in: path
          description: The identifier for the policy (Since 1.2.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.2.0
          x-gw-sinceVersion: 1.2.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnverifiedPolicyCoverageList'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        childResourceType: UnverifiedPolicyCoverage
        operationType: get-collection
        resourceType: UnverifiedPolicyCoverages
    post:
      summary: Create a policy coverage on an unverified policy
      description: Create a coverage on an unverified policy (Since 1.2.0)
      operationId: postUnverifiedPolicyCoverage
      parameters:
        - name: policyId
          in: path
          description: The identifier for the policy (Since 1.2.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.2.0
          x-gw-sinceVersion: 1.2.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnverifiedPolicyCoverageRequest'
        required: true
      responses:
        '201':
          description: Successful creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnverifiedPolicyCoverageResponse'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        childResourceType: UnverifiedPolicyCoverage
        operationType: post-collection
        resourceType: UnverifiedPolicyCoverages
      x-codegen-request-body-name: body
  /unverified-policies/{policyId}/coverages/{coverageId}:
    get:
      summary: Details of a coverage on an unverified policy
      description: Details of a coverage on an unverified policy (Since 1.2.0)
      operationId: getUnverifiedPolicyCoverage
      parameters:
        - name: policyId
          in: path
          description: The identifier for the policy (Since 1.2.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.2.0
          x-gw-sinceVersion: 1.2.0
        - name: coverageId
          in: path
          description: The identifier for the coverage
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnverifiedPolicyCoverageResponse'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        operationType: get-element
        resourceType: UnverifiedPolicyCoverage
    patch:
      summary: Update a coverage on an unverified policy
      description: Update a coverage on an unverified policy (Since 1.2.0)
      operationId: patchUnverifiedPolicyCoverage
      parameters:
        - name: policyId
          in: path
          description: The identifier for the policy (Since 1.2.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.2.0
          x-gw-sinceVersion: 1.2.0
        - name: coverageId
          in: path
          description: The identifier for the coverage
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnverifiedPolicyCoverageRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnverifiedPolicyCoverageResponse'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        operationType: patch-element
        resourceType: UnverifiedPolicyCoverage
      x-codegen-request-body-name: body
  /unverified-policies/{policyId}/location-based-risk-units:
    get:
      summary: Retrieves a list of location based risk units
      description: Retrieves a list of location based risk units (Since 1.2.0)
      operationId: getUnverifiedLocationBasedRiskUnits
      parameters:
        - name: policyId
          in: path
          description: The identifier for the policy (Since 1.2.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.2.0
          x-gw-sinceVersion: 1.2.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationBasedRiskUnitList'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        childResourceType: UnverifiedLocationBasedRiskUnit
        operationType: get-collection
        resourceType: UnverifiedLocationBasedRiskUnits
    post:
      summary: Create a location-based risk unit
      description: Create a location-based risk unit (Since 1.2.0)
      operationId: postUnverifiedLocationBasedRiskUnit
      parameters:
        - name: policyId
          in: path
          description: The identifier for the policy (Since 1.2.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.2.0
          x-gw-sinceVersion: 1.2.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationBasedRiskUnitRequest'
        required: true
      responses:
        '201':
          description: Successful creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationBasedRiskUnitResponse'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        childResourceType: UnverifiedLocationBasedRiskUnit
        operationType: post-collection
        resourceType: UnverifiedLocationBasedRiskUnits
      x-codegen-request-body-name: body
  /unverified-policies/{policyId}/location-based-risk-units/{locationBasedRiskUnitId}:
    get:
      summary: Get a location based risk unit
      description: Get a location based risk unit (Since 1.2.0)
      operationId: getUnverifiedLocationBasedRiskUnit
      parameters:
        - name: policyId
          in: path
          description: The identifier for the policy (Since 1.2.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.2.0
          x-gw-sinceVersion: 1.2.0
        - name: locationBasedRiskUnitId
          in: path
          description: The identifier for the location based risk unit
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationBasedRiskUnitResponse'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        operationType: get-element
        resourceType: UnverifiedLocationBasedRiskUnit
    patch:
      summary: Update a location based risk unit
      description: Update a location based risk unit (Since 1.2.0)
      operationId: patchUnverifiedLocationBasedRiskUnit
      parameters:
        - name: policyId
          in: path
          description: The identifier for the policy (Since 1.2.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.2.0
          x-gw-sinceVersion: 1.2.0
        - name: locationBasedRiskUnitId
          in: path
          description: The identifier for the location based risk unit
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationBasedRiskUnitRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationBasedRiskUnitResponse'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        operationType: patch-element
        resourceType: UnverifiedLocationBasedRiskUnit
      x-codegen-request-body-name: body
  /unverified-policies/{policyId}/location-based-risk-units/{locationBasedRiskUnitId}/coverages:
    get:
      summary: Retrieves a list of coverages on a location based risk unit
      description: >-
        Retrieves a list of coverages on a location based risk unit (Since
        1.2.0)
      operationId: getUnverifiedLocationBasedRiskUnitCoverages
      parameters:
        - name: policyId
          in: path
          description: The identifier for the policy (Since 1.2.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.2.0
          x-gw-sinceVersion: 1.2.0
        - name: locationBasedRiskUnitId
          in: path
          description: The identifier for the location based risk unit
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnverifiedPolicyCoverageList'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        childResourceType: UnverifiedLocationBasedRiskUnitCoverage
        operationType: get-collection
        resourceType: UnverifiedLocationBasedRiskUnitCoverages
    post:
      summary: Create a coverage on a location based risk unit
      description: Create a coverage on a location based risk unit (Since 1.2.0)
      operationId: postUnverifiedLocationBasedRiskUnitCoverage
      parameters:
        - name: policyId
          in: path
          description: The identifier for the policy (Since 1.2.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.2.0
          x-gw-sinceVersion: 1.2.0
        - name: locationBasedRiskUnitId
          in: path
          description: The identifier for the location based risk unit
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnverifiedPolicyCoverageRequest'
        required: true
      responses:
        '201':
          description: Successful creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnverifiedPolicyCoverageResponse'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        childResourceType: UnverifiedLocationBasedRiskUnitCoverage
        operationType: post-collection
        resourceType: UnverifiedLocationBasedRiskUnitCoverages
      x-codegen-request-body-name: body
  /unverified-policies/{policyId}/location-based-risk-units/{locationBasedRiskUnitId}/coverages/{coverageId}:
    get:
      summary: Details of a coverage on a location based risk unit
      description: Details of a coverage on a location based risk unit (Since 1.2.0)
      operationId: getUnverifiedLocationBasedRiskUnitCoverage
      parameters:
        - name: policyId
          in: path
          description: The identifier for the policy (Since 1.2.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.2.0
          x-gw-sinceVersion: 1.2.0
        - name: locationBasedRiskUnitId
          in: path
          description: The identifier for the location based risk unit
          required: true
          schema:
            type: string
        - name: coverageId
          in: path
          description: The identifier for the coverage
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnverifiedPolicyCoverageResponse'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        operationType: get-element
        resourceType: UnverifiedLocationBasedRiskUnitCoverage
    patch:
      summary: Update a coverage on a location based risk unit
      description: Update a coverage on a location based risk unit (Since 1.2.0)
      operationId: patchUnverifiedLocationBasedRiskUnitCoverage
      parameters:
        - name: policyId
          in: path
          description: The identifier for the policy (Since 1.2.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.2.0
          x-gw-sinceVersion: 1.2.0
        - name: locationBasedRiskUnitId
          in: path
          description: The identifier for the location based risk unit
          required: true
          schema:
            type: string
        - name: coverageId
          in: path
          description: The identifier for the coverage
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnverifiedPolicyCoverageRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnverifiedPolicyCoverageResponse'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        operationType: patch-element
        resourceType: UnverifiedLocationBasedRiskUnitCoverage
      x-codegen-request-body-name: body
  /unverified-policies/{policyId}/locations:
    get:
      summary: Retrieves a list of policy locations
      description: Retrieves a list of policy locations (Since 1.2.0)
      operationId: getUnverifiedPolicyLocations
      parameters:
        - name: policyId
          in: path
          description: The identifier for the policy (Since 1.2.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.2.0
          x-gw-sinceVersion: 1.2.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnverifiedPolicyLocationList'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        childResourceType: UnverifiedPolicyLocation
        operationType: get-collection
        resourceType: UnverifiedPolicyLocations
    post:
      summary: Create a policy location
      description: Create a policy location on an unverified policy (Since 1.2.0)
      operationId: postUnverifiedPolicyLocation
      parameters:
        - name: policyId
          in: path
          description: The identifier for the policy (Since 1.2.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.2.0
          x-gw-sinceVersion: 1.2.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnverifiedPolicyLocationRequest'
        required: true
      responses:
        '201':
          description: Successful creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnverifiedPolicyLocationResponse'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        childResourceType: UnverifiedPolicyLocation
        operationType: post-collection
        resourceType: UnverifiedPolicyLocations
      x-codegen-request-body-name: body
  /unverified-policies/{policyId}/locations/{locationId}:
    get:
      summary: Details of a location on a policy
      description: Details of a location on a policy (Since 1.2.0)
      operationId: getUnverifiedPolicyLocation
      parameters:
        - name: policyId
          in: path
          description: The identifier for the policy (Since 1.2.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.2.0
          x-gw-sinceVersion: 1.2.0
        - name: locationId
          in: path
          description: The identifier for the location
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnverifiedPolicyLocationResponse'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        operationType: get-element
        resourceType: UnverifiedPolicyLocation
    patch:
      summary: Update a location on a policy
      description: Update a location on a policy (Since 1.2.0)
      operationId: patchUnverifiedPolicyLocation
      parameters:
        - name: policyId
          in: path
          description: The identifier for the policy (Since 1.2.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.2.0
          x-gw-sinceVersion: 1.2.0
        - name: locationId
          in: path
          description: The identifier for the location
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnverifiedPolicyLocationRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnverifiedPolicyLocationResponse'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        operationType: patch-element
        resourceType: UnverifiedPolicyLocation
      x-codegen-request-body-name: body
  /unverified-policies/{policyId}/vehicle-risk-units:
    get:
      summary: Retrieves a list of vehicle risk units
      description: Retrieves a list of vehicle risk units (Since 1.2.0)
      operationId: getUnverifiedVehicleRiskUnits
      parameters:
        - name: policyId
          in: path
          description: The identifier for the policy (Since 1.2.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.2.0
          x-gw-sinceVersion: 1.2.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleRiskUnitList'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        childResourceType: UnverifiedVehicleRiskUnit
        operationType: get-collection
        resourceType: UnverifiedVehicleRiskUnits
    post:
      summary: Create a vehicle risk unit
      description: Create a vehicle risk unit (Since 1.2.0)
      operationId: postUnverifiedVehicleRiskUnit
      parameters:
        - name: policyId
          in: path
          description: The identifier for the policy (Since 1.2.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.2.0
          x-gw-sinceVersion: 1.2.0
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleRiskUnitRequest'
        required: true
      responses:
        '201':
          description: Successful creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleRiskUnitResponse'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        childResourceType: UnverifiedVehicleRiskUnit
        operationType: post-collection
        resourceType: UnverifiedVehicleRiskUnits
      x-codegen-request-body-name: body
  /unverified-policies/{policyId}/vehicle-risk-units/{vehicleRiskUnitId}:
    get:
      summary: Get a vehicle risk unit
      description: Get a vehicle risk unit (Since 1.2.0)
      operationId: getUnverifiedVehicleRiskUnit
      parameters:
        - name: policyId
          in: path
          description: The identifier for the policy (Since 1.2.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.2.0
          x-gw-sinceVersion: 1.2.0
        - name: vehicleRiskUnitId
          in: path
          description: The identifier for the vehicle risk unit
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleRiskUnitResponse'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        operationType: get-element
        resourceType: UnverifiedVehicleRiskUnit
    patch:
      summary: Update a vehicle risk unit
      description: Update a vehicle risk unit (Since 1.2.0)
      operationId: patchUnverifiedVehicleRiskUnit
      parameters:
        - name: policyId
          in: path
          description: The identifier for the policy (Since 1.2.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.2.0
          x-gw-sinceVersion: 1.2.0
        - name: vehicleRiskUnitId
          in: path
          description: The identifier for the vehicle risk unit
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleRiskUnitRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleRiskUnitResponse'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        operationType: patch-element
        resourceType: UnverifiedVehicleRiskUnit
      x-codegen-request-body-name: body
  /unverified-policies/{policyId}/vehicle-risk-units/{vehicleRiskUnitId}/coverages:
    get:
      summary: Retrieves a list of coverages on a vehicle risk unit
      description: Retrieves a list of coverages on a vehicle risk unit (Since 1.2.0)
      operationId: getUnverifiedVehicleRiskUnitCoverages
      parameters:
        - name: policyId
          in: path
          description: The identifier for the policy (Since 1.2.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.2.0
          x-gw-sinceVersion: 1.2.0
        - name: vehicleRiskUnitId
          in: path
          description: The identifier for the vehicle risk unit
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnverifiedPolicyCoverageList'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        childResourceType: UnverifiedVehicleRiskUnitCoverage
        operationType: get-collection
        resourceType: UnverifiedVehicleRiskUnitCoverages
    post:
      summary: Create a coverage on a vehicle risk unit
      description: Create a coverage on a vehicle risk unit (Since 1.2.0)
      operationId: postUnverifiedVehicleRiskUnitCoverage
      parameters:
        - name: policyId
          in: path
          description: The identifier for the policy (Since 1.2.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.2.0
          x-gw-sinceVersion: 1.2.0
        - name: vehicleRiskUnitId
          in: path
          description: The identifier for the vehicle risk unit
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnverifiedPolicyCoverageRequest'
        required: true
      responses:
        '201':
          description: Successful creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnverifiedPolicyCoverageResponse'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        childResourceType: UnverifiedVehicleRiskUnitCoverage
        operationType: post-collection
        resourceType: UnverifiedVehicleRiskUnitCoverages
      x-codegen-request-body-name: body
  /unverified-policies/{policyId}/vehicle-risk-units/{vehicleRiskUnitId}/coverages/{coverageId}:
    get:
      summary: Details of a coverage on a vehicle risk unit
      description: Details of a coverage on a vehicle risk unit (Since 1.2.0)
      operationId: getUnverifiedVehicleRiskUnitCoverage
      parameters:
        - name: policyId
          in: path
          description: The identifier for the policy (Since 1.2.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.2.0
          x-gw-sinceVersion: 1.2.0
        - name: vehicleRiskUnitId
          in: path
          description: The identifier for the vehicle risk unit
          required: true
          schema:
            type: string
        - name: coverageId
          in: path
          description: The identifier for the coverage
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnverifiedPolicyCoverageResponse'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        operationType: get-element
        resourceType: UnverifiedVehicleRiskUnitCoverage
    patch:
      summary: Update a coverage on a vehicle risk unit
      description: Update a coverage on a vehicle risk unit (Since 1.2.0)
      operationId: patchUnverifiedVehicleRiskUnitCoverage
      parameters:
        - name: policyId
          in: path
          description: The identifier for the policy (Since 1.2.0)
          required: true
          schema:
            type: string
            x-gw-sinceVersion: 1.2.0
          x-gw-sinceVersion: 1.2.0
        - name: vehicleRiskUnitId
          in: path
          description: The identifier for the vehicle risk unit
          required: true
          schema:
            type: string
        - name: coverageId
          in: path
          description: The identifier for the coverage
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnverifiedPolicyCoverageRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnverifiedPolicyCoverageResponse'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        operationType: patch-element
        resourceType: UnverifiedVehicleRiskUnitCoverage
      x-codegen-request-body-name: body
components:
  schemas:
    ActionWithReasonRequestAttributes:
      type: object
      properties:
        reason:
          type: string
    ActionWithReasonRequestBody:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ActionWithReasonRequestData'
    ActionWithReasonRequestData:
      required:
        - attributes
      type: object
      properties:
        attributes:
          $ref: '#/components/schemas/ActionWithReasonRequestAttributes'
    ActivityData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/Activity'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    ActivityList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ActivityData'
        included:
          $ref: '#/components/schemas/ActivityResponseInclusions'
    ActivityPatternData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/ActivityPattern'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    ActivityPatternList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ActivityPatternData'
        included:
          $ref: '#/components/schemas/ActivityResponseInclusions'
    ActivityRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ActivityData'
        included:
          $ref: '#/components/schemas/ClaimRequestInclusions'
    ActivityResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ActivityData'
        included:
          $ref: '#/components/schemas/ActivityResponseInclusions'
    ActivityResponseInclusions:
      type: object
      properties:
        Assignee:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/AssigneeData'
        Note:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/NoteData'
    AssessmentContentItemData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/AssessmentContentItem'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    AssessmentContentItemList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/AssessmentContentItemData'
    AssessmentContentItemRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AssessmentContentItemData'
    AssessmentContentItemResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AssessmentContentItemData'
    AssessmentSummaryData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/AssessmentSummary'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    AssessmentSummaryList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/AssessmentSummaryData'
        included:
          $ref: '#/components/schemas/AssessmentSummaryResponseInclusions'
    AssessmentSummaryRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AssessmentSummaryData'
        included:
          $ref: '#/components/schemas/AssessmentSummaryRequestInclusions'
    AssessmentSummaryRequestInclusions:
      type: object
      properties:
        Exposure:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ExposureData'
    AssessmentSummaryResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AssessmentSummaryData'
        included:
          $ref: '#/components/schemas/AssessmentSummaryResponseInclusions'
    AssessmentSummaryResponseInclusions:
      type: object
      properties:
        Exposure:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ExposureData'
    AssigneeData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/Assignee'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    AssigneeList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/AssigneeData'
        included:
          $ref: '#/components/schemas/ActivityResponseInclusions'
    ChangeExpectedDateAttributes:
      required:
        - newdate
      type: object
      properties:
        newdate:
          type: string
          format: date
          x-gw-extensions:
            after: yesterday
        reason:
          type: string
    ChangeExpectedDateBody:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ChangeExpectedDateData'
    ChangeExpectedDateData:
      required:
        - attributes
      type: object
      properties:
        attributes:
          $ref: '#/components/schemas/ChangeExpectedDateAttributes'
    CheckData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/Check'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    CheckList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/CheckData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    CheckRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CheckData'
        included:
          $ref: '#/components/schemas/ClaimRequestInclusions'
    CheckResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CheckData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    CheckSetData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/CheckSet'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    CheckSetList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/CheckSetData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    CheckSetRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CheckSetData'
        included:
          $ref: '#/components/schemas/ClaimRequestInclusions'
    CheckSetResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CheckSetData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    ClaimAssigneeData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/ClaimAssignee'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    ClaimAssignmentRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ClaimAssigneeData'
    ClaimCloseRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ClaimCloseRequestData'
    ClaimCloseRequestAttributes:
      type: object
      properties:
        closedOutcome:
          $ref: '#/components/schemas/TypeKeyReference'
        reason:
          type: string
    ClaimCloseRequestData:
      required:
        - attributes
      type: object
      properties:
        attributes:
          $ref: '#/components/schemas/ClaimCloseRequestAttributes'
    ClaimContactData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/ClaimContact'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    ClaimContactList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ClaimContactData'
        included:
          $ref: '#/components/schemas/ActivityResponseInclusions'
    ClaimData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/Claim'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    ClaimDocumentRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DocumentData'
    ClaimDocumentResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DocumentData'
        included:
          $ref: '#/components/schemas/DocumentResponseInclusions'
    ClaimInfoData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/ClaimInfo'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    ClaimInfoResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ClaimInfoData'
    ClaimInfosList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ClaimInfoData'
    ClaimRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ClaimData'
        included:
          $ref: '#/components/schemas/ClaimRequestInclusions'
    ClaimRequestInclusions:
      type: object
      properties:
        AssessmentContentItem:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/AssessmentContentItemData'
        AssessmentSummary:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/AssessmentSummaryData'
        ClaimContact:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ClaimContactData'
        DwellingIncident:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/DwellingIncidentData'
        Exposure:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ExposureData'
        FixedPropertyIncident:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/FixedPropertyIncidentData'
        InjuryIncident:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/InjuryIncidentData'
        LivingExpensesIncident:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/LivingExpensesIncidentData'
        Note:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/NoteData'
        OtherStructureIncident:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/OtherStructureIncidentData'
        PropertyContentsIncident:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/PropertyContentsIncidentData'
        ServiceRequest:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ServiceRequestData'
        VehicleIncident:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/VehicleIncidentData'
    ClaimResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ClaimData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    ClaimResponseInclusions:
      type: object
      properties:
        Activity:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ActivityData'
        ActivityPattern:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ActivityPatternData'
        AssessmentContentItem:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/AssessmentContentItemData'
        AssessmentSummary:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/AssessmentSummaryData'
        Assignee:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/AssigneeData'
        Check:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/CheckData'
        ClaimContact:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ClaimContactData'
        DwellingIncident:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/DwellingIncidentData'
        Endorsement:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/EndorsementData'
        Exposure:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ExposureData'
        FixedPropertyIncident:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/FixedPropertyIncidentData'
        GenericRelation:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/GenericRelationData'
        InjuryIncident:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/InjuryIncidentData'
        LivingExpensesIncident:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/LivingExpensesIncidentData'
        LocationBasedRiskUnit:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/LocationBasedRiskUnitData'
        LocationBasedRiskUnitCoverage:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/CoverageData'
        Note:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/NoteData'
        OtherStructureIncident:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/OtherStructureIncidentData'
        Payment:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/TransactionData'
        Policy:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/PolicyData'
        PolicyCoverage:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/CoverageData'
        PolicyLocation:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/PolicyLocationData'
        PropertyContentsIncident:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/PropertyContentsIncidentData'
        Recovery:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/TransactionData'
        RecoveryReserve:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/TransactionData'
        RecoveryReserveSet:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/RecoveryReserveSetData'
        RecoverySet:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/RecoverySetData'
        Reserve:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/TransactionData'
        ReserveSet:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ReserveSetData'
        ServiceRequest:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ServiceRequestData'
        VehicleIncident:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/VehicleIncidentData'
        VehicleRiskUnit:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/VehicleRiskUnitData'
        VehicleRiskUnitCoverage:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/CoverageData'
    ClaimSearchRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ClaimSearchRequestData'
    ClaimSearchRequestData:
      required:
        - attributes
      type: object
      properties:
        attributes:
          $ref: '#/components/schemas/ClaimSearchRequestAttributes'
    ClaimSearchResultData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/ClaimSearchResult'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    ClaimSearchResultList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ClaimSearchResultData'
    ClaimSearchResultWrapperData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/ClaimSearchResultWrapper'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    ClaimSearchResultWrapperList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ClaimSearchResultWrapperData'
    ClaimSearchV2Request:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ClaimSearchV2RequestData'
    ClaimSearchV2RequestData:
      required:
        - attributes
      type: object
      properties:
        attributes:
          $ref: '#/components/schemas/ClaimSearchV2Attributes'
    ClaimSolrSearchRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ClaimSolrSearchRequestData'
    ClaimSolrSearchRequestData:
      required:
        - attributes
      type: object
      properties:
        attributes:
          $ref: '#/components/schemas/ClaimSolrSearchRequestAttributes'
    ClaimSolrSearchResultData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/ClaimSolrSearchResult'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    ClaimSolrSearchResultList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ClaimSolrSearchResultData'
    ClaimSubmitRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ClaimSubmitRequestData'
    ClaimSubmitRequestAttributes:
      type: object
      properties:
        initialAssignment:
          $ref: '#/components/schemas/Assignee'
    ClaimSubmitRequestData:
      required:
        - attributes
      type: object
      properties:
        attributes:
          $ref: '#/components/schemas/ClaimSubmitRequestAttributes'
    ClaimValidationData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/ValidationResult'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    ClaimValidationRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ClaimValidationRequestData'
    ClaimValidationRequestAttributes:
      required:
        - validateExposures
        - validationLevel
      type: object
      properties:
        validateExposures:
          type: boolean
        validationLevel:
          $ref: '#/components/schemas/TypeKeyReference'
    ClaimValidationRequestData:
      required:
        - attributes
      type: object
      properties:
        attributes:
          $ref: '#/components/schemas/ClaimValidationRequestAttributes'
    ClaimValidationResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ClaimValidationData'
    ClaimsList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ClaimData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    ContactRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ClaimContactData'
    ContactResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ClaimContactData'
    ContactRoleConstraintData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/ContactRoleConstraint'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    ContactRoleConstraintList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ContactRoleConstraintData'
    ContactRoleConstraintResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ContactRoleConstraintData'
    CoverageData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/Coverage'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    DataEnvelope:
      title: Data envelope
      type: object
      properties:
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        links:
          $ref: '#/components/schemas/framework_Links'
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
      description: >-
        Data envelope for requests and responses for individual elements. The
        primary data for the element will be in the `attributes` field.
    DataListEnvelope:
      title: Data list envelope
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
      description: >-
        Data envelope for responses for lists of elements. The primary list of
        elements will be in the `data` field.
    DocumentContentData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/DocumentContent'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    DocumentContentsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DocumentContentData'
    DocumentData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/Document'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    DocumentList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/DocumentData'
    DocumentResponseInclusions:
      type: object
      properties:
        ClaimDocumentContent:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/DocumentContentData'
    DwellingIncidentData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/DwellingIncident'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    DwellingIncidentList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/DwellingIncidentData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    DwellingIncidentRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DwellingIncidentData'
    DwellingIncidentResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DwellingIncidentData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    EndorsementData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/Endorsement'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    ExposureAssigneeData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/ExposureAssignee'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    ExposureAssignmentRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ExposureAssigneeData'
    ExposureCloseRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ExposureCloseRequestData'
    ExposureCloseRequestAttributes:
      type: object
      properties:
        closedOutcome:
          $ref: '#/components/schemas/TypeKeyReference'
        reason:
          type: string
    ExposureCloseRequestData:
      required:
        - attributes
      type: object
      properties:
        attributes:
          $ref: '#/components/schemas/ExposureCloseRequestAttributes'
    ExposureData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/Exposure'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    ExposureRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ExposureData'
        included:
          $ref: '#/components/schemas/ClaimRequestInclusions'
    ExposureResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ExposureData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    ExposureValidationData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/ValidationResult'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    ExposureValidationRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ExposureValidationRequestData'
    ExposureValidationRequestAttributes:
      required:
        - validateClaim
        - validationLevel
      type: object
      properties:
        validateClaim:
          type: boolean
        validationLevel:
          $ref: '#/components/schemas/TypeKeyReference'
    ExposureValidationRequestData:
      required:
        - attributes
      type: object
      properties:
        attributes:
          $ref: '#/components/schemas/ExposureValidationRequestAttributes'
    ExposureValidationResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ExposureValidationData'
    ExposuresList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ExposureData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    FixedPropertyIncidentData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/FixedPropertyIncident'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    FixedPropertyIncidentList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/FixedPropertyIncidentData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    FixedPropertyIncidentRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/FixedPropertyIncidentData'
        included:
          $ref: '#/components/schemas/ClaimRequestInclusions'
    FixedPropertyIncidentResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/FixedPropertyIncidentData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    GenericRelationData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/GenericRelation'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    GenericRelationList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/GenericRelationData'
    InjuryIncidentData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/InjuryIncident'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    InjuryIncidentList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/InjuryIncidentData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    InjuryIncidentRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/InjuryIncidentData'
        included:
          $ref: '#/components/schemas/ClaimRequestInclusions'
    InjuryIncidentResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/InjuryIncidentData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    IntakeInteractionData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/IntakeInteraction'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    IntakeInteractionRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/IntakeInteractionData'
    IntakeInteractionResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/IntakeInteractionData'
    IntakeInteractionsList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/IntakeInteractionData'
    LivingExpensesIncidentData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/LivingExpensesIncident'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    LivingExpensesIncidentList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/LivingExpensesIncidentData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    LivingExpensesIncidentRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/LivingExpensesIncidentData'
    LivingExpensesIncidentResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/LivingExpensesIncidentData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    LocationBasedRiskUnitData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/LocationBasedRiskUnit'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    LocationBasedRiskUnitList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/LocationBasedRiskUnitData'
    LocationBasedRiskUnitRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/LocationBasedRiskUnitData'
    LocationBasedRiskUnitResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/LocationBasedRiskUnitData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    NoteData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/Note'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    NoteList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/NoteData'
        included:
          $ref: '#/components/schemas/ActivityResponseInclusions'
    NoteRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/NoteData'
    NoteResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/NoteData'
        included:
          $ref: '#/components/schemas/ActivityResponseInclusions'
    OtherStructureIncidentData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/OtherStructureIncident'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    OtherStructureIncidentList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/OtherStructureIncidentData'
    OtherStructureIncidentRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/OtherStructureIncidentData'
    OtherStructureIncidentResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/OtherStructureIncidentData'
    PoliciesList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/PolicyData'
    PolicyCoverageList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/CoverageData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    PolicyCoverageResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CoverageData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    PolicyData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/Policy'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    PolicyEndorsementList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/EndorsementData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    PolicyEndorsementResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EndorsementData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    PolicyLocationData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/PolicyLocation'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    PolicyLocationList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/PolicyLocationData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    PolicyLocationResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PolicyLocationData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    PolicyRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PolicyData'
    PolicyResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PolicyData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    PropertyContentsIncidentData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/PropertyContentsIncident'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    PropertyContentsIncidentList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/PropertyContentsIncidentData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    PropertyContentsIncidentRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PropertyContentsIncidentData'
        included:
          $ref: '#/components/schemas/ClaimRequestInclusions'
    PropertyContentsIncidentResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PropertyContentsIncidentData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    RecoveryReserveSetData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/RecoveryReserveSet'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    RecoveryReserveSetList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/RecoveryReserveSetData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    RecoveryReserveSetRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/RecoveryReserveSetData'
        included:
          $ref: '#/components/schemas/ClaimRequestInclusions'
    RecoveryReserveSetResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/RecoveryReserveSetData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    RecoverySetData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/RecoverySet'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    RecoverySetList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/RecoverySetData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    RecoverySetRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/RecoverySetData'
        included:
          $ref: '#/components/schemas/ClaimRequestInclusions'
    RecoverySetResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/RecoverySetData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    ReserveSetData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/ReserveSet'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    ReserveSetList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ReserveSetData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    ReserveSetRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ReserveSetData'
        included:
          $ref: '#/components/schemas/ClaimRequestInclusions'
    ReserveSetResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ReserveSetData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    ServiceRequestAssigneeData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/ServiceRequestAssignee'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    ServiceRequestAssignmentRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ServiceRequestAssigneeData'
    ServiceRequestData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/ServiceRequest'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    ServiceRequestInvoiceMarkAsPaidData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/ServiceRequestInvoicePayInfo'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    ServiceRequestInvoiceMarkAsPaidRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ServiceRequestInvoiceMarkAsPaidData'
    ServiceRequestInvoiceOperationData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/ServiceRequestInvoiceOperationContext'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    ServiceRequestInvoiceOperationRequest:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ServiceRequestInvoiceOperationData'
    ServiceRequestList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ServiceRequestData'
        included:
          $ref: '#/components/schemas/ServiceRequestResponseInclusions'
    ServiceRequestOperationData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/ServiceRequestOperationContext'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    ServiceRequestOperationRequest:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ServiceRequestOperationData'
    ServiceRequestRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ServiceRequestData'
        included:
          $ref: '#/components/schemas/ClaimRequestInclusions'
    ServiceRequestResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ServiceRequestData'
        included:
          $ref: '#/components/schemas/ServiceRequestResponseInclusions'
    ServiceRequestResponseInclusions:
      type: object
      properties:
        Claim:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ClaimData'
        ClaimContact:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ClaimContactData'
        Exposure:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ExposureData'
        ServiceRequestInvoice:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ServiceRequestStatementData'
    ServiceRequestStatementData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/ServiceRequestStatement'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    ServiceRequestStatementList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ServiceRequestStatementData'
        included:
          $ref: '#/components/schemas/ServiceRequestResponseInclusions'
    ServiceRequestStatementRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ServiceRequestStatementData'
    ServiceRequestStatementResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ServiceRequestStatementData'
        included:
          $ref: '#/components/schemas/ServiceRequestResponseInclusions'
    TransactionData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/Transaction'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    TransactionList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/TransactionData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    TransactionResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TransactionData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    UnverifiedPolicyCoverageData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/Coverage'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    UnverifiedPolicyCoverageList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/UnverifiedPolicyCoverageData'
    UnverifiedPolicyCoverageRequest:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UnverifiedPolicyCoverageData'
    UnverifiedPolicyCoverageResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UnverifiedPolicyCoverageData'
    UnverifiedPolicyLocationData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/UnverifiedPolicyLocation'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    UnverifiedPolicyLocationList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/UnverifiedPolicyLocationData'
    UnverifiedPolicyLocationRequest:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UnverifiedPolicyLocationData'
    UnverifiedPolicyLocationResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UnverifiedPolicyLocationData'
    VehicleIncidentData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/VehicleIncident'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    VehicleIncidentList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/VehicleIncidentData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    VehicleIncidentRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/VehicleIncidentData'
        included:
          $ref: '#/components/schemas/ClaimRequestInclusions'
    VehicleIncidentResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/VehicleIncidentData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    VehicleRiskUnitData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/VehicleRiskUnit'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    VehicleRiskUnitList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/VehicleRiskUnitData'
    VehicleRiskUnitRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/VehicleRiskUnitData'
    VehicleRiskUnitResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/VehicleRiskUnitData'
        included:
          $ref: '#/components/schemas/ClaimResponseInclusions'
    BatchRequest:
      title: Batch request
      required:
        - requests
      type: object
      properties:
        requests:
          title: Requests
          type: array
          description: The array of subrequests
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/BatchSubRequest'
      description: The body of a batch request
    BatchResponse:
      title: Batch response
      type: object
      properties:
        responses:
          title: Responses
          type: array
          description: >-
            The list of subresponses, appearing in the same order as the
            elements in the `requests` field of the request
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/BatchSubResponse'
      description: >-
        The body of a response to a batch request. The `responses` field will
        have one element for every entry in the `requests` field on the request,
        and responses will appear in the same order.
    BatchSubRequest:
      title: Batch subrequest
      required:
        - method
        - path
      type: object
      properties:
        body:
          title: Body
          type: object
          properties: {}
          description: The body of the subrequest
        headers:
          title: Headers
          type: array
          description: >-
            Headers that will be included as part of the subrequest. Any headers
            defined using this field will override header values inherited from
            the main request. Any headers present on the main request that are
            not defined in this list will be inherited when the subrequest is
            made, with the exception of the `GW-Checksum` header.
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Header'
        method:
          title: Method
          type: string
          description: The HTTP method for the subrequest
          enum:
            - delete
            - head
            - get
            - options
            - patch
            - post
            - put
        onFail:
          title: On fail
          type: string
          description: >-
            Controls whether or not subsequent subrequests are processed if this
            subrequest fails. The default behavior is to continue processing
            subrequests. The `abort` option specifies that all subsequent
            subrequests will be skipped.
          enum:
            - abort
            - continue
        path:
          title: Path
          minLength: 1
          pattern: ^/[\S]*$
          type: string
          description: >-
            The path for the subrequest. This path is relative to the root of
            the API hosting the batch endpoint. For example, if the batch
            endpoint is `<servlet>/rest/common/v1/batch`, then a path of
            `/activities` will mean a request against
            `<servlet>/rest/common/v1/activities`. The path must start with `/`
            and cannot contain whitespace.
        query:
          title: Query
          type: string
          description: The query string to use for the subrequest
      description: An individual subrequest within a batch request
    BatchSubResponse:
      title: Batch subresponse
      type: object
      properties:
        body:
          title: Body
          type: object
          properties: {}
          description: The body of the subresponse
        code:
          title: Code
          type: integer
          description: The HTTP status code for the subresponse
        headers:
          title: Headers
          type: array
          description: The headers returned for the subresponse
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Header'
        skipped:
          title: Skipped
          type: boolean
          description: >-
            A `true` value indicates that the corresponding subrequest was not
            processed due to a prior failed request that specified the `onFail`
            field with the `abort` option
      description: A subresponse to a batch subrequest
    Header:
      title: Header
      required:
        - name
        - value
      type: object
      properties:
        name:
          title: Name
          type: string
          description: The header name
        value:
          title: Value
          type: string
          description: The header value
      description: An HTTP request or response header
    Activity:
      title: Activity
      type: object
      properties:
        activityPattern:
          title: Activity pattern
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The code of the `ActivityPattern` used to create this activity and
            set its initial values
          x-gw-extensions:
            createOnly: true
        activityType:
          $ref: '#/components/schemas/TypeKeyReference'
        approvalIssue:
          title: Approval issue
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The reason approval is needed. Only applicable to activities with an
            `activityType` of `approval`.
        approvalRationale:
          title: Approval rationale
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: >-
            Rationale for approving or rejecting this activity. Only applicable
            to activities with an `activityType` of `approval`.
        approved:
          title: Approved
          type: boolean
          description: >-
            This field is `true` if this activity has been approved, `false` if
            this activity has been rejected, and omitted otherwise. Only
            applicable to activities with an `activityType` of `approval`.
          readOnly: true
        assignedByUser:
          $ref: '#/components/schemas/SimpleReference'
        assignedGroup:
          $ref: '#/components/schemas/SimpleReference'
        assignedQueue:
          $ref: '#/components/schemas/SimpleReference'
        assignedUser:
          $ref: '#/components/schemas/SimpleReference'
        assignmentStatus:
          $ref: '#/components/schemas/TypeKeyReference'
        autopilotHandlingDecision:
          $ref: '#/components/schemas/TypeKeyReference'
        autopilotId:
          title: Autopilot ID
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: >-
            Unique identifier assigned to this activity by the Claims Autopilot
            system. Only intended for use by the Claims Autopilot system. (Since
            1.2.0)
          x-gw-nullable: true
          x-gw-sinceVersion: 1.2.0
          x-gw-extensions:
            defaultViews:
              - none
            filterable: true
        autopilotPurpose:
          $ref: '#/components/schemas/TypeKeyReference'
        closeDate:
          title: Close date
          type: string
          description: >-
            The date and time when this activity was completed, skipped,
            approved, or rejected
          format: date-time
          readOnly: true
          x-gw-extensions:
            filterable: true
        closeUser:
          $ref: '#/components/schemas/SimpleReference'
        coverageIssues:
          title: Coverage issues
          type: array
          description: >-
            A list of possible issues with coverage for the associated claim
            (Since 1.2.0)
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/CoverageIssue'
          x-gw-sinceVersion: 1.2.0
          x-gw-extensions:
            createOnly: true
        createTime:
          title: Create time
          type: string
          description: The date and time when this `Activity` was created (Since 1.1.0)
          format: date-time
          readOnly: true
          x-gw-sinceVersion: 1.1.0
        description:
          title: Description
          maxLength: 1333
          minLength: 1
          pattern: \S
          type: string
          description: The description of this activity
          x-gw-nullable: true
          x-gw-extensions:
            defaultViews:
              - detail
        dueDate:
          title: Due date
          type: string
          description: >-
            Date and time by which a person should complete the activity. If not
            completed by this time, the activity is considered overdue. Not
            applicable to activities that represent events rather than tasks.
          format: date-time
          x-gw-nullable: true
          x-gw-extensions:
            filterable: true
            sortable: true
        endDate:
          title: End date
          type: string
          description: >-
            Date and time at which the activity is expected to end. Only
            applicable to activities that represent events.
          format: date-time
          x-gw-nullable: true
        escalated:
          title: Escalated
          type: boolean
          description: >-
            A `true` value for this field indicates that the activity has been
            escalated
          readOnly: true
          x-gw-extensions:
            filterable: true
            sortable: true
        escalationDate:
          title: Escalation date
          type: string
          description: >-
            Date and time at which this activity will be escalated if it has not
            yet been completed
          format: date-time
          x-gw-nullable: true
        externallyOwned:
          title: Externally owned
          type: boolean
          description: >-
            A `true` value for this field indicates that the activity is owned
            by a user or group outside of the insurer
          x-gw-extensions:
            filterable: true
        id:
          title: ID
          type: string
          description: The unique identifier of this `Activity`
          readOnly: true
        importance:
          $ref: '#/components/schemas/TypeKeyReference'
        initialAssignment:
          $ref: '#/components/schemas/Assignee'
        mandatory:
          title: Mandatory
          type: boolean
          description: >-
            A `true` value for this field indicates that the activity is
            mandatory and cannot be skipped
        priority:
          $ref: '#/components/schemas/TypeKeyReference'
        recurring:
          title: Recurring
          type: boolean
          description: A `true` value indicates that this activity is recurring
        relatedTo:
          $ref: '#/components/schemas/GenericRelation'
        startDate:
          title: Start date
          type: string
          description: >-
            Date and time at which the activity is scheduled to begin. Only
            applicable to activities that represent events.
          format: date-time
          x-gw-nullable: true
        status:
          $ref: '#/components/schemas/TypeKeyReference'
        subject:
          title: Subject
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: A brief title for the activity
          x-gw-extensions:
            filterable: true
            sortable: true
      description: >-
        An `Activity` is an assignable item that represents a task to be done, a
        decision to be made, or information to be aware of
    ActivityPattern:
      title: Activity pattern
      type: object
      properties:
        activityClass:
          $ref: '#/components/schemas/TypeKeyReference'
        activityType:
          $ref: '#/components/schemas/TypeKeyReference'
        availableForClosedClaims:
          title: Available for closed claims
          type: boolean
          description: >-
            A `true` value for this field indicates that this activity pattern
            can be used to create activities on closed claims
        category:
          $ref: '#/components/schemas/TypeKeyReference'
        claimLossType:
          $ref: '#/components/schemas/TypeKeyReference'
        code:
          title: Code
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The code that uniquely identifies this `ActivityPattern`
          x-gw-extensions:
            createOnly: true
            sortable: true
        description:
          title: Description
          maxLength: 1333
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The default `description` for activities created from this activity
            pattern
        dueDate:
          title: Due date
          type: string
          description: >-
            The default `dueDate` for activities created from this activity
            pattern, calculated based on the current date and time
          format: date-time
        escalationDate:
          title: Escalation date
          type: string
          description: >-
            The default `escalationDate` for activities created from this
            activity pattern, calculated based on the current date and time
          format: date-time
        externallyOwned:
          title: Externally owned
          type: boolean
          description: >-
            The default `externallyOwned` value for activities created from this
            activity pattern
        id:
          title: ID
          type: string
          description: The unique identifier of this `ActivityPattern`
        importance:
          $ref: '#/components/schemas/TypeKeyReference'
        mandatory:
          title: Mandatory
          type: boolean
          description: >-
            The default `mandatory` value for activities created from this
            activity pattern
        priority:
          $ref: '#/components/schemas/TypeKeyReference'
        recurring:
          title: Recurring
          type: boolean
          description: >-
            The default `recurring` value for activities created from this
            activity pattern
        subject:
          title: Subject
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The default `subject` for activities created from this activity
            pattern
      description: >-
        An `ActivityPattern` is a template for an activity, and is used to
        create a new activity and set defaults for some of its fields
    AdditionalInfo:
      title: Additional info
      type: object
      properties:
        propertyName:
          title: Property name
          type: string
          description: The name of the property
          readOnly: true
        value:
          title: Value
          type: string
          description: The value of the property
          readOnly: true
      description: >-
        A name and value that defines an additional property of a contact role
        constraint, such as what loss types the constraint applies to
    Address:
      title: Address
      type: object
      properties:
        CEDEX:
          title: CEDEX
          maxLength: 2
          type: string
          description: >-
            The CEDEX bureau of the address. Only applicable in certain
            countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        addressLine1:
          title: Address line 1
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The first line of the address
          x-gw-nullable: true
        addressLine1Kanji:
          title: Address line 1 kanji
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The kanji version of the first line of the address. Only applicable
            in certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        addressLine2:
          title: Address line 2
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The second line of the address
          x-gw-nullable: true
        addressLine2Kanji:
          title: Address line 2 kanji
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The kanji version of the second line of the address. Only applicable
            in certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        addressLine3:
          title: Address line 3
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The third line of the address
          x-gw-nullable: true
        addressType:
          $ref: '#/components/schemas/TypeKeyReference'
        area:
          $ref: '#/components/schemas/TypeKeyReference'
        city:
          title: City
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The city of the address
          x-gw-nullable: true
        cityKanji:
          title: City kanji
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The kanji version of the city of the address. Only applicable in
            certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        country:
          title: Country
          type: string
          description: >-
            The country of the address. The value of the `country` field will
            affect which other fields on the `Address` are applicable.
          x-gw-nullable: true
          x-gw-type: typekey.Country
        county:
          title: County
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The county of the address. Only applicable in certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        department:
          $ref: '#/components/schemas/TypeKeyReference'
        description:
          title: Description
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The description of the address (Since 1.2.0)
          x-gw-nullable: true
          x-gw-sinceVersion: 1.2.0
        displayName:
          title: Display name
          type: string
          description: >-
            The formatted value of the address represented by this `Address`,
            including all standard fields for the address's country
          readOnly: true
        emirate:
          $ref: '#/components/schemas/TypeKeyReference'
        enterManually:
          type: boolean
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        id:
          title: ID
          type: string
          description: The unique identifier of this `Address`
          readOnly: true
        island:
          $ref: '#/components/schemas/TypeKeyReference'
        oblast:
          $ref: '#/components/schemas/TypeKeyReference'
        parish:
          $ref: '#/components/schemas/TypeKeyReference'
        postalCode:
          title: Postal code
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The postal code of the address. Only applicable in certain
            countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        prefecture:
          $ref: '#/components/schemas/TypeKeyReference'
        province:
          $ref: '#/components/schemas/TypeKeyReference'
        spatialPoint:
          $ref: '#/components/schemas/SpatialPoint'
        state:
          $ref: '#/components/schemas/TypeKeyReference'
        validUntil:
          title: Valid until
          type: string
          description: The date and time that the address is valid until (Since 1.2.0)
          format: date-time
          x-gw-nullable: true
          x-gw-sinceVersion: 1.2.0
      description: >-
        An `Address` represents a postal address. The fields available on an
        `Address` will depend upon the `country` value for the `Address`.
      x-gw-extensions:
        discriminatorProperty: country
    AssessmentContentItem:
      title: Assessment content item
      type: object
      properties:
        amountAfterLimit:
          $ref: '#/components/schemas/MonetaryAmount'
        contentCategory:
          $ref: '#/components/schemas/TypeKeyReference'
        contentSchedule:
          $ref: '#/components/schemas/TypeKeyReference'
        dateAcquired:
          title: Date acquired
          type: string
          description: Date when this item was acquired
          format: date-time
          x-gw-nullable: true
          x-gw-extensions:
            filterable: true
            sortable: true
        depreciationPercentage:
          title: Depreciation percentage
          type: string
          description: Depreciation percentage, per year
          format: gw-bigdecimal
          x-gw-nullable: true
          x-gw-extensions:
            sortable: true
        description:
          title: Description
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: Assessment line
          x-gw-nullable: true
          x-gw-extensions:
            sortable: true
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        incidentOrder:
          title: Incident order
          type: integer
          description: Order of the item on the Incident
          x-gw-nullable: true
          x-gw-extensions:
            sortable: true
        itemComment:
          title: Item comment
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: Assessment item comment
          x-gw-nullable: true
          x-gw-extensions:
            sortable: true
        numberOfItems:
          title: Number of items
          type: integer
          description: Number of items
          x-gw-nullable: true
          x-gw-extensions:
            filterable: true
            sortable: true
        purchaseCost:
          $ref: '#/components/schemas/MonetaryAmount'
        replacementValue:
          $ref: '#/components/schemas/MonetaryAmount'
      description: Assessment content item (Since 1.4.0)
      x-gw-sinceVersion: 1.4.0
    AssessmentSummary:
      title: Assessment summary
      type: object
      properties:
        category:
          title: Category
          maxLength: 256
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The categorization of the score. For example, a fraud system may use
            low_risk, medium_risk, high_risk. A total loss evaluation system may
            use repairable, total_loss.
          x-gw-extensions:
            createOnly: true
            filterable: true
            requiredForCreate: true
            sortable: true
        exposure:
          $ref: '#/components/schemas/SimpleReference'
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        normalizedScore:
          title: Normalized score
          type: string
          description: >-
            The raw score mapped into the range 0-100. For example, a raw score
            of 320 out of 400 could map on a normalized score of 80.
          format: gw-bigdecimal
          x-gw-nullable: true
          x-gw-extensions:
            createOnly: true
            filterable: true
            sortable: true
        rawAssessmentReferenceId:
          title: Raw assessment reference ID
          maxLength: 256
          minLength: 1
          pattern: \S
          type: string
          description: Reference ID to the raw assessment response
          x-gw-nullable: true
          x-gw-extensions:
            createOnly: true
            filterable: true
            sortable: true
        recommendedActionCode:
          title: Recommended action code
          maxLength: 256
          minLength: 1
          pattern: \S
          type: string
          description: >-
            A code corresponding to the recommended action, such as
            "request_witness_statement", "block_payment", "initiate_recovery",
            "offer_cash_settlement". This code could be used in business rules.
          x-gw-nullable: true
          x-gw-extensions:
            createOnly: true
            filterable: true
            sortable: true
        recommendedActionDescription:
          title: Recommended action description
          maxLength: 256
          minLength: 1
          pattern: \S
          type: string
          description: >-
            A human readable description of the recommended action, such as
            "Take a recorded statement from the witness"
          x-gw-nullable: true
          x-gw-extensions:
            createOnly: true
        score:
          title: Score
          type: string
          description: The score of the `Claim` or `Exposure`
          format: gw-bigdecimal
          x-gw-nullable: true
          x-gw-extensions:
            createOnly: true
            filterable: true
            sortable: true
        scoreDate:
          title: Score date
          type: string
          description: >-
            The date and time the external system scored the `Claim` or
            `Exposure`
          format: date-time
          x-gw-extensions:
            createOnly: true
            filterable: true
            requiredForCreate: true
            sortable: true
        scorePercentile:
          title: score percentile
          type: string
          description: >-
            A value corresponding to where the score lies in the distribution of
            scores, as determined by the external system
          format: gw-bigdecimal
          x-gw-nullable: true
          x-gw-extensions:
            createOnly: true
            filterable: true
            sortable: true
        tapId:
          title: TAP ID
          maxLength: 256
          minLength: 1
          pattern: \S
          type: string
          description: The assessment provider name
          x-gw-extensions:
            createOnly: true
            filterable: true
            requiredForCreate: true
            sortable: true
        tapSubtypeId:
          title: TAP subtype ID
          maxLength: 256
          minLength: 1
          pattern: \S
          type: string
          description: >-
            Designation to differentiate between distinct types of assessments.
            For example, line.
          x-gw-extensions:
            createOnly: true
            filterable: true
            requiredForCreate: true
            sortable: true
      description: Assessment summary (Since 1.4.0)
      x-gw-sinceVersion: 1.4.0
    Assignee:
      title: Assignee
      type: object
      properties:
        assigneeId:
          title: Assignee ID
          type: string
          description: Unique ID to reference this `Assignee` for includes (Since 1.4.0)
          readOnly: true
          x-gw-sinceVersion: 1.4.0
        autoAssign:
          title: Auto assign
          type: boolean
          description: >-
            Set to `true` to indicate the assignment should be done
            automatically by the system. Cannot be combined with any other
            fields.
        claimOwner:
          title: Claim owner
          type: boolean
          description: >-
            Set to `true` to indicate that the element should be assigned to the
            same user and group that own the element's claim
        groupId:
          title: Group ID
          type: string
          description: >-
            The ID of the `Group` that the resource should be assigned to. If
            specified without the `userId` field, the `User` within the `Group`
            is selected by assignment rules. If specified along with the
            `userId` field, that specific `User` is assigned the element.
        name:
          title: Name
          type: string
          description: >-
            A human-readable name for the type of assignment that this
            `Assignee` represents
          readOnly: true
        queueId:
          title: Queue ID
          type: string
          description: >-
            The ID of the `Queue` that the resource should be assigned to.
            Cannot be combined with any other fields.
        userId:
          title: User ID
          type: string
          description: >-
            The ID of the `User` that the resource should be assigned to. The
            `groupId` field must also be specified if the `userId` field is
            specified, and the `User` must be a member of that `Group` and have
            permission to be assigned the element.
      description: >-
        An `Assignee` represents the target of an assignment action, such as a
        user/group combination, assignment queue, or automatic rule-based
        assignment
    Building:
      title: Building
      type: object
      properties:
        buildingNumber:
          title: Building number
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The alphanumeric number assigned to this building
        id:
          title: ID
          type: string
          description: The unique identifier of this element
        notes:
          title: Notes
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: Any comments regarding this building
        policySystemId:
          title: ID
          maxLength: 256
          minLength: 1
          pattern: \S
          type: string
          description: The unique identifier of this element within the policy system
          readOnly: true
      description: A building on a policy or claim
    Check:
      title: Check
      type: object
      properties:
        bankAccount:
          $ref: '#/components/schemas/TypeKeyReference'
        checkBatching:
          $ref: '#/components/schemas/TypeKeyReference'
        checkInstructions:
          $ref: '#/components/schemas/TypeKeyReference'
        checkNumber:
          title: Check number
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The identifier for the check or the electronic funds transfer
          x-gw-nullable: true
          x-gw-extensions:
            filterable: true
            sortable: true
        checkType:
          $ref: '#/components/schemas/TypeKeyReference'
        claimContact:
          $ref: '#/components/schemas/UpdatablePolicyObjectReference'
        comments:
          title: Comments
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: Comments about the check
          x-gw-nullable: true
          x-gw-extensions:
            defaultViews:
              - detail
        dateOfService:
          title: Date of service
          type: string
          description: >-
            The date and time the service being paid for was performed, if the
            check is for a service
          format: date-time
          x-gw-nullable: true
          x-gw-extensions:
            defaultViews:
              - detail
        deductionType:
          $ref: '#/components/schemas/TypeKeyReference'
        deliveryMethod:
          $ref: '#/components/schemas/TypeKeyReference'
        enteredTime:
          title: Entered time
          type: string
          description: >-
            The date and time that the check was actually created. Note that
            this is not necessarily the same as the time that the `Check`
            element was created in the claims system.
          format: date-time
          x-gw-nullable: true
          x-gw-extensions:
            defaultViews:
              - detail
            filterable: true
            sortable: true
        grossAmount:
          $ref: '#/components/schemas/MonetaryAmount'
        id:
          title: ID
          type: string
          description: The unique identifier of this element
        invoiceNumber:
          title: Invoice number
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The invoice number associated with this check
          x-gw-nullable: true
          x-gw-extensions:
            defaultViews:
              - detail
            filterable: true
            sortable: true
        issueDate:
          title: Issue date
          type: string
          description: The date and time that the check was issued
          format: date-time
          x-gw-nullable: true
          x-gw-extensions:
            defaultViews:
              - detail
            filterable: true
            sortable: true
        mailTo:
          title: Mail to
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The name of the person or company that the check is mailed to
          x-gw-nullable: true
          x-gw-extensions:
            filterable: true
            sortable: true
        mailingAddress:
          $ref: '#/components/schemas/Address'
        memo:
          title: Memo
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The memo to include on the check
          x-gw-nullable: true
          x-gw-extensions:
            defaultViews:
              - detail
            filterable: true
            sortable: true
        payTo:
          title: Pay to
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The person or company the check is made out to
          x-gw-nullable: true
          x-gw-extensions:
            filterable: true
            sortable: true
        payees:
          title: Payees
          minItems: 1
          type: array
          description: The list of recipients of the check
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Payee'
          x-gw-extensions:
            requiredForCreate: true
        paymentMethod:
          $ref: '#/components/schemas/TypeKeyReference'
        payments:
          title: Payments
          type: array
          description: >-
            The list of `Transaction` elements that detail the payments included
            with this check
          readOnly: true
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/SimpleReference'
          x-gw-extensions:
            defaultViews:
              - detail
        paymentsToWrite:
          title: Payments to create
          minItems: 1
          type: array
          description: >-
            The list of `Payments` used to populate a check during creation or
            edit
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Transaction'
          x-gw-extensions:
            createOnly: true
        portion:
          $ref: '#/components/schemas/CheckPortion'
        reportability:
          $ref: '#/components/schemas/TypeKeyReference'
        reportableAmount:
          $ref: '#/components/schemas/MonetaryAmount'
        scheduledSendDate:
          title: Scheduled send date
          type: string
          description: >-
            The date that the check is scheduled to be sent. The scheduled send
            date begins at the start of this date in the server's timezone.
          format: date
          x-gw-nullable: true
          x-gw-extensions:
            filterable: true
            sortable: true
        scheduledSendDateTime:
          title: Scheduled send date and time
          type: string
          description: >-
            The date and time that the check is scheduled to be sent. This is an
            instant that occurs at midnight in the server's time zone.
          format: date-time
          readOnly: true
          x-gw-extensions:
            filterable: true
            sortable: true
        servicePdEnd:
          title: Service period end
          type: string
          description: The end date and time of the service period for the check
          format: date-time
          x-gw-nullable: true
          x-gw-extensions:
            defaultViews:
              - detail
            filterable: true
            sortable: true
        servicePdStart:
          title: Service period start
          type: string
          description: The start date and time of the service period for the check
          format: date-time
          x-gw-nullable: true
          x-gw-extensions:
            defaultViews:
              - detail
            filterable: true
            sortable: true
        status:
          $ref: '#/components/schemas/TypeKeyReference'
      description: >-
        A paper check or electronic funds transfer issued to a particular payee
        to deliver one or more payments (Since 1.3.0)
      x-gw-sinceVersion: 1.3.0
    CheckPortion:
      title: Check portion
      type: object
      properties:
        fixedAmount:
          $ref: '#/components/schemas/MonetaryAmount'
        percentage:
          title: Percentage
          type: string
          description: >-
            The percentage of the overall amount to allocate to this check.
            Setting this value will null out the value of the `fixedAmount`
            field.
          format: gw-bigdecimal
      description: >-
        The amount of multi-payee check that is allocated to particular
        secondary `Check` (Since 1.3.0)
      x-gw-sinceVersion: 1.3.0
    CheckRecurrence:
      title: Check recurrence
      type: object
      properties:
        firstDueDate:
          title: First due date
          type: string
          description: The due date and time of the first check in the recurrence
          format: date-time
          x-gw-extensions:
            requiredForCreate: true
        issuanceDateOffset:
          title: Issuance date offset
          type: integer
          description: The number of days before the due date that a check should be issued
        monthlyFrequency:
          title: Monthly frequency
          minimum: 0
          exclusiveMinimum: true
          type: integer
          description: >-
            The number of months between recurring checks. For example, a value
            of `1` will create a check every month, and a value of `3` will
            create a check every three months. Only applicable if `subtype` is
            `MonthlyCheckRecurrence`.
          x-gw-extensions:
            entitySubtype: MonthlyCheckRecurrence
        numChecks:
          title: Number of checks
          minimum: 0
          exclusiveMinimum: true
          type: integer
          description: The number of checks in the recurrence
          x-gw-extensions:
            requiredForCreate: true
        recurrenceDate:
          title: Recurrence date
          type: integer
          description: >-
            The day of the month on which the check is due. For example, a value
            of `15` would result in recurring checks being due on the 15th day
            of the month. Only applicable if `subtype` is
            `MonthlyCheckRecurrence`. If `recurrenceDate` is set,
            `recurrenceDay` and `recurrenceWeek` should not be set.
          x-gw-nullable: true
          x-gw-extensions:
            entitySubtype: MonthlyCheckRecurrence
        recurrenceDay:
          $ref: '#/components/schemas/TypeKeyReference'
        recurrenceWeek:
          $ref: '#/components/schemas/TypeKeyReference'
        subtype:
          $ref: '#/components/schemas/TypeKeyReference'
        weeklyFrequency:
          title: Weekly frequency
          minimum: 0
          exclusiveMinimum: true
          type: integer
          description: >-
            The number of weeks between recurring checks. For example, a value
            of `1` will create a check every week, and a value of `4` will
            create a check every four weeks. Only applicable if `subtype` is
            `WeeklyCheckRecurrence`.
          x-gw-extensions:
            entitySubtype: WeeklyCheckRecurrence
      description: Defines the recurrence schedule for a `Check` (Since 1.3.0)
      x-gw-sinceVersion: 1.3.0
    CheckSet:
      title: Check set
      type: object
      properties:
        approvalDate:
          title: Approval date
          type: string
          description: The date and time when this check set was approved or rejected
          format: date-time
          readOnly: true
          x-gw-extensions:
            sortable: true
        approvalStatus:
          $ref: '#/components/schemas/TypeKeyReference'
        checks:
          title: Checks
          type: array
          description: >-
            A list of references to `Check` elements that were created as part
            of this check set
          readOnly: true
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/SimpleReference'
        createTime:
          title: Create time
          type: string
          description: The date and time when this `CheckSet` was created
          format: date-time
          readOnly: true
          x-gw-extensions:
            sortable: true
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        primaryCheckToWrite:
          $ref: '#/components/schemas/Check'
        recurrence:
          $ref: '#/components/schemas/CheckRecurrence'
        requestingUser:
          $ref: '#/components/schemas/SimpleReference'
        secondaryChecksToWrite:
          title: First secondary checks
          type: array
          description: >-
            When creating a new `CheckSet`, this represents the list of
            secondary checks in the check set. After creation, this will be the
            secondary checks with the earliest scheduled send date, if this
            check set defines a recurrence.
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Check'
      description: >-
        A set of related checks that are submitted together for approval (Since
        1.3.0)
      x-gw-sinceVersion: 1.3.0
    Claim:
      title: Claim
      type: object
      properties:
        allValidationLevelsReached:
          title: All validation levels reached
          type: array
          description: >-
            The list of all the validation levels that this claim has passed
            (Since 1.3.0)
          readOnly: true
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/TypeKeyReference'
          x-gw-sinceVersion: 1.3.0
        arson:
          title: Arson
          type: boolean
          description: A `true` value indicates that this claim involves arson
          x-gw-nullable: true
        assignedByUser:
          $ref: '#/components/schemas/SimpleReference'
        assignedGroup:
          $ref: '#/components/schemas/SimpleReference'
        assignedQueue:
          $ref: '#/components/schemas/SimpleReference'
        assignedUser:
          $ref: '#/components/schemas/SimpleReference'
        assignmentStatus:
          $ref: '#/components/schemas/TypeKeyReference'
        claimNumber:
          title: Claim number
          maxLength: 40
          minLength: 1
          pattern: \S
          type: string
          description: The claim number assigned to this claim
          readOnly: true
          x-gw-extensions:
            filterable: true
            sortable: true
        closeDate:
          title: Close date
          type: string
          description: The date and time when this claim was closed
          format: date-time
          readOnly: true
        closedOutcome:
          $ref: '#/components/schemas/TypeKeyReference'
        coverageInQuestion:
          title: Coverage in question
          type: boolean
          description: >-
            A `true` value indicates that the claim might not be covered by the
            insured's policy (Since 1.2.0)
          x-gw-sinceVersion: 1.2.0
        description:
          title: Description
          maxLength: 1333
          minLength: 1
          pattern: \S
          type: string
          description: A description of the accident or loss
          x-gw-nullable: true
          x-gw-extensions:
            defaultViews:
              - detail
        faultRating:
          $ref: '#/components/schemas/TypeKeyReference'
        filterPropertyRiskUnits:
          title: Filter property risk units
          type: array
          description: >-
            A list of `policySystemId` values for property risk units to include
            when retrieving the policy
          xml:
            wrapped: true
          items:
            type: string
          x-gw-extensions:
            createOnly: true
        filterVehicleRiskUnits:
          title: Filter vehicle risk units
          type: array
          description: >-
            A list of `policySystemId` values for vehicle risk units to include
            when retrieving the policy
          xml:
            wrapped: true
          items:
            type: string
          x-gw-extensions:
            createOnly: true
        fireDepartmentResponded:
          title: Fire department responded
          type: boolean
          description: >-
            A `true` value indicates that the fire department responded to the
            damage
          x-gw-nullable: true
        fireSource:
          title: Fire source
          maxLength: 250
          minLength: 1
          pattern: \S
          type: string
          description: A description of the source of the fire that caused this claim
          x-gw-nullable: true
        flagged:
          $ref: '#/components/schemas/TypeKeyReference'
        hasWaterBeenTurnedOff:
          title: Has the water been turned off
          type: boolean
          description: >-
            A `true` value indicates that the water to the house or room
            affected by water damage has been turned off
          x-gw-nullable: true
        howReported:
          $ref: '#/components/schemas/TypeKeyReference'
        howWasFireDiscovered:
          title: How was fire discovered
          maxLength: 250
          minLength: 1
          pattern: \S
          type: string
          description: A description of how the fire that caused this claim was discovered
          x-gw-nullable: true
        id:
          title: ID
          type: string
          description: The unique identifier of this element
        incidentOnly:
          title: Incident only
          type: boolean
          description: >-
            A `true` value indicates that this claim represents an incident
            report only and should not be processed further
        insured:
          $ref: '#/components/schemas/UpdatablePolicyObjectReference'
        isAnyoneInjured:
          title: Is anyone injured
          type: boolean
          description: >-
            A `true` value indicates that someone was injured as a result of the
            loss
          x-gw-nullable: true
        isHomeHabitable:
          title: Is the home habitable
          type: boolean
          description: >-
            A `true` value indicates that the home is still habitable. Used only
            for claims involving damage to the insured's home.
          x-gw-nullable: true
        isHomeSecure:
          title: Is the home secure
          type: boolean
          description: >-
            A `true` value indicates that the home is still secure. Used only
            for claims involving damage to the insured's home.
          x-gw-nullable: true
        isRoofProtected:
          title: Is the roof protected
          type: boolean
          description: A `true` value indicates that water damage to the roof is covered
          x-gw-nullable: true
        jurisdiction:
          $ref: '#/components/schemas/TypeKeyReference'
        lobCode:
          $ref: '#/components/schemas/TypeKeyReference'
        lossCause:
          $ref: '#/components/schemas/TypeKeyReference'
        lossDate:
          title: Loss date
          type: string
          description: The date and time when the loss occurred
          format: date-time
          x-gw-extensions:
            before: now
            createOnly: true
            filterable: true
            requiredForCreate: true
            sortable: true
        lossLocation:
          $ref: '#/components/schemas/ClaimAddress'
        lossType:
          $ref: '#/components/schemas/TypeKeyReference'
        mainContact:
          $ref: '#/components/schemas/UpdatablePolicyObjectReference'
        policyAddresses:
          title: Policy addresses
          type: array
          description: >-
            A list of addresses from the policy, which can then be used to set
            values of other fields such as the `lossLocation`
          readOnly: true
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ClaimAddress'
          x-gw-extensions:
            defaultViews:
              - detail
        policyNumber:
          title: Policy number
          maxLength: 40
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The policy number of the insurance policy this claim is filed
            against
          x-gw-extensions:
            createOnly: true
            requiredForCreate: true
        reportedByType:
          $ref: '#/components/schemas/TypeKeyReference'
        reportedDate:
          title: Reported date
          type: string
          description: The date and time when the claim was reported
          format: date-time
          x-gw-nullable: true
          x-gw-extensions:
            before: now
        reporter:
          $ref: '#/components/schemas/UpdatablePolicyObjectReference'
        segment:
          $ref: '#/components/schemas/TypeKeyReference'
        siuStatus:
          $ref: '#/components/schemas/TypeKeyReference'
        smokeDamageOnly:
          title: Smoke damage only
          type: boolean
          description: >-
            A `true` value indicates that damage was caused only by smoke and
            not by fire
          x-gw-nullable: true
        state:
          $ref: '#/components/schemas/TypeKeyReference'
        strategy:
          $ref: '#/components/schemas/TypeKeyReference'
        validationLevel:
          $ref: '#/components/schemas/TypeKeyReference'
        waterSource:
          $ref: '#/components/schemas/TypeKeyReference'
        witnesses:
          title: Witnesses
          type: array
          description: A list of witnesses relevant to this claim
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Witness'
      description: An insurance claim
    ClaimAddress:
      title: Claim address
      type: object
      properties:
        addressLine1:
          title: Address line 1
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The first line of the address
          x-gw-nullable: true
        addressLine2:
          title: Address line 2
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The second line of the address
          x-gw-nullable: true
        addressLine3:
          title: Address line 3
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The third line of the address
          x-gw-nullable: true
        area:
          $ref: '#/components/schemas/TypeKeyReference'
        city:
          title: City
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The city of the address
          x-gw-nullable: true
        country:
          title: Country
          type: string
          description: >-
            The country of the address. The value of the `country` field will
            affect which other fields on the `ClaimAddress` are applicable.
          x-gw-nullable: true
          x-gw-type: typekey.Country
        county:
          title: County
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The county of the address. Only applicable in certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        department:
          $ref: '#/components/schemas/TypeKeyReference'
        displayName:
          title: Display name
          type: string
          description: >-
            The formatted value of the address represented by this
            `ClaimAddress`, including all standard fields for the address's
            country
          readOnly: true
        emirate:
          $ref: '#/components/schemas/TypeKeyReference'
        id:
          title: ID
          type: string
          description: The unique identifier of this element
        island:
          $ref: '#/components/schemas/TypeKeyReference'
        oblast:
          $ref: '#/components/schemas/TypeKeyReference'
        parish:
          $ref: '#/components/schemas/TypeKeyReference'
        policyAddress:
          title: Policy address
          type: boolean
          description: >-
            A `true` value for this field indicates that this `ClaimAddress` is
            part of the claim's policy and cannot be edited directly
          readOnly: true
        policyLabel:
          title: Policy label
          type: string
          description: >-
            Describes where on the policy this address came from. Only
            applicable if `policyAddress` is `true`.
        postalCode:
          title: Postal code
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The postal code of the address. Only applicable in certain
            countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        prefecture:
          $ref: '#/components/schemas/TypeKeyReference'
        province:
          $ref: '#/components/schemas/TypeKeyReference'
        state:
          $ref: '#/components/schemas/TypeKeyReference'
      description: >-
        A `ClaimAddress` represents an address that appears on a claim or
        policy. It combines standard address fields with policy identifiers.
      x-gw-extensions:
        discriminatorProperty: country
    ClaimAssignee:
      title: Claim assignee
      type: object
      properties:
        autoAssign:
          title: Auto assign
          type: boolean
          description: >-
            Set to `true` to indicate the assignment should be done by
            assignment rules. Cannot be combined with any other assignment
            criteria fields.
        groupId:
          title: Group ID
          type: string
          description: >-
            The `id` of the `Group` that the claim should be assigned to. If
            specified without the `userId` field, the `User` within the `Group`
            is selected by assignment rules. If specified along with the
            `userId` field, the `User` must be a member of the `Group`. That
            `User` is assigned the element.
        name:
          title: Name
          type: string
          description: >-
            A human-readable name for the type of assignment that this
            `ClaimAssignee` represents
          readOnly: true
        userId:
          title: User ID
          type: string
          description: >-
            The `id` of the `User` that the claim should be assigned to. The
            `groupId` field must also be specified if the `userId` field is
            specified, and the `User` must be a member of that `Group` and have
            permission to be assigned the element.
      description: >-
        The target of an assignment action, such as a user/group combination or
        automatic rule-based assignment (Since 1.2.0)
      x-gw-sinceVersion: 1.2.0
    ClaimContact:
      title: Claim contact
      type: object
      properties:
        addressBookUID:
          title: Address book UID
          maxLength: 64
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The unique ID of this `ClaimContact` within the contact management
            system. Only applicable if the `ClaimContact` has been linked to a
            contact management system.
          x-gw-nullable: true
        cellPhone:
          $ref: '#/components/schemas/PhoneNumber'
        companyName:
          title: Company name
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The name of the company represented by this `Contact`. Only
            applicable for a `ClaimContact` that represents a company.
          x-gw-extensions:
            entitySubtype: Company
        companyNameKanji:
          title: Company name kanji
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The kanji version of the name of the company represented by this
            `ClaimContact`. Only applicable for a `ClaimContact` that represents
            a company.
          x-gw-extensions:
            entitySubtype: Company
        contactSubtype:
          title: Contact subtype
          type: string
          description: >-
            The specific type of contact that this `ClaimContact` represents,
            such as `Person` or `Company`. The set of fields that can be set on
            a `ClaimContact` depend on its `contactSubtype`.
          x-gw-extensions:
            createOnly: true
            requiredForCreate: true
          x-gw-type: typekey.Contact
        dateOfBirth:
          title: Date of birth
          type: string
          description: >-
            The person's date of birth. Only applicable for a `ClaimContact`
            that represents a person.
          format: date
          x-gw-nullable: true
          x-gw-extensions:
            before: now
            entitySubtype: Person
        displayName:
          title: Display name
          type: string
          description: >-
            A formatted representation of the full name for this `ClaimContact',
            including all applicable fields such as `firstName` or `lastName`
          readOnly: true
          x-gw-nullable: true
        doctorSpecialty:
          $ref: '#/components/schemas/TypeKeyReference'
        editableRoles:
          title: Editable roles
          type: array
          description: >-
            The list of roles that this contact has on the claim and which are
            not otherwise represented by concrete fields such as `reporter` or
            `witness`. This list can be edited directly to change the roles
            assigned to this contact.
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ContactRole'
        emailAddress1:
          title: E-mail address 1
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The contact's primary e-mail address
          x-gw-nullable: true
        emailAddress2:
          title: E-mail address 2
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The contact's secondary e-mail address
          x-gw-nullable: true
        firstName:
          title: First name
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The persons's first name. Only applicable for a `ClaimContact` that
            represents a person.
          x-gw-nullable: true
          x-gw-extensions:
            entitySubtype: Person
        homePhone:
          $ref: '#/components/schemas/PhoneNumber'
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        lastName:
          title: Last name
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The person's last name. Only applicable for a `ClaimContact` that
            represents a person.
          x-gw-nullable: true
          x-gw-extensions:
            entitySubtype: Person
        licenseNumber:
          title: Driver's license number
          maxLength: 20
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The person's driver's license number. Only applicable for a
            `ClaimContact` that represents a person.
          x-gw-nullable: true
          x-gw-extensions:
            entitySubtype: Person
        licenseState:
          $ref: '#/components/schemas/TypeKeyReference'
        linkStatus:
          title: Link status
          type: string
          description: >-
            A code that indicates whether the contact is currently linked to the
            contact management system. Requesting this field will slow down API
            responses, since computing this value requires a call to the contact
            management system. (Since 1.3.0)
          readOnly: true
          x-gw-sinceVersion: 1.3.0
          x-gw-extensions:
            defaultViews:
              - none
        medicalLicense:
          title: Medical license
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The doctor's medical license number. Only applicable for a
            `ClaimContact` that represent a doctor.
          x-gw-nullable: true
          x-gw-extensions:
            entitySubtype: Doctor
        policySystemId:
          title: Policy system ID
          maxLength: 256
          minLength: 1
          pattern: \S
          type: string
          description: The unique identifier of this element within the policy system
          readOnly: true
          x-gw-nullable: true
        primaryAddress:
          $ref: '#/components/schemas/Address'
        primaryLanguage:
          $ref: '#/components/schemas/TypeKeyReference'
        primaryLocale:
          $ref: '#/components/schemas/TypeKeyReference'
        primaryPhone:
          title: Primary phone
          type: string
          description: >-
            The contact's primary phone number, as determined by the type of
            phone number selected in the `primaryPhoneType` field
          readOnly: true
        primaryPhoneType:
          $ref: '#/components/schemas/TypeKeyReference'
        roles:
          title: Roles
          type: array
          description: >-
            The list of all roles that this contact has on the claim, including
            roles that are represented by concrete fields such as `reporter`.
            This field cannot be edited directly. To edit the roles assigned to
            a contact, use either the concrete fields on the appropriate
            element, such as `reporter` on `Claim`, or update the
            `editableRoles` field on the contact.
          readOnly: true
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ContactRole'
        taxId:
          title: Tax ID
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: The contact's tax ID
        workPhone:
          $ref: '#/components/schemas/PhoneNumber'
      description: A contact on the claim
      x-gw-extensions:
        discriminatorProperty: contactSubtype
    ClaimInfo:
      title: Claim info
      type: object
      properties:
        archiveState:
          $ref: '#/components/schemas/TypeKeyReference'
        claim:
          $ref: '#/components/schemas/Claim'
        claimNumber:
          title: Claim number
          maxLength: 40
          minLength: 1
          pattern: \S
          type: string
          description: The claim number assigned to this claim
          readOnly: true
          x-gw-extensions:
            filterable: true
            sortable: true
        id:
          title: ID
          type: string
          description: The unique identifier of this element
        lossDate:
          title: Loss date
          type: string
          description: The `lossDate` of the claim
          format: date-time
          readOnly: true
        noticeDate:
          title: Reported date
          type: string
          description: The date and time when the claim was reported
          format: date-time
          readOnly: true
        policyNumber:
          title: Policy number
          maxLength: 40
          minLength: 1
          pattern: \S
          type: string
          description: The `policyNumber` of the claim's policy
          readOnly: true
      description: Claim summary information (Since 1.3.1)
      x-gw-sinceVersion: 1.3.1
    ClaimReference:
      title: Claim reference
      type: object
      properties:
        claimNumber:
          title: Claim number
          maxLength: 40
          minLength: 1
          pattern: \S
          type: string
          description: The `claimNumber` of the referenced claim
        displayName:
          title: Display name
          type: string
          description: The formatted name of the element
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        jsonPath:
          title: JSON path
          type: string
          description: >-
            The path to the referenced element within the overall JSON document
            (Since 1.2.0)
          readOnly: true
          x-gw-sinceVersion: 1.2.0
          x-gw-extensions:
            defaultViews:
              - none
        type:
          title: Type
          type: string
          description: The type of the referenced element (Since 1.2.0)
          x-gw-sinceVersion: 1.2.0
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: A reference to a claim
      x-gw-extensions:
        resourceReference: true
    ClaimSearchRequestAttributes:
      title: Claim search request attributes
      type: object
      properties:
        claimNumber:
          title: Claim number
          maxLength: 40
          minLength: 1
          pattern: \S
          type: string
          description: The `clamNumber` of the claim
        firstName:
          title: First name
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The first name of a contact on the claim. By default the search will
            look for contacts who have the role of `claimant` on the claim. You
            can use the `nameSearchType` field to change the search to look for
            contacts with other roles, such as `insured`, or to search all
            contacts regardless of role.
        lastName:
          title: Last name
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The last name of a contact on the claim. By default the search will
            look for contacts who have the role of `claimant` on the claim. You
            can use the `nameSearchType` field to change the search to look for
            contacts with other roles, such as `insured`, or to search all
            contacts regardless of role.
        nameSearchType:
          $ref: '#/components/schemas/TypeKeyReference'
        policyNumber:
          title: Policy number
          maxLength: 40
          minLength: 1
          pattern: \S
          type: string
          description: The `policyNumber` of the claim's policy
      description: Criteria of the claim to search for
    ClaimSearchResult:
      title: Claim search results
      type: object
      properties:
        adjusterName:
          title: Adjuster name
          type: string
          description: >-
            The name of the claim's assigned user, or information about the
            assignment status if the claim is unassigned
        claimId:
          title: Claim ID
          type: string
          description: The `id` of the claim
        claimNumber:
          title: Claim number
          maxLength: 40
          minLength: 1
          pattern: \S
          type: string
          description: The `claimNumber` of the claim
        claimants:
          title: Claimants
          type: array
          description: A list of names of claimants on the claim
          xml:
            wrapped: true
          items:
            type: string
        insuredName:
          title: Insured name
          type: string
          description: The name of the insured
        lossDate:
          title: Loss date
          type: string
          description: The `lossDate` of the claim
          format: date-time
        policyNumber:
          title: Policy number
          maxLength: 40
          minLength: 1
          pattern: \S
          type: string
          description: The `policyNumber` of the claim
        status:
          $ref: '#/components/schemas/TypeKeyReference'
      description: >-
        Summary information about a active claim returned from a claim search
        request
    ClaimSearchResultWrapper:
      title: Claim search results
      type: object
      properties:
        adjusterName:
          title: Adjuster name
          type: string
          description: >-
            The name of the claim's assigned user, or information about the
            assignment status if the claim is unassigned
        archiveState:
          $ref: '#/components/schemas/TypeKeyReference'
        archived:
          title: The claim was archived or not
          type: boolean
          description: The claim was archived or not
        archivedAdjuster:
          title: The adjuster that performed the archive
          type: string
          description: The adjuster that performed the archive
        assignedGroup:
          title: Assigned group
          type: string
          description: Assigned group of the claim
        claimId:
          title: Claim ID
          type: string
          description: The `id` of the claim
        claimInfoId:
          title: ClaimInfo ID
          type: string
          description: The `id` of the claimInfo
        claimNumber:
          title: Claim number
          type: string
          description: The `claimNumber` of the claim
        claimants:
          title: Claimants
          type: array
          description: A list of names of claimants on the claim
          xml:
            wrapped: true
          items:
            type: string
        flagged:
          title: Flagged
          type: boolean
          description: Whether this claim has been flagged
        futurePayments:
          $ref: '#/components/schemas/MonetaryAmount'
        insuredName:
          title: Insured name
          type: string
          description: The name of the insured
        lossDate:
          title: Loss date
          type: string
          description: The `lossDate` of the claim
          format: date-time
        paid:
          $ref: '#/components/schemas/MonetaryAmount'
        policyNumber:
          title: Policy number
          type: string
          description: The `policyNumber` of the claim
        remainingReserves:
          $ref: '#/components/schemas/MonetaryAmount'
        status:
          $ref: '#/components/schemas/TypeKeyReference'
      description: >-
        Summary information about a active or archived claim returned from a
        claim search request (Since 1.3.1)
      x-gw-sinceVersion: 1.3.1
    ClaimSearchV2Attributes:
      title: Request attributes for active or archived claim search
      type: object
      properties:
        archivedSearch:
          title: Search archived claim
          type: boolean
          description: Search archived claim
        claimNumber:
          title: Claim number
          maxLength: 40
          minLength: 1
          pattern: \S
          type: string
          description: The `clamNumber` of the claim
        companyName:
          title: Company name
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The name of a company on the claim. By default the search will look
            for contacts who have the role of `claimant` on the claim. You can
            use the `nameSearchType` field to change the search to look for
            contacts with other roles, such as `insured`, or to search all
            contacts regardless of role.
        firstName:
          title: First name
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The first name of a contact on the claim. By default the search will
            look for contacts who have the role of `claimant` on the claim. You
            can use the `nameSearchType` field to change the search to look for
            contacts with other roles, such as `insured`, or to search all
            contacts regardless of role.
        lastName:
          title: Last name
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The last name of a contact on the claim. By default the search will
            look for contacts who have the role of `claimant` on the claim. You
            can use the `nameSearchType` field to change the search to look for
            contacts with other roles, such as `insured`, or to search all
            contacts regardless of role.
        nameSearchType:
          $ref: '#/components/schemas/TypeKeyReference'
        policyNumber:
          title: Policy number
          maxLength: 40
          minLength: 1
          pattern: \S
          type: string
          description: The `policyNumber` of the claim's policy
        taxId:
          title: Tax ID
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: The claim contact's tax ID
      description: Criteria of active or archived claims to search for (Since 1.3.1)
      x-gw-sinceVersion: 1.3.1
    ClaimSolrSearchRequestAttributes:
      title: Claim Solr search request attributes
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        name:
          title: Name
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The name of a contact on the claim. By default the search will look
            for contacts who have any role on the claim. You can use the
            `nameSearchType` field to change the search to look for contacts
            with other roles, such as `insured`, or to search all contacts
            regardless of role.
        nameSearchType:
          $ref: '#/components/schemas/TypeKeyReference'
        phoneNumber:
          title: Phone number
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: Phone number on the contact being searched for
      description: Criteria of the claim to search for via Solr (Since 1.4.0)
      x-gw-sinceVersion: 1.4.0
    ClaimSolrSearchResult:
      title: Claim Solr search results
      type: object
      properties:
        address:
          title: Address
          maxLength: 500
          minLength: 1
          pattern: \S
          type: string
          description: The `address` of the contact matched to the search result
          x-gw-extensions:
            sortable: true
        city:
          title: City
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: The `city` of the contact matched to the search result
          x-gw-extensions:
            sortable: true
        claimId:
          title: Claim ID
          type: string
          description: The `id` of the claim
          x-gw-extensions:
            sortable: true
        claimNumber:
          title: Claim number
          maxLength: 40
          minLength: 1
          pattern: \S
          type: string
          description: The `claimNumber` of the claim
          x-gw-extensions:
            sortable: true
        lossDate:
          title: Loss date
          type: string
          description: The `lossDate` of the claim
          format: date-time
          x-gw-extensions:
            sortable: true
        name:
          title: Name
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The name of the contact matched to the search result
          x-gw-extensions:
            sortable: true
        phoneNumber:
          title: Phone number
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The phone number associated with the contact matched to the search
            result
          x-gw-extensions:
            sortable: true
        policyNumber:
          title: Policy number
          maxLength: 40
          minLength: 1
          pattern: \S
          type: string
          description: The `policyNumber` of the claim
          x-gw-extensions:
            sortable: true
        postalCode:
          title: Postal code
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: The `postal code` on the address matched to the search result
          x-gw-extensions:
            sortable: true
        rank:
          title: Rank
          type: integer
          description: The `rank` of the solr search result
          x-gw-extensions:
            sortable: true
        reportedDate:
          title: Reported date
          type: string
          description: The `reportedDate` of the claim
          format: date-time
          x-gw-extensions:
            sortable: true
        roles:
          title: Roles
          maxLength: 200
          minLength: 1
          pattern: \S
          type: string
          description: The roles the contact holds on the search result
          x-gw-extensions:
            sortable: true
        score:
          title: Score
          type: string
          description: The relevance `score` of the solr search result
          format: gw-bigdecimal
          x-gw-extensions:
            sortable: true
        state:
          $ref: '#/components/schemas/TypeKeyReference'
        status:
          title: Status
          maxLength: 20
          minLength: 1
          pattern: \S
          type: string
          description: The `state` of the claim, such as `open` or `closed`
          x-gw-extensions:
            sortable: true
      description: >-
        Summary information about a claim returned from a claim Solr search
        request (Since 1.4.0)
      x-gw-sinceVersion: 1.4.0
    CodeReference:
      title: Code reference
      type: object
      properties:
        code:
          title: Code
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The referenced code
        displayName:
          title: Display name
          type: string
          description: The name of the reference
      description: >-
        A reference object that combines a code with a human-readable name
        (Since 1.1.0)
      x-gw-sinceVersion: 1.1.0
    Contact:
      title: Contact
      type: object
      properties:
        addressBookUID:
          title: Address book UID
          maxLength: 64
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The unique ID of this `Contact` within the contact management
            system. Only applicable if the `Contact` has been linked to a
            contact management system.
          x-gw-nullable: true
        cellPhone:
          $ref: '#/components/schemas/PhoneNumber'
        companyName:
          title: Company name
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The name of the company represented by this `Contact`. Only
            applicable for a `Contact` that represents a company.
          x-gw-extensions:
            entitySubtype: Company
        dateOfBirth:
          title: Date of birth
          type: string
          description: >-
            The person's date of birth. Only applicable for a `Contact` that
            represents a person.
          format: date
          x-gw-nullable: true
          x-gw-extensions:
            before: now
            entitySubtype: Person
        displayName:
          title: Display name
          type: string
          description: >-
            A formatted representation of the full name for this `Contact',
            including all applicable fields such as `firstName` or `lastName`
          readOnly: true
          x-gw-nullable: true
        doctorSpecialty:
          $ref: '#/components/schemas/TypeKeyReference'
        emailAddress1:
          title: E-mail address 1
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The contact's primary e-mail address
          x-gw-nullable: true
        emailAddress2:
          title: E-mail address 2
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The contact's secondary e-mail address
          x-gw-nullable: true
        firstName:
          title: First name
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The persons's first name. Only applicable for a `Contact` that
            represents a person.
          x-gw-nullable: true
          x-gw-extensions:
            entitySubtype: Person
        homePhone:
          $ref: '#/components/schemas/PhoneNumber'
        id:
          title: ID
          type: string
          description: The unique identifier of this `Contact`
          readOnly: true
        lastName:
          title: Last name
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The person's last name. Only applicable for a `Contact` that
            represents a person.
          x-gw-nullable: true
          x-gw-extensions:
            entitySubtype: Person
        licenseNumber:
          title: Driver's license number
          maxLength: 20
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The person's driver's license number. Only applicable for a
            `Contact` that represents a person.
          x-gw-nullable: true
          x-gw-extensions:
            entitySubtype: Person
        licenseState:
          $ref: '#/components/schemas/TypeKeyReference'
        medicalLicense:
          title: Medical license
          type: string
          description: The doctor's medical license number
          x-gw-nullable: true
        policySystemId:
          title: ID
          maxLength: 256
          minLength: 1
          pattern: \S
          type: string
          description: The unique identifier of this element within the policy system
          readOnly: true
          x-gw-nullable: true
        preferred:
          title: Preferred
          type: boolean
          description: >-
            A `true` value for this field indicates that the vendor is one of
            the insurer's preferred vendors. Only applicable for a `Contact`
            that represents a vendor.
          x-gw-nullable: true
          x-gw-extensions:
            entitySubtype:
              - CompanyVendor
              - PersonVendor
        primaryAddress:
          $ref: '#/components/schemas/Address'
        primaryLanguage:
          $ref: '#/components/schemas/TypeKeyReference'
        primaryLocale:
          $ref: '#/components/schemas/TypeKeyReference'
        primaryPhone:
          title: Primary phone
          type: string
          description: >-
            The contact's primary phone number, as determined by the type of
            phone number selected in the `primaryPhoneType` field
          readOnly: true
        primaryPhoneType:
          $ref: '#/components/schemas/TypeKeyReference'
        roles:
          title: Roles
          minItems: 1
          type: array
          description: The list of all roles that this contact has on the claim
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ContactRole'
        subtype:
          $ref: '#/components/schemas/TypeKeyReference'
        taxId:
          title: Tax ID
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: The contact's tax ID
        workPhone:
          $ref: '#/components/schemas/PhoneNumber'
      description: A `Contact` represents a person or company
    ContactRole:
      title: Contact role
      required:
        - relatedTo
        - role
      type: object
      properties:
        active:
          title: Active
          type: boolean
          description: >-
            A `true` value for this field indicates that the contact is still
            active for this role on the related element
        comments:
          title: Comments
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: Comments regarding this role
        relatedTo:
          $ref: '#/components/schemas/GenericRelation'
        role:
          $ref: '#/components/schemas/TypeKeyReference'
      description: A role that a contact has on a particular claim or element of the claim
    ContactRoleConstraint:
      title: Contact role constraint
      type: object
      properties:
        code:
          title: Code
          type: string
          description: The `code` of the `ContactRole`
          readOnly: true
          x-gw-extensions:
            sortable: true
        name:
          title: Name
          type: string
          description: The `name` of the `ContactRole`
          readOnly: true
        schemaConstraints:
          title: Schema constraints
          type: array
          description: A list of constraints specific to this role
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/RoleSchemaConstraint'
        subtype:
          title: Subtype
          type: string
          description: >-
            The subtype that a contact must be in order to have this role, if
            the role is restricted to a particular subtype
          readOnly: true
          x-gw-extensions:
            filterable: true
      description: >-
        Defines constraints related to contact roles, such as whether the role
        is restricted to certain contact types and whether the role can be
        assigned to more than one contact
    CovTerm:
      title: Coverage term
      type: object
      properties:
        code:
          title: Code
          maxLength: 100
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The classification code value for the term. Only applicable if
            `covTermSubtype` is `ClassificationCovTerm`.
          x-gw-nullable: true
          x-gw-extensions:
            entitySubtype: ClassificationCovTerm
        covTermOrder:
          title: Coverage term order
          type: integer
          description: >-
            The order of this coverage term relative to other terms on the same
            coverage. Used to present the terms in sorted order.
          x-gw-nullable: true
        covTermPattern:
          $ref: '#/components/schemas/TypeKeyReference'
        covTermSubtype:
          title: Coverage term subtype
          type: string
          description: >-
            The specific subtype of coverage term. This field determines what
            other fields are available. (Since 1.2.0)
          x-gw-sinceVersion: 1.2.0
          x-gw-extensions:
            createOnly: true
            requiredForCreate: true
          x-gw-type: typekey.CovTerm
        description:
          title: Description
          maxLength: 100
          minLength: 1
          pattern: \S
          type: string
          description: >-
            A description of the classification code value for the term. Only
            applicable if `covTermSubtype` is `ClassificationCovTerm`.
          x-gw-nullable: true
          x-gw-extensions:
            entitySubtype: ClassificationCovTerm
        financialAmount:
          $ref: '#/components/schemas/MonetaryAmount'
        id:
          title: ID
          type: string
          description: The unique identifier of this element
        modelAggregation:
          $ref: '#/components/schemas/TypeKeyReference'
        modelRestriction:
          $ref: '#/components/schemas/TypeKeyReference'
        numericValue:
          title: Numeric value
          type: string
          description: >-
            The value of the coverage term as a decimal. Only applicable if
            `covTermSubtype` is `NumericCovTerm`.
          format: gw-bigdecimal
          x-gw-extensions:
            entitySubtype: NumericCovTerm
            requiredForCreate: true
        policySystemId:
          title: Policy system ID
          maxLength: 256
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The unique identifier of this element within the policy system
            (Since 1.2.0)
          readOnly: true
          x-gw-sinceVersion: 1.2.0
        units:
          $ref: '#/components/schemas/TypeKeyReference'
        value:
          title: Value
          type: string
          description: The value of this term
          readOnly: true
      description: A term on a coverage, condition, or exclusion
    Coverage:
      title: Coverage
      type: object
      properties:
        claimAggLimit:
          $ref: '#/components/schemas/MonetaryAmount'
        coinsurance:
          title: Coinsurance
          type: string
          description: >-
            The coinsurance percentage. Only applicable to property coverages.
            (Since 1.2.0)
          format: gw-bigdecimal
          x-gw-nullable: true
          x-gw-sinceVersion: 1.2.0
          x-gw-extensions:
            entitySubtype: PropertyCoverage
        covTerms:
          title: Coverage terms
          type: array
          description: The list of terms for this coverage
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/CovTerm'
        coverageBasis:
          $ref: '#/components/schemas/TypeKeyReference'
        coverageType:
          $ref: '#/components/schemas/TypeKeyReference'
        currency:
          $ref: '#/components/schemas/TypeKeyReference'
        effectiveDate:
          title: Effective date
          type: string
          description: The date and time when this coverage became effective
          format: date-time
          x-gw-nullable: true
        expirationDate:
          title: Expiration date
          type: string
          description: The date and time when this coverage ceased being effective
          format: date-time
          x-gw-nullable: true
        exposureLimit:
          $ref: '#/components/schemas/MonetaryAmount'
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        incidentLimit:
          $ref: '#/components/schemas/MonetaryAmount'
        limitsIndicator:
          $ref: '#/components/schemas/TypeKeyReference'
        nonmedAggLimit:
          $ref: '#/components/schemas/MonetaryAmount'
        notes:
          title: Notes
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: Additional comments about this coverage
          x-gw-nullable: true
        personAggLimit:
          $ref: '#/components/schemas/MonetaryAmount'
        policySystemId:
          title: Policy system ID
          maxLength: 256
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The unique identifier of this element within the policy system
            (Since 1.2.0)
          readOnly: true
          x-gw-sinceVersion: 1.2.0
        replaceAggLimit:
          $ref: '#/components/schemas/MonetaryAmount'
        state:
          $ref: '#/components/schemas/TypeKeyReference'
      description: A coverage, condition, or exclusion on an insurance policy or risk unit
    CoverageIssue:
      title: Coverage issue
      type: object
      properties:
        coverageSubtype:
          $ref: '#/components/schemas/TypeKeyReference'
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        reason:
          title: Reason
          maxLength: 65000
          minLength: 1
          pattern: \S
          type: string
          description: The reason this issue was raised
          x-gw-nullable: true
        severity:
          $ref: '#/components/schemas/TypeKeyReference'
      description: A potential problem related to coverage (Since 1.2.0)
      x-gw-sinceVersion: 1.2.0
    Deductible:
      title: Deductible
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/MonetaryAmount'
        amountApplied:
          $ref: '#/components/schemas/MonetaryAmount'
        amountRemaining:
          $ref: '#/components/schemas/MonetaryAmount'
        waived:
          title: Waived
          type: boolean
          description: Specifies whether this deductible has been waived
      description: Amount to deduct from payments (Since 1.3.0)
      x-gw-sinceVersion: 1.3.0
    Document:
      title: Document
      type: object
      properties:
        author:
          title: Author
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The name of the person who created this document
          x-gw-nullable: true
        dateModified:
          title: Date modified
          type: string
          description: The date and time that this `Document` was most recently updated
          format: date-time
          readOnly: true
          x-gw-extensions:
            sortable: true
        description:
          title: Description
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: A description of this document
          x-gw-nullable: true
        docUID:
          title: Document UID
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The unique identifier for this `Document` in the linked document
            management system. The exact format of the identifier depends upon
            the specifics of the document management system the application is
            linked to.
          x-gw-extensions:
            createOnly: true
            defaultViews:
              - detail
        id:
          title: ID
          type: string
          description: The unique identifier of this `Document`
          readOnly: true
        inbound:
          title: Inbound
          type: boolean
          description: >-
            This field indicates whether this document is considered to be
            inbound, outbound, or neither
          x-gw-nullable: true
        language:
          $ref: '#/components/schemas/TypeKeyReference'
        mimeType:
          title: MIME type
          maxLength: 80
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The MIME type of this document, such as `application/msword` for a
            Microsoft Word document
        name:
          title: Name
          maxLength: 80
          minLength: 1
          pattern: \S
          type: string
          description: The name of this document
          x-gw-extensions:
            filterable: true
            requiredForCreate: true
            sortable: true
        obsolete:
          title: Obsolete
          type: boolean
          description: >-
            Setting this field to `true` indicates that the information in this
            document can no longer be relied upon to be current and relevant.
            This is often used instead of deletion to preserve history.
          x-gw-nullable: true
        recipient:
          title: Recipient
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The name of the intended recipient of this document
          x-gw-nullable: true
        relatedTo:
          $ref: '#/components/schemas/GenericRelation'
        section:
          $ref: '#/components/schemas/TypeKeyReference'
        securityType:
          $ref: '#/components/schemas/TypeKeyReference'
        status:
          $ref: '#/components/schemas/TypeKeyReference'
        type:
          $ref: '#/components/schemas/TypeKeyReference'
      description: >-
        A `Document` represents a document within the application, which can
        have additional metadata such as the author of the document or a
        specific security level. The actual contents of the document are
        generally stored in a separate document management system that this
        application is linked to. (Since 1.1.0)
      x-gw-sinceVersion: 1.1.0
    DocumentContent:
      title: Document content
      type: object
      properties:
        contents:
          title: Contents
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          description: The contents of this document as a Base64-encoded string
          format: byte
          readOnly: true
        responseMimeType:
          title: Response MIME type
          type: string
          description: >-
            The MIME type of this document's contents, such as
            `application/msword` for a Microsoft Word document
          readOnly: true
        url:
          title: URL
          type: string
          description: >-
            The URL of this document within the linked document management
            system
          readOnly: true
      description: The contents of a `Document` (Since 1.1.0)
      x-gw-sinceVersion: 1.1.0
    DwellingIncident:
      title: Dwelling incident
      type: object
      properties:
        automationPath:
          $ref: '#/components/schemas/TypeKeyReference'
        damagedAreaSize:
          title: Damaged area size
          minimum: 0
          exclusiveMinimum: true
          type: integer
          description: >-
            The size of the damaged area in square feet, square meters, or other
            units of measurement
          x-gw-nullable: true
        description:
          title: Description
          maxLength: 1333
          minLength: 1
          pattern: \S
          type: string
          description: A general description of the incident
          x-gw-nullable: true
          x-gw-extensions:
            sortable: true
        dwellingRoomDamages:
          title: Dwelling room damages
          type: array
          description: A list of types of rooms that were damaged by this incident
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/DwellingRoomDamage'
        fireProtectionAvailable:
          title: Fire protection available
          type: boolean
          description: A `true` value indicates that fire protection is available
          x-gw-nullable: true
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        location:
          $ref: '#/components/schemas/PolicyLocation'
        lossParty:
          $ref: '#/components/schemas/TypeKeyReference'
        materialsDamaged:
          title: Materials damaged
          maxLength: 250
          minLength: 1
          pattern: \S
          type: string
          description: >-
            A description of materials that were damaged, such as floors or
            walls
          x-gw-nullable: true
        numberOfPeopleOnPolicy:
          title: Number of people on policy
          minimum: 0
          type: integer
          description: The number of people on the policy
          x-gw-nullable: true
        occupancyType:
          $ref: '#/components/schemas/TypeKeyReference'
        propertySize:
          title: Property size
          minimum: 0
          exclusiveMinimum: true
          type: integer
          description: >-
            The size of the property in square feet, square meters, or other
            units of measurement
          x-gw-nullable: true
        severity:
          $ref: '#/components/schemas/TypeKeyReference'
        yearBuilt:
          title: Year built
          type: string
          description: The year in which the property was built
          format: date-time
          x-gw-nullable: true
          x-gw-extensions:
            before: now
        yearsInHome:
          title: Years in home
          minimum: 0
          type: integer
          description: The number of years the insured has lived in the home
          x-gw-nullable: true
      description: >-
        A loss involving fixed property used for dwelling, such as a home or
        condominium
    DwellingRoomDamage:
      title: Dwelling room damage
      type: object
      properties:
        id:
          title: ID
          type: string
          description: The unique identifier of this element
        numberOfRooms:
          title: Number of rooms
          minimum: 0
          exclusiveMinimum: true
          type: integer
          description: The number of rooms of this type that were affected by the loss
          x-gw-nullable: true
        roomType:
          $ref: '#/components/schemas/TypeKeyReference'
      description: Details of damage to a specific room or type of room
    Endorsement:
      title: Endorsement
      type: object
      properties:
        comments:
          title: Comments
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: Additional notes about the endorsement
          x-gw-nullable: true
        description:
          title: Description
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: A description of the endorsement and what it alters
          x-gw-nullable: true
        effectiveDate:
          title: Effective date
          type: string
          description: The date and time when the endorsement becomes effective
          format: date-time
          x-gw-nullable: true
        expirationDate:
          title: Expiration date
          type: string
          description: The date and time when the endorsement ceases to be effective
          format: date-time
          x-gw-nullable: true
        formNumber:
          title: Form number
          maxLength: 64
          minLength: 1
          pattern: \S
          type: string
          description: The code for the endorsement form
          x-gw-nullable: true
          x-gw-extensions:
            sortable: true
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
      description: >-
        Represents an endorsement form applied to a policy that makes some
        modification to it
    Exposure:
      title: Exposure
      type: object
      properties:
        allValidationLevelsReached:
          title: All validation levels reached
          type: array
          description: >-
            The list of all the validation levels that this exposure has passed
            (Since 1.3.0)
          readOnly: true
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/TypeKeyReference'
          x-gw-sinceVersion: 1.3.0
        assignedByUser:
          $ref: '#/components/schemas/SimpleReference'
        assignedGroup:
          $ref: '#/components/schemas/SimpleReference'
        assignedQueue:
          $ref: '#/components/schemas/SimpleReference'
        assignedUser:
          $ref: '#/components/schemas/SimpleReference'
        assignmentStatus:
          $ref: '#/components/schemas/TypeKeyReference'
        autopilotStatus:
          $ref: '#/components/schemas/TypeKeyReference'
        claimOrder:
          title: Claim order
          type: integer
          description: The assigned number of this exposure
          x-gw-extensions:
            sortable: true
        claimant:
          $ref: '#/components/schemas/UpdatablePolicyObjectReference'
        claimantType:
          $ref: '#/components/schemas/TypeKeyReference'
        closeDate:
          title: Close date
          type: string
          description: The date and time when this exposure was closed
          format: date-time
          readOnly: true
        closedOutcome:
          $ref: '#/components/schemas/TypeKeyReference'
        contactPermitted:
          title: Contact permitted
          type: boolean
          description: >-
            Indicates whether contact is permitted with the claimant for this
            exposure
          x-gw-nullable: true
        coverage:
          $ref: '#/components/schemas/UpdatablePolicyObjectReference'
        coverageSubtype:
          $ref: '#/components/schemas/TypeKeyReference'
        createdVia:
          $ref: '#/components/schemas/TypeKeyReference'
        deductible:
          $ref: '#/components/schemas/Deductible'
        dwellingIncident:
          $ref: '#/components/schemas/SimpleReference'
        fixedPropertyIncident:
          $ref: '#/components/schemas/SimpleReference'
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        injuryIncident:
          $ref: '#/components/schemas/SimpleReference'
        jurisdiction:
          $ref: '#/components/schemas/TypeKeyReference'
        livingExpensesIncident:
          $ref: '#/components/schemas/SimpleReference'
        lossCategory:
          $ref: '#/components/schemas/TypeKeyReference'
        lossParty:
          $ref: '#/components/schemas/TypeKeyReference'
        otherCoverage:
          title: Other coverage
          type: boolean
          description: A `true` value indicates that the claimant has additional coverage
          x-gw-nullable: true
        otherStructureIncident:
          $ref: '#/components/schemas/SimpleReference'
        primaryCoverage:
          $ref: '#/components/schemas/TypeKeyReference'
        progress:
          $ref: '#/components/schemas/TypeKeyReference'
        propertyContentsIncident:
          $ref: '#/components/schemas/SimpleReference'
        reopenDate:
          title: Reopen date
          type: string
          description: The date and time when this exposure was reopened
          format: date-time
          readOnly: true
        reopenedReason:
          $ref: '#/components/schemas/TypeKeyReference'
        securityLevel:
          $ref: '#/components/schemas/TypeKeyReference'
        segment:
          $ref: '#/components/schemas/TypeKeyReference'
        state:
          $ref: '#/components/schemas/TypeKeyReference'
        strategy:
          $ref: '#/components/schemas/TypeKeyReference'
        tier:
          $ref: '#/components/schemas/TypeKeyReference'
        type:
          $ref: '#/components/schemas/TypeKeyReference'
        validationLevel:
          $ref: '#/components/schemas/TypeKeyReference'
        vehicleIncident:
          $ref: '#/components/schemas/SimpleReference'
      description: >-
        An object on a claim that manages potential payments from a specific
        coverage to a specific claimant
    ExposureAssignee:
      title: Exposure assignee
      type: object
      properties:
        autoAssign:
          title: Auto assign
          type: boolean
          description: >-
            Set to `true` to indicate the assignment should be done by
            assignment rules. Cannot be combined with any other assignment
            criteria fields.
        claimOwner:
          title: Claim owner
          type: boolean
          description: >-
            Set to `true` to indicate that the exposure should be assigned to
            the same user and group that own the exposure's claim
        groupId:
          title: Group ID
          type: string
          description: >-
            The ID of the `Group` that the exposure should be assigned to. If
            specified without the `userId` field, the `User` within the `Group`
            is selected by assignment rules. If specified along with the
            `userId` field, that specific `User` is assigned the element.
        name:
          title: Name
          type: string
          description: >-
            A human-readable name for the type of assignment that this
            `ExposureAssignee` represents
          readOnly: true
        userId:
          title: User ID
          type: string
          description: >-
            The ID of the `User` that the exposure should be assigned to. The
            `groupId` field must also be specified if the `userId` field is
            specified, and the `User` must be a member of that `Group` and have
            permission to be assigned the element.
      description: >-
        The target of an assignment action, such as a user/group combination or
        automatic rule-based assignment (Since 1.2.0)
      x-gw-sinceVersion: 1.2.0
    FixedPropertyIncident:
      title: Fixed property incident
      type: object
      properties:
        automationPath:
          $ref: '#/components/schemas/TypeKeyReference'
        description:
          title: Description
          maxLength: 1333
          minLength: 1
          pattern: \S
          type: string
          description: A general description of the incident
          x-gw-nullable: true
          x-gw-extensions:
            defaultViews:
              - detail
            sortable: true
        id:
          title: ID
          type: string
          description: The unique identifier of this element
        location:
          $ref: '#/components/schemas/PolicyLocation'
        lossParty:
          $ref: '#/components/schemas/TypeKeyReference'
        occupancyType:
          $ref: '#/components/schemas/TypeKeyReference'
        severity:
          $ref: '#/components/schemas/TypeKeyReference'
      description: >-
        A report of an incident involving property at a fixed location such as a
        building
    GenericRelation:
      title: Generic relation
      required:
        - id
        - type
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The formatted name of the referenced element
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        jsonPath:
          title: JSON path
          type: string
          description: The path to the referenced element within the overall JSON document
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - none
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: A reference to a related element
      x-gw-extensions:
        resourceReference: true
    GroupDetail:
      title: Group detail
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The name of the `Group`
        id:
          title: ID
          type: string
          description: The unique identifier of the `Group`
      description: Used to represent a reference to a `Group`
    InjuryBodyPart:
      title: Injured body party
      type: object
      properties:
        detailedBodyPart:
          $ref: '#/components/schemas/TypeKeyReference'
        detailedBodyPartDesc:
          $ref: '#/components/schemas/TypeKeyReference'
        id:
          title: ID
          type: string
          description: The unique identifier of this element
        impairmentPercentage:
          title: Impairment percentage
          maximum: 100
          minimum: 0
          type: integer
          description: Percentage of permanent impairment in functionality
          x-gw-nullable: true
        ordering:
          title: Ordering
          type: integer
          description: >-
            The order of this element relative to other body parts on the same
            injury incident
        primaryBodyPart:
          $ref: '#/components/schemas/TypeKeyReference'
        sideOfBody:
          $ref: '#/components/schemas/TypeKeyReference'
      description: Details of an injury to a specific body part
    InjuryIncident:
      title: Injury incident
      type: object
      properties:
        ambulanceUsed:
          title: Ambulance used
          type: boolean
          description: A `true` value indicates that an ambulance was used
          x-gw-nullable: true
        automationPath:
          $ref: '#/components/schemas/TypeKeyReference'
        bodyParts:
          title: Body parts
          type: array
          description: >-
            A list of `InjuryBodyPart` elements that describe the specific
            injuries that were sustained
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/InjuryBodyPart'
          x-gw-extensions:
            defaultViews:
              - detail
        dateOfDeath:
          title: Date of death
          type: string
          description: >-
            The date of death, if the severity of this incident is `fatal`
            (Since 1.4.0)
          format: date-time
          x-gw-nullable: true
          x-gw-sinceVersion: 1.4.0
        description:
          title: Description
          maxLength: 1333
          minLength: 1
          pattern: \S
          type: string
          description: A general description of the incident
          x-gw-nullable: true
          x-gw-extensions:
            defaultViews:
              - detail
            sortable: true
        detailedInjuryType:
          $ref: '#/components/schemas/TypeKeyReference'
        disabledDueToAccident:
          $ref: '#/components/schemas/TypeKeyReference'
        generalInjuryType:
          $ref: '#/components/schemas/TypeKeyReference'
        id:
          title: ID
          type: string
          description: The unique identifier of this element
        injuredPerson:
          $ref: '#/components/schemas/UpdatablePolicyObjectReference'
        lossParty:
          $ref: '#/components/schemas/TypeKeyReference'
        lostWages:
          title: Lost wages
          type: boolean
          description: >-
            A `true` value indicates that the injured person lost wages as a
            result of the injury
          x-gw-nullable: true
        primaryDoctor:
          $ref: '#/components/schemas/SimpleReference'
        severity:
          $ref: '#/components/schemas/TypeKeyReference'
        treatmentType:
          $ref: '#/components/schemas/TypeKeyReference'
      description: Information about a bodily injury
    IntakeInteraction:
      title: Intake interaction
      type: object
      properties:
        claimContact:
          $ref: '#/components/schemas/SimpleReference'
        claimSnapshotURL:
          title: Claim snapshot URL
          maxLength: 1333
          minLength: 1
          pattern: \S
          type: string
          description: >-
            Snapshot URL of the claim from AppEvents service, which led to this
            interaction. Provides claim data for subsequent processing.
          x-gw-extensions:
            requiredForCreate: true
        createTime:
          title: Create time
          type: string
          description: The date and time when this `IntakeInteraction` was created
          format: date-time
          readOnly: true
          x-gw-extensions:
            sortable: true
        description:
          title: Description
          maxLength: 1333
          minLength: 1
          pattern: \S
          type: string
          description: >-
            A description of this IntakeInteraction, for display to the claim
            contact who will fulfill it
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        intakeId:
          title: Intake flow ID
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: >-
            Identifier of the intake flow to be presented to the claim contact
            to gather data
          x-gw-extensions:
            requiredForCreate: true
        intakeInputs:
          title: Intake inputs
          type: object
          properties: {}
          description: >-
            A JSON object that contains data for use by the intake flow that is
            not available on the claim
        intakeResults:
          title: Intake results
          type: object
          properties: {}
          description: A JSON object that contains the payload of intake answers
          x-gw-nullable: true
        relatedEntity:
          $ref: '#/components/schemas/GenericRelation'
        status:
          $ref: '#/components/schemas/TypeKeyReference'
      description: >-
        A request to gather data from a claim contact, such as the insured or a
        claimant, using an intake flow (Since 1.3.0)
      x-gw-sinceVersion: 1.3.0
    LinkObject:
      title: Linked object
      type: object
      properties:
        href:
          title: HREF
          type: string
          description: The URL of the link
        methods:
          title: Methods
          type: array
          description: An array of HTTP method names that can be used with the link URL
          xml:
            wrapped: true
          items:
            type: string
      description: A standard HTTP link
    Links:
      title: Links
      type: object
      additionalProperties:
        $ref: '#/components/schemas/LinkObject'
      description: A set of named links
    LivingExpensesIncident:
      title: Living expenses incident
      type: object
      properties:
        automationPath:
          $ref: '#/components/schemas/TypeKeyReference'
        description:
          title: Description
          maxLength: 1333
          minLength: 1
          pattern: \S
          type: string
          description: A general description of this incident
          x-gw-nullable: true
          x-gw-extensions:
            sortable: true
        id:
          title: ID
          type: string
          description: The unique identifier of this element
        lossParty:
          $ref: '#/components/schemas/TypeKeyReference'
        startDate:
          title: Start date
          type: string
          description: >-
            The date when the affected party began their stay with a lodging
            provider
          format: date-time
          x-gw-nullable: true
          x-gw-extensions:
            sortable: true
      description: A report of expenses incurred due to the loss of use of a property
    LocationBasedRiskUnit:
      title: Location risk unit
      type: object
      properties:
        RUNumber:
          title: Risk unit number
          type: integer
          description: The assigned to this risk unit
          readOnly: true
          x-gw-extensions:
            filterable: true
            sortable: true
        building:
          $ref: '#/components/schemas/Building'
        coverages:
          title: Coverages
          type: array
          description: The list of coverages that apply to this risk unit
          readOnly: true
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Coverage'
          x-gw-extensions:
            defaultViews:
              - detail
        description:
          title: Description
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: A description of the risk unit
          x-gw-nullable: true
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        locationId:
          title: Location ID
          type: string
          description: The unique identifier of the location
          readOnly: true
        otherRiskType:
          $ref: '#/components/schemas/TypeKeyReference'
        policyLocation:
          $ref: '#/components/schemas/PolicyLocation'
        policySystemId:
          title: Policy system ID
          maxLength: 256
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The unique identifier of this element in the policy administration
            system
          readOnly: true
        subtype:
          $ref: '#/components/schemas/TypeKeyReference'
      description: A risk unit that includes a location
    MetaObject:
      title: Meta object
      type: object
      properties:
        checksum:
          title: Checksum
          type: string
          description: The checksum of the element
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        links:
          $ref: '#/components/schemas/Links'
        refid:
          title: Reference ID
          type: string
          description: >-
            A unique identifier given to the newly created element in the
            context of the current request
        related:
          $ref: '#/components/schemas/RelatedCollections'
        type:
          title: Type
          type: string
          description: The type of element
      description: An element
    MonetaryAmount:
      title: Monetary amount
      required:
        - amount
        - currency
      type: object
      properties:
        amount:
          title: Amount
          type: string
          description: The decimal amount
          format: gw-bigdecimal
        currency:
          title: Currency
          type: string
          description: The currency for the amount
          x-gw-type: typekey.Currency
      description: A monetary amount that combines a decimal amount with a currency
    Note:
      title: Note
      type: object
      properties:
        author:
          $ref: '#/components/schemas/SimpleReference'
        body:
          title: Body
          maxLength: 65000
          minLength: 1
          pattern: \S
          type: string
          description: The text of this note
          x-gw-extensions:
            defaultViews:
              - detail
            filterable: true
            requiredForCreate: true
        bodySummary:
          title: Body summary
          type: string
          description: >-
            A shorter summary of this note's `body` field, more suitable for
            displaying in a list of notes
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - summary
        confidential:
          title: Confidential
          type: boolean
          description: >-
            A `true` value for this field indicates that the note contains
            confidential information
        createdDate:
          title: Created date
          type: string
          description: The date and time that this `Note` was created
          format: date-time
          readOnly: true
        id:
          title: ID
          type: string
          description: Unique identifier of this `Note`
          readOnly: true
        relatedTo:
          $ref: '#/components/schemas/GenericRelation'
        securityType:
          $ref: '#/components/schemas/TypeKeyReference'
        subject:
          title: Subject
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The subject of this note
          x-gw-nullable: true
          x-gw-extensions:
            filterable: true
            sortable: true
        topic:
          $ref: '#/components/schemas/TypeKeyReference'
        updateTime:
          title: Update time
          type: string
          description: The date and time when this `Note` was most recently updated
          format: date-time
          readOnly: true
          x-gw-extensions:
            sortable: true
      description: >-
        A `Note` is used to capture any sort of additional text that needs to be
        associated with another business object. A `Note` consists of a `body`
        that contains the actual text of the note, along with other fields the
        represent additional metadata about the note.
    OtherStructureIncident:
      title: Other structure incident
      type: object
      properties:
        description:
          title: Description
          maxLength: 1333
          minLength: 1
          pattern: \S
          type: string
          description: General description of the incident
          x-gw-nullable: true
          x-gw-extensions:
            sortable: true
        fencesDamaged:
          title: Fences damaged
          type: boolean
          description: A `true` value indicates that the fence was damaged
          x-gw-nullable: true
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        lossParty:
          $ref: '#/components/schemas/TypeKeyReference'
        severity:
          $ref: '#/components/schemas/TypeKeyReference'
      description: >-
        A loss involving structures other than the main dwelling, such as a
        secondary building like a shed or artist’s studio (Since 1.4.0)
      x-gw-sinceVersion: 1.4.0
    Payee:
      title: Payee
      type: object
      properties:
        contact:
          $ref: '#/components/schemas/UpdatablePolicyObjectReference'
        id:
          title: ID
          type: string
          description: The unique identifier of this element
        payeeType:
          $ref: '#/components/schemas/TypeKeyReference'
      description: The contact that is a payee for a check (Since 1.3.0)
      x-gw-sinceVersion: 1.3.0
    PhoneNumber:
      title: Phone number
      required:
        - countryCode
        - number
      type: object
      properties:
        countryCode:
          $ref: '#/components/schemas/TypeKeyReference'
        displayName:
          title: Display name
          type: string
          description: The phone number formatted in a standardized way
          readOnly: true
        extension:
          title: Extension
          type: string
          description: The extension for the phone number
          x-gw-nullable: true
        number:
          title: Number
          type: string
          description: >-
            The actual phone number, including area code, but excluding the
            country code and extension
      description: >-
        A phone number, with different components of the number broken out as
        separate fields
    Policy:
      title: Policy
      type: object
      properties:
        accountNumber:
          title: Account number
          maxLength: 40
          minLength: 1
          pattern: \S
          type: string
          description: The account number for the account that this policy belongs to
        agent:
          $ref: '#/components/schemas/UpdatablePolicyObjectReference'
        assignedRisk:
          title: Assigned risk
          type: boolean
          description: >-
            A `true` value indicates that this policy is written as part of a
            program mandated by the government for covering the worst risks
          x-gw-nullable: true
        cancellationDate:
          title: Cancellation date
          type: string
          description: The date and time when this policy was cancelled
          format: date-time
          x-gw-nullable: true
        coveredParties:
          title: Covered parties
          type: array
          description: >-
            A list of references to `ClaimContact` elements that represent
            covered parties on this policy (Since 1.2.0)
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/UpdatablePolicyObjectReference'
          x-gw-sinceVersion: 1.2.0
        currency:
          $ref: '#/components/schemas/TypeKeyReference'
        effectiveDate:
          title: Effective date
          type: string
          description: The date and time when this policy became effective
          format: date-time
          x-gw-extensions:
            sortable: true
        excludedParties:
          title: Excluded parties
          type: array
          description: >-
            A list of references to `ClaimContact` elements that represent
            excluded parties on this policy (Since 1.2.0)
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/UpdatablePolicyObjectReference'
          x-gw-sinceVersion: 1.2.0
        expirationDate:
          title: Expiration date
          type: string
          description: The date and time when this policy ceased to be in effect
          format: date-time
        financialInterests:
          title: Financial interests
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: Other financial interests of note
          x-gw-nullable: true
        foreignCoverage:
          title: Foreign coverage
          type: boolean
          description: A `true` value indicates that the insured has foreign coverage
          x-gw-nullable: true
        id:
          title: ID
          type: string
          description: The unique identifier of this element
        insured:
          $ref: '#/components/schemas/UpdatablePolicyObjectReference'
        notes:
          title: Notes
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: Other comments about the policy
          x-gw-nullable: true
        originalEffectiveDate:
          title: Original effective date
          type: string
          description: The date and time when the policy holder first had coverage
          format: date-time
          x-gw-nullable: true
        policyLocations:
          title: Policy locations
          type: array
          description: >-
            A list of references to `PolicyLocation` elements that represent
            locations that appear on this policy
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/PolicyObjectReference'
          x-gw-extensions:
            defaultViews:
              - detail
        policyNumber:
          title: Policy number
          maxLength: 40
          minLength: 1
          pattern: \S
          type: string
          description: The policy number assigned to this policy
          x-gw-extensions:
            requiredForCreate: true
            sortable: true
        policyType:
          $ref: '#/components/schemas/TypeKeyReference'
        producerCode:
          title: Producer code
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The producer code for the agency responsible for this policy
        serviceTier:
          $ref: '#/components/schemas/TypeKeyReference'
        status:
          $ref: '#/components/schemas/TypeKeyReference'
        underwritingCo:
          $ref: '#/components/schemas/TypeKeyReference'
        underwritingGroup:
          $ref: '#/components/schemas/TypeKeyReference'
        verifiedPolicy:
          title: Verified policy
          type: boolean
          description: >-
            A `true` value indicates that the policy has not been edited since
            it was retrieved from the policy system
          readOnly: true
      description: >-
        A copy of the policy that a claim has been filed against. Each `Claim`
        has its own copy of the associated policy.
    PolicyLocation:
      title: Policy location
      type: object
      properties:
        address:
          $ref: '#/components/schemas/ClaimAddress'
        buildings:
          title: Buildings
          type: array
          description: A list of buildings at this location
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Building'
          x-gw-extensions:
            defaultViews:
              - detail
        displayName:
          title: Display name
          type: string
          description: The formatted name of this location
          readOnly: true
        id:
          title: ID
          type: string
          description: The unique identifier of this element
        locationNumber:
          title: Location number
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The location number automatically assigned to this location in the
            context of the policy
          x-gw-extensions:
            filterable: true
            sortable: true
        notes:
          title: Notes
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: Additional comments about this location
        policySystemId:
          title: Policy system ID
          maxLength: 256
          minLength: 1
          pattern: \S
          type: string
          description: The unique identifier of this element within the policy system
        primaryLocation:
          title: Primary location
          type: boolean
          description: >-
            A `true` value indicates that this location is the primary location
            on the policy
          x-gw-extensions:
            filterable: true
            sortable: true
      description: A location on a policy
    PolicyObjectReference:
      title: Policy object reference
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The formatted name of the referenced element
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        jsonPath:
          title: JSON path
          type: string
          description: >-
            The path to the referenced element within the overall JSON document
            (Since 1.2.0)
          readOnly: true
          x-gw-sinceVersion: 1.2.0
          x-gw-extensions:
            defaultViews:
              - none
        policyLabel:
          title: Policy label
          type: string
          description: >-
            A label that describes the context in which the referenced element
            appears on the policy
          readOnly: true
        policySystemId:
          title: Policy system ID
          type: string
          description: The unique identifier of this element within the policy system
        type:
          title: Type
          type: string
          description: The type of the referenced element (Since 1.2.0)
          x-gw-sinceVersion: 1.2.0
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element (Since 1.2.0)
          x-gw-sinceVersion: 1.2.0
      description: A reference to an element that exists on the claim's copy of the policy
      x-gw-extensions:
        resourceReference: true
    PropertyContentsIncident:
      title: Property contents incident
      type: object
      properties:
        description:
          title: Description
          maxLength: 1333
          minLength: 1
          pattern: \S
          type: string
          description: General description of the incident
          x-gw-nullable: true
          x-gw-extensions:
            sortable: true
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        location:
          $ref: '#/components/schemas/PolicyLocation'
        lossParty:
          $ref: '#/components/schemas/TypeKeyReference'
        severity:
          $ref: '#/components/schemas/TypeKeyReference'
      description: Property contents incident (Since 1.4.0)
      x-gw-sinceVersion: 1.4.0
    QueueDetail:
      title: Queue detail
      type: object
      properties:
        displayName:
          title: Display name
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: The name of the `Queue`
        id:
          title: ID
          type: string
          description: The unique identifier of the `Queue`
      description: Used to represent a reference to a `Queue`
    RecoveryReserveSet:
      title: Recovery reserve set
      type: object
      properties:
        approvalDate:
          title: Approval date
          type: string
          description: >-
            The date and time when this recovery reserve set was approved or
            rejected
          format: date-time
          readOnly: true
          x-gw-extensions:
            sortable: true
        approvalStatus:
          $ref: '#/components/schemas/TypeKeyReference'
        createTime:
          title: Create time
          type: string
          description: The date and time when this `RecoveryReserveSet` was created
          format: date-time
          readOnly: true
          x-gw-extensions:
            sortable: true
        createdVia:
          $ref: '#/components/schemas/TypeKeyReference'
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        recoveryReserves:
          title: RecoveryReserves
          type: array
          description: >-
            The list of `RecoveryReserves` that define the recovery reserve
            transactions that are part of this set
          readOnly: true
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/SimpleReference'
          x-gw-extensions:
            defaultViews:
              - detail
        recoveryReservesToWrite:
          title: RecoveryReserves to write
          minItems: 1
          type: array
          description: >-
            The list of `RecoveryReserves` used to populate a recovery reserve
            set during creation or edit
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Transaction'
          x-gw-extensions:
            requiredForCreate: true
        requestingUser:
          $ref: '#/components/schemas/SimpleReference'
      description: >-
        A set of related recovery reserve transactions that are submitted
        together for approval (Since 1.3.0)
      x-gw-sinceVersion: 1.3.0
    RecoverySet:
      title: Recovery set
      type: object
      properties:
        approvalDate:
          title: Approval date
          type: string
          description: The date and time when this recovery set was approved or rejected
          format: date-time
          readOnly: true
          x-gw-extensions:
            sortable: true
        approvalStatus:
          $ref: '#/components/schemas/TypeKeyReference'
        createTime:
          title: Create time
          type: string
          description: The date and time when this `RecoverySet` was created
          format: date-time
          readOnly: true
          x-gw-extensions:
            sortable: true
        createdVia:
          $ref: '#/components/schemas/TypeKeyReference'
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        recoveries:
          title: Recoveries
          type: array
          description: >-
            The list of `Transaction` elements that define the recovery
            transactions that are part of this set
          readOnly: true
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/SimpleReference'
          x-gw-extensions:
            defaultViews:
              - detail
        recoveriesToWrite:
          title: Recoveries to write
          minItems: 1
          type: array
          description: >-
            The list of `Recoveries` used to populate a recovery set during
            creation or edit
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Transaction'
          x-gw-extensions:
            requiredForCreate: true
        requestingUser:
          $ref: '#/components/schemas/SimpleReference'
      description: >-
        A set of related recovery transactions that are submitted together for
        approval (Since 1.3.0)
      x-gw-sinceVersion: 1.3.0
    RelatedCollection:
      title: Related collection
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: The number of elements included in the `data` array
        data:
          title: Data
          type: array
          description: The list of references to the related elements
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/SimpleReference'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements in the related set of elements. Only
            present if the `includeTotal` query parameter is used to request
            that the total be calculated for an included collection.
      description: >-
        A set of element references that are related to the element in some way.
        Used to link elements with their relations when a request is made using
        the `include` query parameter.
    RelatedCollections:
      title: Related collections
      type: object
      additionalProperties:
        $ref: '#/components/schemas/RelatedCollection'
      description: >-
        A set of `RelatedCollection` elements that contain references to
        elements included using the `include` query parameter on a request
    ReserveSet:
      title: Reserve set
      type: object
      properties:
        approvalDate:
          title: Approval date
          type: string
          description: The date and time when this reserve set was approved or rejected
          format: date-time
          readOnly: true
          x-gw-extensions:
            sortable: true
        approvalStatus:
          $ref: '#/components/schemas/TypeKeyReference'
        createTime:
          title: Create time
          type: string
          description: The date and time when this `ReserveSet` was created
          format: date-time
          readOnly: true
          x-gw-extensions:
            sortable: true
        createdVia:
          $ref: '#/components/schemas/TypeKeyReference'
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        requestingUser:
          $ref: '#/components/schemas/SimpleReference'
        reserves:
          title: Reserves
          type: array
          description: >-
            The list of `Transaction` elements that define the reserve
            transactions that are part of this set
          readOnly: true
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/SimpleReference'
          x-gw-extensions:
            defaultViews:
              - detail
        reservesToWrite:
          title: Reserves to write
          minItems: 1
          type: array
          description: >-
            The list of `Reserves` used to populate a reserve set during
            creation or edit
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Transaction'
          x-gw-extensions:
            requiredForCreate: true
      description: >-
        A set of related reserve transactions that are submitted together for
        approval (Since 1.3.0)
      x-gw-sinceVersion: 1.3.0
    RoleSchemaConstraint:
      title: Role schema constraint
      type: object
      properties:
        constraints:
          title: Constraints
          type: array
          description: >-
            A list of specific constraints, for example that the role is
            required or can only be held by one contact
          readOnly: true
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/SchemaConstraint'
        exceptionSubtypes:
          title: Exception subtypes
          type: array
          description: >-
            A list of exceptions to the `subtype` defined on the containing
            constraint that allow additional contact types to have this role
            when it is related to the type of element defined in the `schema`
            field
          readOnly: true
          xml:
            wrapped: true
          items:
            type: string
        schema:
          title: Schema
          type: string
          description: >-
            The type of owning element that this constraint applies to. For
            example, a `schema` value of `Claim` means that this constraint
            applies when the role is related to the claim itself and not to
            another element such as an exposure.
          readOnly: true
      description: A constraint that applies to how roles can be assigned to contacts
    SchemaConstraint:
      title: Schema constraint
      type: object
      properties:
        additionalInfoList:
          title: Additional info list
          type: array
          description: >-
            A list of additional criteria for the constraint, such as specific
            loss types or exposure types that it applies to
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/AdditionalInfo'
        constraintType:
          title: Constraint type
          type: string
          description: >-
            The type of constraint. Possible values include `Prohibited`,
            `Exclusive`, `Required`, and `ZeroToMore`.
          readOnly: true
      description: >-
        A specific constraint for a contact role in the context of a related
        element
    ServiceRequest:
      title: Service request
      type: object
      properties:
        assignedGroup:
          $ref: '#/components/schemas/SimpleReference'
        assignedUser:
          $ref: '#/components/schemas/SimpleReference'
        assignmentDate:
          title: Assignment date
          type: string
          description: >-
            The date when this service request was last assigned. For precision
            across timezones, use `assignmentDateTime` field.
          format: date
          readOnly: true
        assignmentDateTime:
          title: Assignment date time
          type: string
          description: The date and time when this service request was last assigned
          format: date-time
          readOnly: true
        canceledReason:
          title: Canceled reason
          maxLength: 65000
          minLength: 1
          pattern: \S
          type: string
          description: The reason this service request was canceled
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - detail
        claim:
          $ref: '#/components/schemas/ClaimReference'
        createTime:
          title: Create time
          type: string
          description: The date and time when this `ServiceRequest` was created
          format: date-time
          readOnly: true
          x-gw-extensions:
            sortable: true
        expectedQuoteCompletionDate:
          title: Expected quote completion date
          type: string
          description: >-
            The date by which the specialist expects to submit the quote. For
            precision across timezones, use `expectedQuoteCompletionDateTime`
            field.
          format: date
          readOnly: true
        expectedQuoteCompletionDateTime:
          title: Expected quote completion date time
          type: string
          description: >-
            The date and time by which the specialist expects to submit the
            quote
          format: date-time
          readOnly: true
        expectedServiceCompletionDate:
          title: Expected service completion date
          type: string
          description: >-
            The date by which the specialist expects to complete the work. For
            precision across timezones, use `expectedServiceCompletionDateTime`
            field.
          format: date
          readOnly: true
        expectedServiceCompletionDateTime:
          title: Expected service completion date time
          type: string
          description: >-
            The date and time by which the specialist expects to complete the
            work
          format: date-time
          readOnly: true
        exposure:
          $ref: '#/components/schemas/SimpleReference'
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        incident:
          $ref: '#/components/schemas/SimpleReference'
        instruction:
          $ref: '#/components/schemas/ServiceRequestInstruction'
        kind:
          $ref: '#/components/schemas/TypeKeyReference'
        latestQuote:
          $ref: '#/components/schemas/ServiceRequestStatement'
        nextStep:
          $ref: '#/components/schemas/ServiceRequestAction'
        progress:
          $ref: '#/components/schemas/TypeKeyReference'
        quoteStatus:
          $ref: '#/components/schemas/TypeKeyReference'
        referenceNumber:
          title: Reference number
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: >-
            A string identifier assigned to this service request by the
            specialist
        requestedQuoteCompletionDate:
          title: Requested quote completion date
          type: string
          description: >-
            The desired date by which the specialist will have submitted the
            quote. For precision across timezones, use
            `requestedQuoteCompletionDateTime` field.
          format: date
          x-gw-extensions:
            after: now
            createOnly: true
        requestedQuoteCompletionDateTime:
          title: Requested quote completion date time
          type: string
          description: >-
            The desired date and time by which the specialist will have
            submitted the quote
          format: date-time
          x-gw-extensions:
            after: now
            createOnly: true
        requestedServiceCompletionDate:
          title: Requested service completion date
          type: string
          description: >-
            The desired date by which the specialist will have completed the
            work. For precision across timezones, use
            `requestedServiceCompletionDateTime` field.
          format: date
          x-gw-extensions:
            after: now
            createOnly: true
        requestedServiceCompletionDateTime:
          title: Requested service completion date time
          type: string
          description: >-
            The desired date and time by which the specialist will have
            completed the work
          format: date-time
          x-gw-extensions:
            after: now
            createOnly: true
        serviceRequestNumber:
          title: Service request number
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: >-
            A globally unique, user-readable identifier for this service
            request. This number is normally generated within the application.
          readOnly: true
        specialist:
          $ref: '#/components/schemas/SimpleReference'
        specialistCommMethod:
          $ref: '#/components/schemas/TypeKeyReference'
        tier:
          $ref: '#/components/schemas/TypeKeyReference'
      description: >-
        Represents a unit of work requested of a specialist or vendor, including
        instructions that describe the work to be done and its current state
    ServiceRequestAction:
      title: Service request action
      type: object
      properties:
        defaultOperation:
          title: Default operation
          type: string
          description: The type of operation this action performs when invoked
        name:
          title: Name
          type: string
          description: The name of this action
      description: An action that can be taken on a service request (Since 1.1.0)
      x-gw-sinceVersion: 1.1.0
    ServiceRequestAssignee:
      title: Service request assignee
      type: object
      properties:
        autoAssign:
          title: Auto assign
          type: boolean
          description: >-
            Set to `true` to indicate the assignment should be done by
            assignment rules. Cannot be combined with any other assignment
            criteria fields.
        claimOwner:
          title: Claim owner
          type: boolean
          description: >-
            Set to `true` to indicate that the service request should be
            assigned to the same user and group that own the service request's
            claim
        groupId:
          title: Group ID
          type: string
          description: >-
            The `id` of the `Group` that the service request should be assigned
            to. If specified without the `userId` field, the `User` within the
            `Group` is selected by assignment rules. If specified along with the
            `userId` field, that `User` must be a member of the `Group`, and
            that `User` is assigned the service request.
        name:
          title: Name
          type: string
          description: >-
            A human-readable name for the type of assignment that this
            `ServiceRequestAssignee` represents
          readOnly: true
        userId:
          title: User ID
          type: string
          description: >-
            The ID of the `User` that the service request should be assigned to.
            The `groupId` field must also be specified if the `userId` field is
            specified, and the `User` must be a member of that `Group` and have
            permission to be assigned the element.
      description: >-
        The target of an assignment action, such as a user/group combination or
        automatic rule-based assignment (Since 1.2.0)
      x-gw-sinceVersion: 1.2.0
    ServiceRequestInstruction:
      title: Service request instruction
      type: object
      properties:
        customer:
          $ref: '#/components/schemas/UpdatablePolicyObjectReference'
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        instructionText:
          title: Instruction text
          maxLength: 65000
          minLength: 1
          pattern: \S
          type: string
          description: The instructions to be provided to the specialist
          x-gw-extensions:
            createOnly: true
            defaultViews:
              - detail
            sortable: true
        serviceAddress:
          $ref: '#/components/schemas/ClaimAddress'
        services:
          title: Services
          minItems: 1
          type: array
          description: The services to be performed for this set of instructions
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/SpecialistService'
          x-gw-extensions:
            createOnly: true
            requiredForCreate: true
      description: >-
        A set of instructions to be transmitted to the specialist who will work
        on a service request (Since 1.1.0)
      x-gw-sinceVersion: 1.1.0
    ServiceRequestInvoiceOperationContext:
      title: Service request invoice operation context
      type: object
      properties:
        reason:
          title: Reason
          type: string
          description: The reason the operation is being performed
      description: >-
        Additional details regarding an operation performed on a service request
        invoice (Since 1.2.0)
      x-gw-sinceVersion: 1.2.0
    ServiceRequestInvoicePayInfo:
      title: Service request invoice payment info
      required:
        - check
      type: object
      properties:
        check:
          $ref: '#/components/schemas/SimpleReference'
        operationContext:
          $ref: '#/components/schemas/ServiceRequestInvoiceOperationContext'
      description: Details regarding the invoice payment (Since 1.3.0)
      x-gw-sinceVersion: 1.3.0
    ServiceRequestOperationContext:
      title: Service request operation context
      type: object
      properties:
        expectedCompletionDate:
          title: Expected completion date
          type: string
          description: The date by which the specialist expects to complete the work
          format: date-time
          x-gw-extensions:
            after: now
        originalDate:
          title: Original date
          type: string
          description: The original service completion date
          format: date-time
        reason:
          title: Reason
          type: string
          description: The reason the operation is being performed
        requestedCompletionDate:
          title: Requested completion date
          type: string
          description: The requested quote or service completion date
          format: date-time
          x-gw-extensions:
            after: now
        statement:
          $ref: '#/components/schemas/ServiceRequestStatement'
      description: >-
        Additional details regarding an operation performed on a service request
        (Since 1.1.0)
      x-gw-sinceVersion: 1.1.0
    ServiceRequestReference:
      title: Service request reference
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The formatted name of the referenced element
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        jsonPath:
          title: JSON path
          type: string
          description: The path to the referenced element within the overall JSON document
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - none
        referenceNumber:
          title: Reference number
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The `referenceNumber` of the referenced service request
        serviceRequestNumber:
          title: Reference number
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The `serviceRequestNumber` of the referenced service request
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: A reference to a `ServiceRequest` element
      x-gw-extensions:
        resourceReference: true
    ServiceRequestSimpleOperationContext:
      title: Service request simple operation context
      type: object
      description: >-
        Additional details regarding a simple operation performed on a service
        request (Since 1.1.0)
      x-gw-sinceVersion: 1.1.0
    ServiceRequestStatement:
      title: Service request statement
      required:
        - description
      type: object
      properties:
        approvalDate:
          title: Approval date
          type: string
          description: The date and time when this statement was approved
          format: date-time
          readOnly: true
          x-gw-extensions:
            sortable: true
        approvedBy:
          $ref: '#/components/schemas/SimpleReference'
        creationTime:
          title: Creation time
          type: string
          description: The date and time when this statement was created
          format: date-time
          readOnly: true
          x-gw-extensions:
            sortable: true
        declinedReason:
          title: Declined reason
          maxLength: 65000
          minLength: 1
          pattern: \S
          type: string
          description: The reason the statement was declined
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - detail
        description:
          title: Description
          maxLength: 65000
          minLength: 1
          pattern: \S
          type: string
          description: A description of the statement
          x-gw-extensions:
            defaultViews:
              - detail
        expectedDaysToPerformService:
          title: Expected days to perform service
          type: integer
          description: >-
            The number of business days the specialist expects it will take to
            perform the service. Only applicable if `subtype` is
            `ServiceRequestQuote`.
          x-gw-extensions:
            entitySubtype: ServiceRequestQuote
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        lineItems:
          title: Line items
          minItems: 1
          type: array
          description: The list of line items for this statement
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ServiceRequestStatementLineItem'
          x-gw-extensions:
            requiredForCreate: true
        operationContext:
          $ref: '#/components/schemas/ServiceRequestSimpleOperationContext'
        paymentDate:
          title: Payment date
          type: string
          description: >-
            The date when this invoice was paid. Only applicable if `subtype` is
            `ServiceRequestInvoice`. For precision across timezones, use
            `paymentDateTime` field.
          format: date
          x-gw-extensions:
            entitySubtype: ServiceRequestInvoice
        paymentDateTime:
          title: Payment date time
          type: string
          description: >-
            The date and time when this invoice was paid. Only applicable if
            `subtype` is `ServiceRequestInvoice`. (Since 1.4.0)
          format: date-time
          x-gw-sinceVersion: 1.4.0
          x-gw-extensions:
            entitySubtype: ServiceRequestInvoice
        referenceNumber:
          title: Reference number
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: An identifier assigned to this statement by the specialist
        source:
          $ref: '#/components/schemas/TypeKeyReference'
        status:
          $ref: '#/components/schemas/TypeKeyReference'
        subtype:
          $ref: '#/components/schemas/TypeKeyReference'
        total:
          $ref: '#/components/schemas/MonetaryAmount'
      description: >-
        A statement received from a specialist related to a service request,
        such as a quote or invoice (Since 1.1.0)
      x-gw-sinceVersion: 1.1.0
    ServiceRequestStatementLineItem:
      title: Service request statement line item
      required:
        - amount
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/MonetaryAmount'
        category:
          $ref: '#/components/schemas/TypeKeyReference'
        description:
          title: Description
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: A description of the line item
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
      description: A single line item on a service request statement (Since 1.1.0)
      x-gw-sinceVersion: 1.1.0
    SimpleReference:
      title: Simple reference
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The formatted name of the element
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        jsonPath:
          title: JSON path
          type: string
          description: >-
            The path to the referenced element within the overall JSON document
            (Since 1.2.0)
          readOnly: true
          x-gw-sinceVersion: 1.2.0
          x-gw-extensions:
            defaultViews:
              - none
        refid:
          title: Reference ID
          type: string
          description: >-
            A unique identifier given to the newly created element in the
            context of the current request
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: A reference to an element
      x-gw-extensions:
        resourceReference: true
    SpatialPoint:
      title: Spatial point
      required:
        - latitude
        - longitude
      type: object
      properties:
        latitude:
          title: Latitude
          type: string
          description: The latitude of the spatial point
          format: gw-bigdecimal
        longitude:
          title: Longitude
          type: string
          description: The longitude of the spatial point
          format: gw-bigdecimal
      description: An object that combines a latitude with a longitude (Since 1.2.0)
      x-gw-sinceVersion: 1.2.0
    SpecialistService:
      title: Specialist service
      type: object
      properties:
        active:
          title: Active
          type: boolean
          description: >-
            A `true` value indicates that this service is active for the
            specialist and can be used for new service requests
          readOnly: true
        code:
          title: Code
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: A unique code identifying the service
          x-gw-extensions:
            createOnly: true
        description:
          title: Description
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: A description of the service
          readOnly: true
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        name:
          title: Name
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The name of the service
          readOnly: true
        parent:
          $ref: '#/components/schemas/CodeReference'
      description: A particular service category that a specialist is able to provide
    Transaction:
      title: Transaction
      type: object
      properties:
        bookingDate:
          title: Booking date
          type: string
          description: The date and time when the transaction was submitted
          format: date-time
          readOnly: true
        claimToReportingExchangeRate:
          $ref: '#/components/schemas/TransactionExchangeRate'
        comments:
          title: Comments
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: Comments about the transaction
          x-gw-extensions:
            defaultViews:
              - detail
        coverage:
          $ref: '#/components/schemas/TypeKeyReference'
        createTime:
          title: Create time
          type: string
          description: The date and time when this `Transaction` was created
          format: date-time
          readOnly: true
          x-gw-extensions:
            sortable: true
        createdVia:
          $ref: '#/components/schemas/TypeKeyReference'
        currency:
          $ref: '#/components/schemas/TypeKeyReference'
        eroding:
          title: Eroding
          type: boolean
          description: >-
            A `true` value indicates that this transaction erodes the reserves
            for the associated reserve line. Only applicable if `type` is
            `Payment`.
          x-gw-extensions:
            entitySubtype: Payment
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        lineItems:
          title: Line items
          minItems: 1
          type: array
          description: The list of line items that are part of this transaction
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/TransactionLineItem'
          x-gw-extensions:
            createOnly: true
            requiredForCreate: true
        paymentType:
          $ref: '#/components/schemas/TypeKeyReference'
        reserveLine:
          $ref: '#/components/schemas/TransactionCoding'
        status:
          $ref: '#/components/schemas/TypeKeyReference'
        subtype:
          $ref: '#/components/schemas/TypeKeyReference'
        transToClaimExchangeRate:
          $ref: '#/components/schemas/TransactionExchangeRate'
        transToReservingExchangeRate:
          $ref: '#/components/schemas/TransactionExchangeRate'
      description: >-
        A financial transaction for a claim or exposure. Transactions are either
        reserves, payments, recoveries, or recovery reserves. (Since 1.3.0)
      x-gw-sinceVersion: 1.3.0
    TransactionCoding:
      title: Transaction coding
      required:
        - costCategory
        - costType
        - exposure
        - reservingCurrency
      type: object
      properties:
        costCategory:
          $ref: '#/components/schemas/TypeKeyReference'
        costType:
          $ref: '#/components/schemas/TypeKeyReference'
        exposure:
          $ref: '#/components/schemas/SimpleReference'
        recoveryCategory:
          $ref: '#/components/schemas/TypeKeyReference'
        reservingCurrency:
          $ref: '#/components/schemas/TypeKeyReference'
      description: >-
        A unique combination of an exposure, cost category, cost type, and
        reserving currency that is used to group transactions for a particular
        claim in order to establish reserves and make payments against them
        (Since 1.3.0)
      x-gw-sinceVersion: 1.3.0
    TransactionExchangeRate:
      title: Transaction exchange rate
      required:
        - market
      type: object
      properties:
        description:
          title: Description
          maxLength: 1333
          minLength: 1
          pattern: \S
          type: string
          description: A description of the exchange rate
          x-gw-nullable: true
        market:
          title: Market
          type: boolean
          description: >-
            A `true` value indicates that this exchange rate will appear in
            searches for the latest market rates
        rate:
          title: Rate
          type: string
          description: The actual exchange rate
          format: gw-bigdecimal
          x-gw-nullable: true
      description: An exchange rate between two currencies (Since 1.3.0)
      x-gw-sinceVersion: 1.3.0
    TransactionLineItem:
      title: Transaction line item
      type: object
      properties:
        claimAmount:
          $ref: '#/components/schemas/MonetaryAmount'
        comments:
          title: Comments
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: A description of the line item
        id:
          title: ID
          type: string
          description: The unique identifier of this element
        lineCategory:
          $ref: '#/components/schemas/TypeKeyReference'
        reportingAmount:
          $ref: '#/components/schemas/MonetaryAmount'
        reservingAmount:
          $ref: '#/components/schemas/MonetaryAmount'
        transactionAmount:
          $ref: '#/components/schemas/MonetaryAmount'
      description: A line item on a transaction (Since 1.3.0)
      x-gw-sinceVersion: 1.3.0
    TypeFilter:
      title: TypeFilter
      type: object
      properties:
        description:
          title: Description
          type: string
          description: The description of this `TypeFilter`
        name:
          title: Name
          type: string
          description: The name of this `TypeFilter`
        typeKeys:
          title: TypeKeys
          type: array
          description: >-
            The `code` values for the `TypeKeys` that are included by this
            `TypeFilter`
          xml:
            wrapped: true
          items:
            type: string
          x-gw-extensions:
            defaultViews:
              - detail
      description: >-
        A `TypeFilter` represents a filtered set of the `TypeKey` values from a
        `TypeList`
    TypeKey:
      title: TypeKey
      type: object
      properties:
        categories:
          title: Categories
          type: array
          description: >-
            The categories that this `TypeKey` belongs to. Categories are
            formatted by combining the name of the `TypeList` with the `code`
            for its `TypeKey`, separated by a `.` character.
          xml:
            wrapped: true
          items:
            type: string
          x-gw-extensions:
            defaultViews:
              - none
        code:
          title: Code
          type: string
          description: >-
            The code for this `TypeKey`. `TypeKey` codes are unique within a
            `TypeList`.
        description:
          title: Description
          type: string
          description: The longer description of this `TypeKey`
        name:
          title: Name
          type: string
          description: The human-readable name of this `TypeKey`
        priority:
          title: Priority
          type: integer
          description: >-
            The order of this `TypeKey` relative to other `TypeKeys` in the same
            `TypeList`. A `TypeKey` with a lower `priority` will appear before a
            `TypeKey` with a higher priority when the values for a `TypeList`
            are presented in sorted order.
        retired:
          title: Retried
          type: boolean
          description: >-
            A `true` value for this field indicates that the `TypeKey` value
            should no longer be used. Retired `TypeKey` values are retained only
            for the sake of historical data that may already be using the
            `TypeKey`.
          x-gw-extensions:
            defaultViews:
              - none
      description: >-
        A `TypeKey` represents one of the possible enumerated values of a
        `TypeList`
    TypeKeyReference:
      title: TypeKey reference
      required:
        - code
      type: object
      properties:
        code:
          title: Code
          type: string
          description: The `code` of the `TypeKey`
        name:
          title: Name
          type: string
          description: The `name` of the `TypeKey`
      description: >-
        A reference to a `TypeKey` element that defines an enumerated value from
        a `TypeList`
    TypeList:
      title: TypeList
      type: object
      properties:
        description:
          title: Description
          type: string
          description: The description of this `TypeList`
        name:
          title: Name
          type: string
          description: The name of this `TypeList`
          x-gw-extensions:
            filterable: true
            sortable: true
        typeFilters:
          title: TypeFilters
          type: array
          description: >-
            The set of `TypeFilters` available on this `TypeList`. A
            `TypeFilter` represents a filtered subset of the `TypeKeys` in this
            `TypeList`.
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/TypeFilter'
          x-gw-extensions:
            defaultViews:
              - detail
        typeKeys:
          title: TypeKeys
          type: array
          description: >-
            The list of `TypeKeys` available on this `TypeList`. A `TypeKey`
            represents one of the enumerated values that comprise this
            `TypeList`.
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/TypeKey'
          x-gw-extensions:
            defaultViews:
              - detail
      description: A `TypeList` represents a list of enumerated `TypeKey` values
    UnverifiedPolicyLocation:
      title: Unverified policy location
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        buildings:
          title: Buildings
          type: array
          description: A list of buildings at this location
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Building'
          x-gw-extensions:
            defaultViews:
              - detail
        displayName:
          title: Display name
          type: string
          description: The formatted name of this location
          readOnly: true
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        locationNumber:
          title: Location number
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The location number in the context of the policy
          x-gw-nullable: true
          x-gw-extensions:
            filterable: true
            sortable: true
        notes:
          title: Notes
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: Additional comments about this location
          x-gw-nullable: true
        policySystemId:
          title: Policy system ID
          maxLength: 256
          minLength: 1
          pattern: \S
          type: string
          description: The unique identifier of this element within the policy system
          readOnly: true
        primaryLocation:
          title: Primary location
          type: boolean
          description: >-
            A `true` value indicates that this location is the primary location
            on the policy
          readOnly: true
          x-gw-extensions:
            filterable: true
            sortable: true
      description: >-
        A policy location on an unverified policy. An unverified policy is a
        policy that was manually entered or modified, and therefore it may not
        match the information in the policy system. (Since 1.2.0)
      x-gw-sinceVersion: 1.2.0
    UpdatablePolicyObjectReference:
      title: Updatable policy object reference
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The formatted name of the element
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        jsonPath:
          title: JSON path
          type: string
          description: >-
            The path to the referenced element within the overall JSON document
            (Since 1.2.0)
          readOnly: true
          x-gw-sinceVersion: 1.2.0
          x-gw-extensions:
            defaultViews:
              - none
        policySystemId:
          title: Policy system ID
          type: string
          description: >-
            The unique identifier of the referenced element within the policy
            system
        refid:
          title: Reference ID
          type: string
          description: >-
            A unique identifier given to the newly created element in the
            context of the current request
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: >-
        A reference to an object, such as a location or vehicle, that may exist
        on the policy or which may only exist on the claim
      x-gw-extensions:
        resourceReference: true
    ValidationIssue:
      title: Validation issue
      type: object
      properties:
        field:
          title: Field
          type: string
          description: The field that the issue applies to
        id:
          title: ID
          type: string
          description: The unique identifier of the element that the issue applies to
        message:
          title: Message
          type: string
          description: The error or warning message
        severity:
          $ref: '#/components/schemas/TypeKeyReference'
        type:
          title: Type
          type: string
          description: The type of element that the issue applies to
        url:
          title: URL
          type: string
          description: The canonical URI of the element that the issue applies to
        validationLevel:
          $ref: '#/components/schemas/TypeKeyReference'
      description: An error or warning raised during validation
    ValidationResult:
      title: Validation result
      type: object
      properties:
        allValidationLevelsReached:
          title: All validation levels reached
          type: array
          description: >-
            The list of all the validation levels that were passed by the root
            element being validated (Since 1.3.0)
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/TypeKeyReference'
          x-gw-sinceVersion: 1.3.0
        hasErrors:
          title: Has errors
          type: boolean
          description: >-
            A `true` value indicates that there are one or more issues with a
            `severity` or `error` on this result
        validationIssues:
          title: Validation issues
          type: array
          description: The list of specific validation issues that were raised by rules
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ValidationIssue'
        validationLevelReached:
          $ref: '#/components/schemas/TypeKeyReference'
      description: The results of running validation rules against an element
    Vehicle:
      title: Vehicle
      type: object
      properties:
        color:
          title: Color
          maxLength: 40
          minLength: 1
          pattern: \S
          type: string
          description: The color of this vehicle
          x-gw-nullable: true
        displayName:
          title: Display name
          type: string
          description: The formatted name of this vehicle
          readOnly: true
        id:
          title: ID
          type: string
          description: The unique identifier of this element
        licensePlate:
          title: License plate
          maxLength: 40
          minLength: 1
          pattern: \S
          type: string
          description: The license plate number of this vehicle
          x-gw-nullable: true
        make:
          title: Make
          maxLength: 40
          minLength: 1
          pattern: \S
          type: string
          description: The make of this vehicle
          x-gw-nullable: true
        manufacturer:
          $ref: '#/components/schemas/TypeKeyReference'
        model:
          title: Model
          maxLength: 40
          minLength: 1
          pattern: \S
          type: string
          description: The model of this vehicle
          x-gw-nullable: true
        policyLabel:
          title: Policy label
          type: string
          description: >-
            Describes where on the policy this vehicle came from. Only
            applicable if `policyVehicle` is `true`.
          readOnly: true
        policySystemId:
          title: Policy system ID
          type: string
          description: The unique identifier of this element within the policy system
          x-gw-extensions:
            filterable: true
        policyVehicle:
          title: Policy vehicle
          type: boolean
          description: >-
            A `true` value indicates that this `Vehicle` is part of the claim's
            policy and cannot be edited directly
          readOnly: true
        state:
          $ref: '#/components/schemas/TypeKeyReference'
        style:
          $ref: '#/components/schemas/TypeKeyReference'
        vin:
          title: VIN
          maxLength: 40
          minLength: 1
          pattern: \S
          type: string
          description: The Vehicle Identification Number of this vehicle
          x-gw-nullable: true
        year:
          title: Year
          type: integer
          description: The model year of this vehicle
          x-gw-nullable: true
      description: A vehicle
    VehicleIncident:
      title: Vehicle incident
      type: object
      properties:
        airbagsDeployed:
          title: Airbags deployed
          type: boolean
          description: A `true` value indicates that the vehicle's airbags were deployed
        automationPath:
          $ref: '#/components/schemas/TypeKeyReference'
        childSafetySeatStatus:
          $ref: '#/components/schemas/TypeKeyReference'
        collision:
          title: Collision
          type: boolean
          description: >-
            A `true` value indicates that the vehicle was involved in a
            collision
        collisionPoint:
          $ref: '#/components/schemas/TypeKeyReference'
        damageDescription:
          title: Description
          maxLength: 1333
          minLength: 1
          pattern: \S
          type: string
          description: A general description of the damage
          x-gw-extensions:
            defaultViews:
              - detail
        driver:
          $ref: '#/components/schemas/UpdatablePolicyObjectReference'
        equipmentFailure:
          title: Equipment failure
          type: boolean
          description: >-
            A `true` value indicates that equipment failure was involved in this
            loss
        id:
          title: ID
          type: string
          description: The unique identifier of this element
        incidentOwner:
          $ref: '#/components/schemas/UpdatablePolicyObjectReference'
        lossParty:
          $ref: '#/components/schemas/TypeKeyReference'
        passengers:
          title: Excluded parties
          type: array
          description: >-
            A list of references to `ClaimContact` elements that represent
            passengers in the vehicle
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/UpdatablePolicyObjectReference'
        propertyDamageDescription:
          title: Property description
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: A description of the property that was damaged
        propertyValue:
          $ref: '#/components/schemas/MonetaryAmount'
        safeToDrive:
          title: Operable
          type: boolean
          description: A `true` value indicates that the vehicle is still operable
        severity:
          $ref: '#/components/schemas/TypeKeyReference'
        theft:
          title: Theft
          type: boolean
          description: A `true` value indicates that the vehicle was stolen
        totalLoss:
          title: Total loss
          type: boolean
          description: A `true` value indicates that the vehicle is a total loss
          x-gw-nullable: true
        valuationRequired:
          $ref: '#/components/schemas/TypeKeyReference'
        valuationSource:
          $ref: '#/components/schemas/TypeKeyReference'
        vehicle:
          $ref: '#/components/schemas/Vehicle'
        vehicleDirection:
          $ref: '#/components/schemas/TypeKeyReference'
        vehicleParked:
          title: Vehicle parked
          type: boolean
          description: >-
            A `true` value indicates that the vehicle was parked at the time of
            the incident
          x-gw-nullable: true
        vehicleType:
          $ref: '#/components/schemas/TypeKeyReference'
        vehicleUseReason:
          $ref: '#/components/schemas/TypeKeyReference'
      description: A vehicle that suffered loss or damage
    VehicleRiskUnit:
      title: Vehicle risk unit
      type: object
      properties:
        RUNumber:
          title: Risk unit number
          type: integer
          description: >-
            The number automatically assigned to this covered risk unit on the
            policy
          readOnly: true
          x-gw-extensions:
            filterable: true
            sortable: true
        coverages:
          title: Coverages
          type: array
          description: The list of coverages that apply to this risk unit
          readOnly: true
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Coverage'
          x-gw-extensions:
            defaultViews:
              - detail
        description:
          title: Description
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: A description of the risk unit
          x-gw-nullable: true
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        policySystemId:
          title: Policy system ID
          maxLength: 256
          minLength: 1
          pattern: \S
          type: string
          description: The unique identifier of this element within the policy system
          readOnly: true
          x-gw-extensions:
            filterable: true
        vehicle:
          $ref: '#/components/schemas/Vehicle'
        vehicleId:
          title: Vehicle ID
          type: string
          description: The unique identifier of the `Vehicle` that is covered
          readOnly: true
        vehicleLocation:
          $ref: '#/components/schemas/PolicyLocation'
      description: A covered vehicle risk
    Witness:
      title: Witness
      required:
        - contact
      type: object
      properties:
        contact:
          $ref: '#/components/schemas/UpdatablePolicyObjectReference'
        perspective:
          title: Perspective
          maxLength: 100
          minLength: 1
          pattern: \S
          type: string
          description: Details of the perspective that the witness observed the loss from
        position:
          $ref: '#/components/schemas/TypeKeyReference'
        statementObtained:
          $ref: '#/components/schemas/TypeKeyReference'
      description: Details of the contact who witnessed an incident
    framework_GenericRelation:
      title: Generic relation
      required:
        - id
        - type
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The formatted name of the referenced element
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        jsonPath:
          title: JSON path
          type: string
          description: The path to the referenced element within the overall JSON document
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - none
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: A reference to a related element
      xml:
        name: GenericRelation
      x-gw-extensions:
        resourceReference: true
    framework_LinkObject:
      title: Linked object
      type: object
      properties:
        href:
          title: HREF
          type: string
          description: The URL of the link
        methods:
          title: Methods
          type: array
          description: An array of HTTP method names that can be used with the link URL
          xml:
            wrapped: true
          items:
            type: string
      description: A standard HTTP link
      xml:
        name: LinkObject
    framework_Links:
      title: Links
      type: object
      additionalProperties:
        $ref: '#/components/schemas/framework_LinkObject'
      description: A set of named links
      xml:
        name: Links
    framework_MetaObject:
      title: Meta object
      type: object
      properties:
        checksum:
          title: Checksum
          type: string
          description: The checksum of the element
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        links:
          $ref: '#/components/schemas/framework_Links'
        refid:
          title: Reference ID
          type: string
          description: >-
            A unique identifier given to the newly created element in the
            context of the current request
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        type:
          title: Type
          type: string
          description: The type of element
      description: An element
      xml:
        name: MetaObject
    framework_MonetaryAmount:
      title: Monetary amount
      required:
        - amount
        - currency
      type: object
      properties:
        amount:
          title: Amount
          type: string
          description: The decimal amount
          format: gw-bigdecimal
        currency:
          title: Currency
          type: string
          description: The currency for the amount
          x-gw-type: typekey.Currency
      description: A monetary amount that combines a decimal amount with a currency
      xml:
        name: MonetaryAmount
    framework_PhoneNumber:
      title: Phone number
      required:
        - countryCode
        - number
      type: object
      properties:
        countryCode:
          $ref: '#/components/schemas/framework_TypeKeyReference'
        displayName:
          title: Display name
          type: string
          description: The phone number formatted in a standardized way
          readOnly: true
        extension:
          title: Extension
          type: string
          description: The extension for the phone number
          x-gw-nullable: true
        number:
          title: Number
          type: string
          description: >-
            The actual phone number, including area code, but excluding the
            country code and extension
      description: >-
        A phone number, with different components of the number broken out as
        separate fields
      xml:
        name: PhoneNumber
    framework_RelatedCollection:
      title: Related collection
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: The number of elements included in the `data` array
        data:
          title: Data
          type: array
          description: The list of references to the related elements
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/framework_SimpleReference'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements in the related set of elements. Only
            present if the `includeTotal` query parameter is used to request
            that the total be calculated for an included collection.
      description: >-
        A set of element references that are related to the element in some way.
        Used to link elements with their relations when a request is made using
        the `include` query parameter.
      xml:
        name: RelatedCollection
    framework_RelatedCollections:
      title: Related collections
      type: object
      additionalProperties:
        $ref: '#/components/schemas/framework_RelatedCollection'
      description: >-
        A set of `RelatedCollection` elements that contain references to
        elements included using the `include` query parameter on a request
      xml:
        name: RelatedCollections
    framework_SimpleReference:
      title: Simple reference
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The formatted name of the element
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        jsonPath:
          title: JSON path
          type: string
          description: >-
            The path to the referenced element within the overall JSON document
            (Since 1.2.0)
          readOnly: true
          x-gw-sinceVersion: 1.2.0
          x-gw-extensions:
            defaultViews:
              - none
        refid:
          title: Reference ID
          type: string
          description: >-
            A unique identifier given to the newly created element in the
            context of the current request
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: A reference to an element
      xml:
        name: SimpleReference
      x-gw-extensions:
        resourceReference: true
    framework_SpatialPoint:
      title: Spatial point
      required:
        - latitude
        - longitude
      type: object
      properties:
        latitude:
          title: Latitude
          type: string
          description: The latitude of the spatial point
          format: gw-bigdecimal
        longitude:
          title: Longitude
          type: string
          description: The longitude of the spatial point
          format: gw-bigdecimal
      description: An object that combines a latitude with a longitude (Since 1.2.0)
      xml:
        name: SpatialPoint
      x-gw-sinceVersion: 1.2.0
    framework_TypeKeyReference:
      title: TypeKey reference
      required:
        - code
      type: object
      properties:
        code:
          title: Code
          type: string
          description: The `code` of the `TypeKey`
        name:
          title: Name
          type: string
          description: The `name` of the `TypeKey`
      description: >-
        A reference to a `TypeKey` element that defines an enumerated value from
        a `TypeList`
      xml:
        name: TypeKeyReference
    ErrorDetails:
      type: object
      properties:
        lineNumber:
          type: integer
        message:
          type: string
        parameterLocation:
          type: string
        parameterName:
          type: string
        stackTrace:
          type: string
    ErrorInfo:
      type: object
      properties:
        details:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ErrorDetails'
        developerMessage:
          type: string
        statusCode:
          type: integer
        userMessage:
          type: string
  responses:
    AuthenticationError:
      description: 401 error that is returned if the request's user cannot be authenticated
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorInfo'
    BadInput:
      description: >-
        400 error that is returned if the input to this endpoint is not valid;
        this can happen because of missing required parameters, malformed json,
        json that does not validate against the declared schema, etc.
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorInfo'
    InternalServerError:
      description: >-
        500 error that is returned if a server-side error prevented this request
        from being processed
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorInfo'
    NotAcceptable:
      description: >-
        406 error that is returned if the Accept header provided by the client
        does not match any types produced by this endpoint
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorInfo'
    NotAuthorized:
      description: >-
        403 error that is returned if the authenticated user is not authorized
        to access a given resource
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorInfo'
    NotFound:
      description: 404 error that is returned if the specified resource does not exist
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorInfo'
    OperationNotSupported:
      description: >-
        405 error that is returned if the specified HTTP verb is not allowed on
        a given resource
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorInfo'
    ServiceUnavailable:
      description: >-
        503 error that is returned if the server's runlevel is not adequate to
        service this request
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorInfo'
    UnsupportedContentType:
      description: >-
        415 error that is returned if the Content-Type of the request is not
        consumable by this endpoint
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorInfo'
  parameters:
    assessmentContentItemId:
      name: assessmentContentItemId
      in: path
      description: The REST identifier for the assessment content item (Since 1.4.0)
      required: true
      schema:
        type: string
        x-gw-sinceVersion: 1.4.0
      x-gw-sinceVersion: 1.4.0
    assessmentSummaryId:
      name: assessmentSummaryId
      in: path
      description: The REST identifier for the assessment summary (Since 1.4.0)
      required: true
      schema:
        type: string
        x-gw-sinceVersion: 1.4.0
      x-gw-sinceVersion: 1.4.0
    checkId:
      name: checkId
      in: path
      description: The identifier for the check (Since 1.3.0)
      required: true
      schema:
        type: string
        x-gw-sinceVersion: 1.3.0
      x-gw-sinceVersion: 1.3.0
    checkSetId:
      name: checkSetId
      in: path
      description: The identifier for the check set (Since 1.3.0)
      required: true
      schema:
        type: string
        x-gw-sinceVersion: 1.3.0
      x-gw-sinceVersion: 1.3.0
    claimId:
      name: claimId
      in: path
      description: The identifier for the claim
      required: true
      schema:
        type: string
    claimInfoId:
      name: claimInfoId
      in: path
      description: The identifier for the claim info (Since 1.3.1)
      required: true
      schema:
        type: string
        x-gw-sinceVersion: 1.3.1
      x-gw-sinceVersion: 1.3.1
    contactId:
      name: contactId
      in: path
      description: The identifier for the contact
      required: true
      schema:
        type: string
    contactRoleId:
      name: contactRoleId
      in: path
      description: The identifier for the contact role
      required: true
      schema:
        type: string
    coverageId:
      name: coverageId
      in: path
      description: The identifier for the coverage
      required: true
      schema:
        type: string
    documentId:
      name: documentId
      in: path
      description: The identifier for the document
      required: true
      schema:
        type: string
    enablePolymorphism:
      name: enablePolymorphism
      in: query
      description: >-
        Whether or not to use the `discriminator`/`oneOf` pattern to output
        schemas in cases where the valid set of fields can vary based on some
        attribute of the data such as the country or subtype.  Defaults to
        `true`. See the documentation for more information.
      schema:
        type: boolean
        default: true
    endorsementId:
      name: endorsementId
      in: path
      description: The identifier for policy endorsement
      required: true
      schema:
        type: string
    exposureId:
      name: exposureId
      in: path
      description: The identifier for the exposure
      required: true
      schema:
        type: string
    fields:
      name: fields
      in: query
      description: >-
        Allows the caller to specify the set of fields that should be included
        on the response. This can be used to limit the set of fields returned as
        well as to include optional fields that otherwise wouldn't normally be
        returned. The parameter is either of the form `fields=<field list>` or
        `fields=<include>:<field list>`, where `<field list>` consists of a
        comma-separated list of field or field set names. See the documentation
        for more information.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
        x-gw-extensions:
          allowForCompositeApi: true
      x-gw-extensions:
        allowForCompositeApi: true
    filter:
      name: filter
      in: query
      description: >-
        Filters the list of results based on the specified field, operator, and
        value. The parameter is either of the form
        `filter=<field>:<operator>:<value>` or
        `filter=<include>:<field>:<operator>:<value>`. See the documentation for
        more information.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
        x-gw-extensions:
          allowForCompositeApi: true
      x-gw-extensions:
        allowForCompositeApi: true
    filterByUser:
      name: filterByUser
      in: query
      description: >-
        Whether or not to filter endpoints and schema properties by the
        authorization of the caller. Defaults to `false`.
      schema:
        type: boolean
        default: false
    gwLanguageHeader:
      name: GW-Language
      in: header
      description: >-
        If specified, this header will set the language used when processing the
        request
      schema:
        type: string
    gwLocaleHeader:
      name: GW-Locale
      in: header
      description: >-
        If specified, this header will set the locale used when processing the
        request
      schema:
        type: string
    gwSchemaProperty:
      name: GW-IncludeSchemaProperty
      in: header
      description: >-
        If specified and the operation returns json with a defined schema, this
        will add a property, '$GW-Schema',  with the fully qualified name of the
        object's schema.
      schema:
        type: boolean
    gwTraceability:
      name: X-Correlation-ID
      in: header
      description: >-
        This header permits a customer to trace a request from its initial
        reception through all of the subsequent applications that were invoked
        to handle that request. The actual traceability id present in the MDC
        and logs (and returned in the response), is dependent on the
        implementation of TraceabilityIDPlugin. The default implementation uses
        this value, if specified, or a generated UID.  However, another
        implementation may always generate a unique id and just log  the
        relationship between these incoming values and the generated UID. Note:
        that this header can be repeated, but the resulting string will just be
        the comma separated values.
      schema:
        type: string
    gwTransactionID:
      name: GW-DBTransaction-ID
      in: header
      description: >-
        If specified and this operation results in a database commit, this
        header's value must not have been submitted before.  This value must be
        globally unique across all clients, apis and webservices. It is used for
        those transaction that are not idempotent. Unless this is explicitly
        referenced for an operation it is not required.
      required: true
      schema:
        type: string
    gwUnknownPropertyHeader:
      name: GW-UnknownPropertyHandling
      in: header
      description: >-
        If specified, this header will drive the behavior for unknown property
        handling
      schema:
        type: string
        enum:
          - log
          - reject
          - ignore
    gwUnknownQueryParameterHeader:
      name: GW-UnknownQueryParamHandling
      in: header
      description: >-
        If specified, this header will drive the behavior for unknown query
        parameter handling.  Default is to reject them.
      schema:
        type: string
        enum:
          - log
          - reject
          - ignore
    gwValidateResponseHandling:
      name: GW-ValidateResponseHandling
      in: header
      description: >-
        If specified, this header permits the client to override the behavior
        around validating response
      schema:
        type: boolean
    incidentId:
      name: incidentId
      in: path
      description: The identifier for the incident
      required: true
      schema:
        type: string
    include:
      name: include
      in: query
      description: >-
        Used to request that additional resources be returned with the API
        response in the `included` section of the responses. The `include`
        parameter can appear multiple times, and is a comma-separated list of
        additional resources to include. See the documentation for more
        information.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    includeTotal:
      name: includeTotal
      in: query
      description: >-
        Used to request that results should include a count of the total number
        of results available, which may be more than the total number of results
        currently being returned. This parameter is of the form
        `includeTotal=<true|false>` or `includeTotal=<include>:<true|false>`. If
        not specified, the default is considered to be `false`. See the
        documentation for more information about response pagination.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
        x-gw-extensions:
          allowForCompositeApi: true
      x-gw-extensions:
        allowForCompositeApi: true
    interactionId:
      name: interactionId
      in: path
      description: The intake interaction identifier (Since 1.3.0)
      required: true
      schema:
        type: string
        x-gw-sinceVersion: 1.3.0
      x-gw-sinceVersion: 1.3.0
    invoiceId:
      name: invoiceId
      in: path
      description: The identifier for the invoice
      required: true
      schema:
        type: string
    locationBasedRiskUnitId:
      name: locationBasedRiskUnitId
      in: path
      description: The identifier for the location based risk unit
      required: true
      schema:
        type: string
    locationId:
      name: locationId
      in: path
      description: The identifier for the location
      required: true
      schema:
        type: string
    messageId:
      name: messageId
      in: path
      description: The service request message identifier
      required: true
      schema:
        type: string
    omitInclusions:
      name: omitInclusions
      in: query
      description: >-
        Whether or not to omit the `included` properties on request and response
        schemas.  Defaults to `false`. See the documentation for more
        information. (Since 1.4.0)
      schema:
        type: boolean
        default: false
        x-gw-sinceVersion: 1.4.0
      x-gw-sinceVersion: 1.4.0
    pageOffset:
      name: pageOffset
      in: query
      description: >-
        The offset of the first result to fetch when fetching a paginated set of
        results. The parameter is of the form `pageOffset=<number>` where the
        first result has an offset of 0. For example, `pageOffset=25` will skip
        the first 25 results in sorted order. If not specified, the default
        value is 0. See the documentation for more information about response
        pagination.
      schema:
        type: string
        x-gw-extensions:
          allowForCompositeApi: true
      x-gw-extensions:
        allowForCompositeApi: true
    pageSize:
      name: pageSize
      in: query
      description: >-
        The maximum number of results to return in the response. The parameter
        is of the form `pageSize=<size>` or `pageSize=<include>:<size>`. The
        maximum allowed `pageSize` and the default `pageSize` both depend on the
        specific API endpoint the request is made to. See the documentation for
        more information about response pagination.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
        x-gw-extensions:
          allowForCompositeApi: true
      x-gw-extensions:
        allowForCompositeApi: true
    policyId:
      name: policyId
      in: path
      description: The identifier for the policy (Since 1.2.0)
      required: true
      schema:
        type: string
        x-gw-sinceVersion: 1.2.0
      x-gw-sinceVersion: 1.2.0
    prettyPrintSchema:
      name: prettyPrint
      in: query
      description: >-
        Whether or not to pretty-print the returned schema, making it larger but
        more human readable.  Defaults to `false`.
      schema:
        type: boolean
        default: false
    propertyContentsIncidentId:
      name: propertyContentsIncidentId
      in: path
      description: The REST identifier for the property contents incident (Since 1.4.0)
      required: true
      schema:
        type: string
        x-gw-sinceVersion: 1.4.0
      x-gw-sinceVersion: 1.4.0
    recoveryReserveSetId:
      name: recoveryReserveSetId
      in: path
      description: The identifier for the recovery reserve set (Since 1.3.0)
      required: true
      schema:
        type: string
        x-gw-sinceVersion: 1.3.0
      x-gw-sinceVersion: 1.3.0
    recoverySetId:
      name: recoverySetId
      in: path
      description: The identifier for the recovery set (Since 1.3.0)
      required: true
      schema:
        type: string
        x-gw-sinceVersion: 1.3.0
      x-gw-sinceVersion: 1.3.0
    reserveSetId:
      name: reserveSetId
      in: path
      description: The identifier for the reserve set (Since 1.3.0)
      required: true
      schema:
        type: string
        x-gw-sinceVersion: 1.3.0
      x-gw-sinceVersion: 1.3.0
    serviceRequestId:
      name: serviceRequestId
      in: path
      description: The service request identifier
      required: true
      schema:
        type: string
    sort:
      name: sort
      in: query
      description: >-
        Controls the sorting of elements within a response. The sort parameter
        is of the form `sort=<fields>` or `sort=<include>:<fields>`, where
        `<fields>` represents a comma-separated list of field names to sort on.
        Field names can be prefixed with `-` to request a descending sort,
        otherwise the sort will be ascending. See the documentation for more
        information.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
        x-gw-extensions:
          allowForCompositeApi: true
      x-gw-extensions:
        allowForCompositeApi: true
    transactionId:
      name: transactionId
      in: path
      description: The identifier for the transaction (Since 1.3.0)
      required: true
      schema:
        type: string
        x-gw-sinceVersion: 1.3.0
      x-gw-sinceVersion: 1.3.0
    vehicleRiskUnitId:
      name: vehicleRiskUnitId
      in: path
      description: The identifier for the vehicle risk unit
      required: true
      schema:
        type: string
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
