openapi: 3.0.1
info:
  title: Account API
  description: APIs for accounts and related objects
  version: 1.5.0
servers:
  - url: >-
      https://pc-appianpoc-salesdemo.guidewire.galileo-andromeda.guidewire.net:443/rest/account/v1
security:
  - basicAuth: []
paths:
  /accounts:
    get:
      summary: Retrieve a list of Accounts
      description: |
        Retrieve a list of Accounts
      operationId: getAccounts
      parameters:
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountList'
      x-gw-extensions:
        childResourceType: Account
        operationType: get-collection
        resourceType: Accounts
    post:
      summary: Create a new account
      description: Create a new account
      operationId: createAccount
      parameters:
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
        required: true
      responses:
        '201':
          description: Successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
      x-gw-extensions:
        childResourceType: Account
        operationType: post-collection
        resourceType: Accounts
      x-codegen-request-body-name: body
  /accounts/{accountId}:
    get:
      summary: Retrieve an account
      description: |
        Retrieve an account
      operationId: getAccount
      parameters:
        - name: accountId
          in: path
          description: The identifier for the account
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
      x-gw-extensions:
        operationType: get-element
        resourceType: Account
    patch:
      summary: Update an account
      description: Update an account
      operationId: patchAccount
      parameters:
        - name: accountId
          in: path
          description: The identifier for the account
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
        required: true
      responses:
        '200':
          description: Successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
      x-gw-extensions:
        operationType: patch-element
        resourceType: Account
      x-codegen-request-body-name: body
  /accounts/{accountId}/activities:
    get:
      summary: Retrieve a list of activities associated with this account
      description: Retrieve a list of activities associated with this account
      operationId: getAccountActivities
      parameters:
        - name: accountId
          in: path
          description: The identifier for the account
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Returns a list of activities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityList'
      x-gw-extensions:
        childResourceType: Activity
        operationType: get-collection
        resourceType: AccountActivities
    post:
      summary: Create a new activity associated with this account
      description: Create a new activity associated with this account
      operationId: createAccountActivity
      parameters:
        - name: accountId
          in: path
          description: The identifier for the account
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityRequest'
        required: true
      responses:
        '201':
          description: Return the details for the newly-created activity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityResponse'
      x-gw-extensions:
        childResourceType: Activity
        operationType: post-collection
        resourceType: AccountActivities
      x-codegen-request-body-name: body
  /accounts/{accountId}/activity-assignees:
    get:
      summary: >-
        Retrieve the list of suggested people, groups, queues, userRoles, etc.
        that new activities on this account can be assigned to
      description: >-
        Retrieve the list of suggested people, groups, queues, userRoles, etc.
        that new activities on this account can be assigned to
      operationId: getAccountActivityAssignees
      parameters:
        - name: accountId
          in: path
          description: The identifier for the account
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Returns the list of suggested assignees
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssigneeList'
      x-gw-extensions:
        childResourceType: Assignee
        operationType: get-collection
        resourceType: AccountActivityAssignees
  /accounts/{accountId}/activity-patterns:
    get:
      summary: >-
        Retrieve a list of activity patterns that can be used to create
        activities on this account
      description: >-
        Retrieve a list of activity patterns that can be used to create
        activities on this account
      operationId: getAccountActivityPatterns
      parameters:
        - name: accountId
          in: path
          description: The identifier for the account
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Returns a list of activity patterns
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityPatternList'
      x-gw-extensions:
        childResourceType: ActivityPattern
        operationType: get-collection
        resourceType: AccountActivityPatterns
  /accounts/{accountId}/contacts:
    get:
      summary: Retrieve a list of AccountContacts
      description: |
        Retrieves a list of AccountContacts
      operationId: getAccountContacts
      parameters:
        - name: accountId
          in: path
          description: The identifier for the account
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountContactList'
      x-gw-extensions:
        childResourceType: AccountContact
        operationType: get-collection
        resourceType: AccountContacts
    post:
      summary: Create a new contact on the given account
      description: Create a new contact on the given account
      operationId: createAccountContact
      parameters:
        - name: accountId
          in: path
          description: The identifier for the account
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountContactRequest'
        required: true
      responses:
        '201':
          description: Successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountContactResponse'
      x-gw-extensions:
        childResourceType: AccountContact
        operationType: post-collection
        resourceType: AccountContacts
      x-codegen-request-body-name: body
  /accounts/{accountId}/contacts/{contactId}:
    get:
      summary: The details of a contact on an account
      description: The details of a contact on an account
      operationId: getAccountContact
      parameters:
        - name: accountId
          in: path
          description: The identifier for the account
          required: true
          schema:
            type: string
        - name: contactId
          in: path
          description: The identifier for the contact
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountContactResponse'
      x-gw-extensions:
        operationType: get-element
        resourceType: AccountContact
    delete:
      summary: Delete the specified account contact
      description: Delete the specified account contact (Since 1.3.0)
      operationId: deleteAccountContact
      parameters:
        - name: accountId
          in: path
          description: The identifier for the account
          required: true
          schema:
            type: string
        - name: contactId
          in: path
          description: The identifier for the contact
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful deletion
          content: {}
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        operationType: delete-element
        resourceType: AccountContact
    patch:
      summary: Update the details of the specific contact on the given account
      description: Update the details of the specific contact on the given account
      operationId: patchAccountContact
      parameters:
        - name: accountId
          in: path
          description: The identifier for the account
          required: true
          schema:
            type: string
        - name: contactId
          in: path
          description: The identifier for the contact
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountContactRequest'
        required: true
      responses:
        '200':
          description: Successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountContactResponse'
      x-gw-extensions:
        operationType: patch-element
        resourceType: AccountContact
      x-codegen-request-body-name: body
  /accounts/{accountId}/documents:
    get:
      summary: Retrieve a list of documents on an account
      description: Retrieve a list of documents on an account (Since 1.1.0)
      operationId: getAccountDocuments
      parameters:
        - name: accountId
          in: path
          description: The identifier for the account
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentList'
      x-gw-sinceVersion: 1.1.0
      x-gw-extensions:
        childResourceType: Document
        operationType: get-collection
        resourceType: AccountDocuments
    post:
      summary: Create a new document on an account
      description: Create a new document on an account (Since 1.1.0)
      operationId: createAccountDocument
      parameters:
        - name: accountId
          in: path
          description: The identifier for the account
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - metadata
              properties:
                metadata:
                  type: string
                  x-gw-schema-ref: '#/definitions/DocumentRequest'
                content:
                  type: string
                  format: binary
        required: true
      responses:
        '201':
          description: Successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponse'
      x-gw-sinceVersion: 1.1.0
      x-gw-extensions:
        childResourceType: Document
        operationType: post-collection
        resourceType: AccountDocuments
  /accounts/{accountId}/freeze:
    post:
      summary: Freeze this account
      description: Freeze this account and all entities associated with this account
      operationId: freezeAccount
      parameters:
        - name: accountId
          in: path
          description: The identifier for the account
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Successfully froze the account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
        '400':
          description: The account is already frozen
          content: {}
        '409':
          description: Concurrent data modification occurred during freeze
          content: {}
      x-gw-extensions:
        operationType: custom-action
        resourceType: Account
  /accounts/{accountId}/jobs:
    get:
      summary: Retrieve a list of jobs associated with this account.
      description: >
        Retrieve a list of jobs associated with this account.

        - By default this will include only open jobs, i.e.,
        filter=jobFilter:eq:open

        - Customers can set filter to get

        -- close jobs, filter=jobFilter:eq:close

        -- all jobs, filter=jobFilter:eq:all
      operationId: getAccountJobs
      parameters:
        - name: accountId
          in: path
          description: The identifier for the account
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Returns a list of open jobs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountJobList'
      x-gw-extensions:
        childResourceType: Job
        operationType: get-collection
        resourceType: AccountJobs
  /accounts/{accountId}/locations:
    get:
      summary: Retrieve a list of AccountLocations
      description: |
        Retrieves a list of AccountLocations
      operationId: getAccountLocations
      parameters:
        - name: accountId
          in: path
          description: The identifier for the account
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountLocationList'
      x-gw-extensions:
        childResourceType: AccountLocation
        operationType: get-collection
        resourceType: AccountLocations
    post:
      summary: Add a new AccountLocation to an account
      description: Add a new AccountLocation to an account
      operationId: createAccountLocation
      parameters:
        - name: accountId
          in: path
          description: The identifier for the account
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountLocationRequest'
        required: true
      responses:
        '201':
          description: Successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountLocationResponse'
      x-gw-extensions:
        childResourceType: AccountLocation
        operationType: post-collection
        resourceType: AccountLocations
      x-codegen-request-body-name: body
  /accounts/{accountId}/locations/{locationId}:
    get:
      summary: The details of a location on an account
      description: The details of a location on an account
      operationId: getAccountLocation
      parameters:
        - name: accountId
          in: path
          description: The identifier for the account
          required: true
          schema:
            type: string
        - name: locationId
          in: path
          description: The identifier for the location
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountLocationResponse'
      x-gw-extensions:
        operationType: get-element
        resourceType: AccountLocation
    delete:
      summary: Delete a location on an account
      description: Delete a location on an account (Since 1.5.0)
      operationId: deleteAccountLocation
      parameters:
        - name: accountId
          in: path
          description: The identifier for the account
          required: true
          schema:
            type: string
        - name: locationId
          in: path
          description: The identifier for the location
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful deletion
          content: {}
      x-gw-sinceVersion: 1.5.0
      x-gw-extensions:
        operationType: delete-element
        resourceType: AccountLocation
    patch:
      summary: Update a location
      description: Update a location
      operationId: patchAccountLocation
      parameters:
        - name: accountId
          in: path
          description: The identifier for the account
          required: true
          schema:
            type: string
        - name: locationId
          in: path
          description: The identifier for the location
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountLocationRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountLocationResponse'
      x-gw-extensions:
        operationType: patch-element
        resourceType: AccountLocation
      x-codegen-request-body-name: body
  /accounts/{accountId}/merge:
    post:
      summary: Merge an account with this account
      description: >-
        Checks if the accounts can be merged, then moves all policies, notes,
        contacts, and assignments from the specified account to this account,
        deletes the specified account, and this account becomes the merged
        account. (Since 1.4.0)
      operationId: mergeAccount
      parameters:
        - name: accountId
          in: path
          description: The identifier for the account
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MergeAccountRequest'
        required: true
      responses:
        '200':
          description: Successfully merged the accounts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        operationType: custom-action
        resourceType: Account
      x-codegen-request-body-name: body
  /accounts/{accountId}/move-policies:
    post:
      summary: Move policies to this account
      description: Move policies to this account (Since 1.2.0)
      operationId: movePoliciesToAccount
      parameters:
        - name: accountId
          in: path
          description: The identifier for the account
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovePoliciesRequest'
        required: true
      responses:
        '200':
          description: Successfully moved policies to this account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        operationType: custom-action
        resourceType: Account
      x-codegen-request-body-name: body
  /accounts/{accountId}/notes:
    get:
      summary: Notes associated with a given account
      description: Notes associated with a given account (Since 1.1.0)
      operationId: getAccountNotes
      parameters:
        - name: accountId
          in: path
          description: The identifier for the account
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: The list of notes associated with this account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteList'
      x-gw-sinceVersion: 1.1.0
      x-gw-extensions:
        childResourceType: Note
        operationType: get-collection
        resourceType: AccountNotes
    post:
      summary: Create a new note on this account
      description: Create a new note on this account (Since 1.1.0)
      operationId: createAccountNote
      parameters:
        - name: accountId
          in: path
          description: The identifier for the account
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteRequest'
        required: true
      responses:
        '201':
          description: The details of a newly-created note
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteResponse'
      x-gw-sinceVersion: 1.1.0
      x-gw-extensions:
        childResourceType: Note
        operationType: post-collection
        resourceType: AccountNotes
      x-codegen-request-body-name: body
  /accounts/{accountId}/policies:
    get:
      summary: Retrieve a list of bound policies on the account
      description: |
        Retrieve a list of bound policies on the account
      operationId: getAccountPolicies
      parameters:
        - name: accountId
          in: path
          description: The identifier for the account
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountPolicyList'
      x-gw-extensions:
        childResourceType: Policy
        operationType: get-collection
        resourceType: AccountPolicies
  /accounts/{accountId}/purge:
    post:
      summary: Purge this account
      description: Purge this account and all entities associated with this account
      operationId: purgeAccount
      parameters:
        - name: accountId
          in: path
          description: The identifier for the account
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully purged the account
          content: {}
        '400':
          description: The account is not frozen and therefore cannot be purged
          content: {}
      x-gw-extensions:
        operationType: custom-action
        resourceType: Account
  /accounts/{accountId}/reopen:
    post:
      summary: Reopen a withdrawn account
      description: Reopen a withdrawn account (Since 1.4.0)
      operationId: reopenAccount
      parameters:
        - name: accountId
          in: path
          description: The identifier for the account
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
      x-gw-sinceVersion: 1.4.0
      x-gw-extensions:
        operationType: custom-action
        resourceType: Account
  /accounts/{accountId}/unfreeze:
    post:
      summary: Unfreeze this account
      description: Unfreeze this account and all entities associated with this account
      operationId: unfreezeAccount
      parameters:
        - name: accountId
          in: path
          description: The identifier for the account
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Successfully unfroze the account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
        '400':
          description: The account is not frozen and therefore cannot be unfrozen
          content: {}
      x-gw-extensions:
        operationType: custom-action
        resourceType: Account
  /accounts/{accountId}/withdraw:
    post:
      summary: Withdraw a pending account
      description: Withdraw a pending account (Since 1.3.0)
      operationId: withdrawAccount
      parameters:
        - name: accountId
          in: path
          description: The identifier for the account
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Successfully withdrew the account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        operationType: custom-action
        resourceType: Account
  /batch:
    post:
      summary: Issue multiple requests at once as a non-transactional batch
      description: >-
        Post a list of subrequests to make against this endpoint. Subrequests
        will be executed serially, in the order they are specified in the
        "requests" property of the input. Responses to each subrequest will then
        be batched up and returned all together. Subrequests inherit the headers
        from the main request, with the exception of the GW-Checksum header, but
        headers can be specified on the subrequest and will override any headers
        from the main request.
      operationId: batchRequest
      parameters:
        - name: includeResponseHeaders
          in: query
          description: >-
            Controls what response headers, if any, are included for
            subresponses. If unspecified, or set to the value "*all", all
            headers for subresponses will be returned. If set to the value
            "*none", no headers for subresponses will be returned. Otherwise,
            this parameter can consist of a comma-separated list of the names of
            headers that should be included on subresponses.
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: The body of the batch request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRequest'
        required: true
      responses:
        '200':
          description: >-
            The batch request itself was well-formed; individual subrequests may
            have succeeded or failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponse'
      x-codegen-request-body-name: body
  /openapi.json:
    get:
      summary: Return the Open API 3.0 representation of the schema
      description: Return the Open API 3.0 representation of the schema
      operationId: getOpenApiSchema
      parameters:
        - name: enablePolymorphism
          in: query
          description: >-
            Whether or not to use the `discriminator`/`oneOf` pattern to output
            schemas in cases where the valid set of fields can vary based on
            some attribute of the data such as the country or subtype.  Defaults
            to `true`. See the documentation for more information.
          schema:
            type: boolean
            default: true
        - name: filterByUser
          in: query
          description: >-
            Whether or not to filter endpoints and schema properties by the
            authorization of the caller. Defaults to `false`.
          schema:
            type: boolean
            default: false
        - name: omitInclusions
          in: query
          description: >-
            Whether or not to omit the `included` properties on request and
            response schemas.  Defaults to `false`. See the documentation for
            more information. (Since 1.4.0)
          schema:
            type: boolean
            default: false
            x-gw-sinceVersion: 1.4.0
          x-gw-sinceVersion: 1.4.0
        - name: prettyPrint
          in: query
          description: >-
            Whether or not to pretty-print the returned schema, making it larger
            but more human readable.  Defaults to `false`.
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
      x-gw-extensions:
        operationType: get-element
        resourceType: AccountApiOpenApiSchema
  /producer-codes:
    get:
      summary: Retrieve a list of ProducerCodes
      description: Retrieve a list of ProducerCodes (Since 1.2.0)
      operationId: getAccountProducerCodes
      parameters:
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProducerCodeList'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        childResourceType: ProducerCode
        operationType: get-collection
        resourceType: AccountProducerCodes
  /search/accounts:
    post:
      summary: Search for accounts that match the specified criteria
      description: Search for accounts that match the specified criteria (Since 1.2.0)
      operationId: searchAccounts
      parameters:
        - name: fields
          in: query
          description: >-
            Allows the caller to specify the set of fields that should be
            included on the response. This can be used to limit the set of
            fields returned as well as to include optional fields that otherwise
            wouldn't normally be returned. The parameter is either of the form
            `fields=<field list>` or `fields=<include>:<field list>`, where
            `<field list>` consists of a comma-separated list of field or field
            set names. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: filter
          in: query
          description: >-
            Filters the list of results based on the specified field, operator,
            and value. The parameter is either of the form
            `filter=<field>:<operator>:<value>` or
            `filter=<include>:<field>:<operator>:<value>`. See the documentation
            for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: include
          in: query
          description: >-
            Used to request that additional resources be returned with the API
            response in the `included` section of the responses. The `include`
            parameter can appear multiple times, and is a comma-separated list
            of additional resources to include. See the documentation for more
            information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: includeTotal
          in: query
          description: >-
            Used to request that results should include a count of the total
            number of results available, which may be more than the total number
            of results currently being returned. This parameter is of the form
            `includeTotal=<true|false>` or
            `includeTotal=<include>:<true|false>`. If not specified, the default
            is considered to be `false`. See the documentation for more
            information about response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageSize
          in: query
          description: >-
            The maximum number of results to return in the response. The
            parameter is of the form `pageSize=<size>` or
            `pageSize=<include>:<size>`. The maximum allowed `pageSize` and the
            default `pageSize` both depend on the specific API endpoint the
            request is made to. See the documentation for more information about
            response pagination.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: pageOffset
          in: query
          description: >-
            The offset of the first result to fetch when fetching a paginated
            set of results. The parameter is of the form `pageOffset=<number>`
            where the first result has an offset of 0. For example,
            `pageOffset=25` will skip the first 25 results in sorted order. If
            not specified, the default value is 0. See the documentation for
            more information about response pagination.
          schema:
            type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
        - name: sort
          in: query
          description: >-
            Controls the sorting of elements within a response. The sort
            parameter is of the form `sort=<fields>` or
            `sort=<include>:<fields>`, where `<fields>` represents a
            comma-separated list of field names to sort on. Field names can be
            prefixed with `-` to request a descending sort, otherwise the sort
            will be ascending. See the documentation for more information.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            x-gw-extensions:
              allowForCompositeApi: true
          x-gw-extensions:
            allowForCompositeApi: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountSearchRequest'
        required: true
      responses:
        '200':
          description: Return a list of accounts that match the search criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountList'
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        childResourceType: Account
        operationType: search-collection
        resourceType: AccountSearch
      x-codegen-request-body-name: body
  /swagger.json:
    get:
      summary: Returns the Swagger schema for this API
      description: Returns a Swagger 2.0 schema for this API as json
      operationId: generateDocs
      responses:
        '200':
          description: Successful operation
          content: {}
      x-gw-authenticated: false
components:
  schemas:
    AccountContactData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/AccountContact'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    AccountContactList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/AccountContactData'
        included:
          $ref: '#/components/schemas/AccountInclusions'
    AccountContactRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AccountContactData'
        included:
          $ref: '#/components/schemas/AccountInclusions'
    AccountContactResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AccountContactData'
        included:
          $ref: '#/components/schemas/AccountInclusions'
    AccountData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/Account'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    AccountInclusions:
      type: object
      properties:
        Account:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/AccountData'
        AccountContact:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/AccountContactData'
        AccountLocation:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/AccountLocationData'
        Activity:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ActivityData'
        ActivityPattern:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ActivityPatternData'
        AdditionalNamedInsured:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/AdditionalNamedInsuredData'
        AssessmentSummary:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/AssessmentSummaryData'
        Assignee:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/AssigneeData'
        Contingency:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ContingencyData'
        Cost:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/CostData'
        Document:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/DocumentData'
        DocumentContent:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/DocumentContentData'
        Job:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/JobData'
        JobRoles:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/JobRolesData'
        JobVersion:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/JobVersionData'
        LossHistory:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/LossHistoryData'
        Note:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/NoteData'
        OOSConflicts:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/OOSConflictsData'
        PaymentInfo:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/PaymentInfoData'
        PaymentPlan:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/PaymentPlanData'
        Policy:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/PolicyData'
        PolicyContact:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/PolicyContactData'
        PolicyLine:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/PolicyLineData'
        PolicyLocation:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/PolicyLocationData'
        PolicyLocationQuestions:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/QuestionAnswersData'
        PolicyQuestions:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/QuestionAnswersData'
        PriorLoss:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/PriorLossData'
        PriorPolicy:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/PriorPolicyData'
        UWIssue:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/UWIssueData'
        UWIssueHistory:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/UWIssueHistoryData'
        UWReferralReason:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/UWReferralReasonData'
    AccountJobList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/JobData'
        included:
          $ref: '#/components/schemas/AccountInclusions'
    AccountList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/AccountData'
        included:
          $ref: '#/components/schemas/AccountInclusions'
    AccountLocationData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/AccountLocation'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    AccountLocationList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/AccountLocationData'
        included:
          $ref: '#/components/schemas/AccountInclusions'
    AccountLocationRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AccountLocationData'
        included:
          $ref: '#/components/schemas/AccountInclusions'
    AccountLocationResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AccountLocationData'
        included:
          $ref: '#/components/schemas/AccountInclusions'
    AccountPolicyList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/PolicyData'
        included:
          $ref: '#/components/schemas/AccountInclusions'
    AccountRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AccountData'
        included:
          $ref: '#/components/schemas/AccountInclusions'
    AccountResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AccountData'
        included:
          $ref: '#/components/schemas/AccountInclusions'
    AccountSearchRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AccountSearchRequestData'
    AccountSearchRequestData:
      required:
        - attributes
      type: object
      properties:
        attributes:
          $ref: '#/components/schemas/AccountSearchRequestAttributes'
    Activity:
      title: Activity
      type: object
      properties:
        activityPattern:
          title: Activity pattern
          type: string
          description: >-
            The code of the `ActivityPattern` used to create this activity and
            set its initial values
          x-gw-extensions:
            createOnly: true
        activityType:
          $ref: '#/components/schemas/TypeKeyReference'
        approvalIssue:
          title: Approval issue
          type: string
          description: >-
            The reason approval is needed. Only applicable to activities with an
            `activityType` of `approval`.
        approvalRationale:
          title: Approval rationale
          type: string
          description: >-
            Rationale for approving or rejecting this activity. Only applicable
            to activities with an `activityType` of `approval`.
        approved:
          title: Approved
          type: boolean
          description: >-
            This field is `true` if this activity has been approved, `false` if
            this activity has been rejected, and omitted otherwise. Only
            applicable to activities with an `activityType` of `approval`.
          readOnly: true
        assignedByUser:
          $ref: '#/components/schemas/SimpleReference'
        assignedGroup:
          $ref: '#/components/schemas/SimpleReference'
        assignedQueue:
          $ref: '#/components/schemas/SimpleReference'
        assignedUser:
          $ref: '#/components/schemas/SimpleReference'
        assignmentStatus:
          $ref: '#/components/schemas/TypeKeyReference'
        associatedRole:
          $ref: '#/components/schemas/TypeKeyReference'
        closeDate:
          title: Close date
          type: string
          description: >-
            The date and time when this activity was completed, skipped,
            approved, or rejected
          format: date-time
          readOnly: true
          x-gw-extensions:
            filterable: true
        closeUser:
          $ref: '#/components/schemas/SimpleReference'
        createTime:
          title: Create time
          type: string
          description: The date and time when this `Activity` was created (Since 1.1.0)
          format: date-time
          readOnly: true
          x-gw-sinceVersion: 1.1.0
        description:
          title: Description
          type: string
          description: The description of this activity
          x-gw-nullable: true
          x-gw-extensions:
            defaultViews:
              - detail
        dueDate:
          title: Due date
          type: string
          description: >-
            Date and time by which a person should complete the activity. If not
            completed by this time, the activity is considered overdue. Not
            applicable to activities that represent events rather than tasks.
          format: date-time
          x-gw-nullable: true
          x-gw-extensions:
            filterable: true
            sortable: true
        endDate:
          title: End date
          type: string
          description: >-
            Date and time at which the activity is expected to end. Only
            applicable to activities that represent events.
          format: date-time
          x-gw-nullable: true
        escalated:
          title: Escalated
          type: boolean
          description: >-
            A `true` value for this field indicates that the activity has been
            escalated
          readOnly: true
          x-gw-extensions:
            filterable: true
            sortable: true
        escalationDate:
          title: Escalation date
          type: string
          description: >-
            Date and time at which this activity will be escalated if it has not
            yet been completed
          format: date-time
          x-gw-nullable: true
        externallyOwned:
          title: Externally owned
          type: boolean
          description: >-
            A `true` value for this field indicates that the activity is owned
            by a user or group outside of the insurer
          x-gw-extensions:
            filterable: true
        id:
          title: ID
          type: string
          description: The unique identifier of this `Activity`
          readOnly: true
        initialAssignment:
          $ref: '#/components/schemas/Assignee'
        mandatory:
          title: Mandatory
          type: boolean
          description: >-
            A `true` value for this field indicates that the activity is
            mandatory and cannot be skipped
        priority:
          $ref: '#/components/schemas/TypeKeyReference'
        recurring:
          title: Recurring
          type: boolean
          description: A `true` value indicates that this activity is recurring
        startDate:
          title: Start date
          type: string
          description: >-
            Date and time at which the activity is scheduled to begin. Only
            applicable to activities that represent events.
          format: date-time
          x-gw-nullable: true
        status:
          $ref: '#/components/schemas/TypeKeyReference'
        subject:
          title: Subject
          minLength: 1
          type: string
          description: A brief title for the activity
          x-gw-extensions:
            filterable: true
            sortable: true
      description: >-
        An `Activity` is an assignable item that represents a task to be done, a
        decision to be made, or information to be aware of
    ActivityData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/Activity'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    ActivityList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ActivityData'
        included:
          $ref: '#/components/schemas/ActivityResponseInclusions'
    ActivityPattern:
      title: Activity pattern
      type: object
      properties:
        activityClass:
          $ref: '#/components/schemas/TypeKeyReference'
        activityType:
          $ref: '#/components/schemas/TypeKeyReference'
        category:
          $ref: '#/components/schemas/TypeKeyReference'
        code:
          title: Code
          type: string
          description: The code that uniquely identifies this `ActivityPattern`
          x-gw-extensions:
            createOnly: true
            sortable: true
        description:
          title: Description
          type: string
          description: >-
            The default `description` for activities created from this activity
            pattern
        dueDate:
          title: Due date
          type: string
          description: >-
            The default `dueDate` for activities created from this activity
            pattern, calculated based on the current date and time
          format: date-time
        escalationDate:
          title: Escalation date
          type: string
          description: >-
            The default `escalationDate` for activities created from this
            activity pattern, calculated based on the current date and time
          format: date-time
        id:
          title: ID
          type: string
          description: The unique identifier of this `ActivityPattern`
        mandatory:
          title: Mandatory
          type: boolean
          description: >-
            The default `mandatory` value for activities created from this
            activity pattern
        patternLevel:
          $ref: '#/components/schemas/TypeKeyReference'
        priority:
          $ref: '#/components/schemas/TypeKeyReference'
        recurring:
          title: Recurring
          type: boolean
          description: >-
            The default `recurring` value for activities created from this
            activity pattern
        subject:
          title: Subject
          type: string
          description: >-
            The default `subject` for activities created from this activity
            pattern
      description: >-
        An `ActivityPattern` is a template for an activity, and is used to
        create a new activity and set defaults for some of its fields
    ActivityPatternData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/ActivityPattern'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    ActivityPatternList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ActivityPatternData'
    ActivityRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ActivityData'
        included:
          $ref: '#/components/schemas/ActivityRequestInclusions'
    ActivityRequestInclusions:
      type: object
      properties:
        Note:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/NoteData'
    ActivityResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ActivityData'
        included:
          $ref: '#/components/schemas/ActivityResponseInclusions'
    ActivityResponseInclusions:
      type: object
      properties:
        Assignee:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/AssigneeData'
        Note:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/NoteData'
    AdditionalNamedInsuredData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/AdditionalNamedInsured'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    Address:
      title: Address
      type: object
      properties:
        addressLine1:
          title: Address line 1
          type: string
          description: The first line of the address
          x-gw-nullable: true
        addressLine2:
          title: Address line 2
          type: string
          description: The second line of the address
          x-gw-nullable: true
        addressLine3:
          title: Address line 3
          type: string
          description: The third line of the address
          x-gw-nullable: true
        addressType:
          $ref: '#/components/schemas/TypeKeyReference'
        area:
          $ref: '#/components/schemas/TypeKeyReference'
        city:
          title: City
          type: string
          description: The city of the address
          x-gw-nullable: true
        country:
          title: Country
          type: string
          description: >-
            The country of the address. The value of the `country` field will
            affect which other fields on the `Address` are applicable.
          x-gw-nullable: true
          x-gw-type: typekey.Country
        county:
          title: County
          type: string
          description: The county of the address. Only applicable in certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        department:
          $ref: '#/components/schemas/TypeKeyReference'
        description:
          title: Description
          type: string
          description: The description of the address (Since 1.2.0)
          x-gw-nullable: true
          x-gw-sinceVersion: 1.2.0
        displayName:
          title: Display name
          type: string
          description: >-
            The formatted value of the address represented by this `Address`,
            including all standard fields for the address's country
          readOnly: true
        emirate:
          $ref: '#/components/schemas/TypeKeyReference'
        id:
          title: ID
          type: string
          description: The unique identifier of this `Address`
          readOnly: true
        island:
          $ref: '#/components/schemas/TypeKeyReference'
        oblast:
          $ref: '#/components/schemas/TypeKeyReference'
        parish:
          $ref: '#/components/schemas/TypeKeyReference'
        postalCode:
          title: Postal code
          type: string
          description: >-
            The postal code of the address. Only applicable in certain
            countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        prefecture:
          $ref: '#/components/schemas/TypeKeyReference'
        province:
          $ref: '#/components/schemas/TypeKeyReference'
        spatialPoint:
          $ref: '#/components/schemas/SpatialPoint'
        state:
          $ref: '#/components/schemas/TypeKeyReference'
        validUntil:
          title: Valid until
          type: string
          description: The date and time that the address is valid until (Since 1.2.0)
          format: date-time
          x-gw-nullable: true
          x-gw-sinceVersion: 1.2.0
      description: >-
        An `Address` represents a postal address. The fields available on an
        `Address` will depend upon the `country` value for the `Address`.
      x-gw-extensions:
        discriminatorProperty: country
    AssessmentSummaryData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/AssessmentSummary'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    Assignee:
      title: Assignee
      type: object
      properties:
        assigneeId:
          title: Assignee ID
          type: string
          description: Unique ID to reference this `Assignee` for includes (Since 1.4.0)
          readOnly: true
          x-gw-sinceVersion: 1.4.0
        autoAssign:
          title: Auto assign
          type: boolean
          description: >-
            Set to `true` to indicate the assignment should be done
            automatically by the system. Cannot be combined with any other
            fields.
        groupId:
          title: Group ID
          type: string
          description: >-
            The ID of the `Group` that the resource should be assigned to. If
            specified without the `userId` field, the `User` within the `Group`
            is selected by assignment rules. If specified along with the
            `userId` field, that specific `User` is assigned the element.
        name:
          title: Name
          type: string
          description: >-
            A human-readable name for the type of assignment that this
            `Assignee` represents
          readOnly: true
        queueId:
          title: Queue ID
          type: string
          description: >-
            The ID of the `Queue` that the resource should be assigned to.
            Cannot be combined with any other fields.
        role:
          $ref: '#/components/schemas/TypeKeyReference'
        userId:
          title: User ID
          type: string
          description: >-
            The ID of the `User` that the resource should be assigned to. The
            `groupId` field must also be specified if the `userId` field is
            specified, and the `User` must be a member of that `Group` and have
            permission to be assigned the element.
      description: >-
        An `Assignee` represents the target of an assignment action, such as a
        user/group combination, assignment queue, or automatic rule-based
        assignment
    AssigneeData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/Assignee'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    AssigneeList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/AssigneeData'
    ClaimsIntegrated:
      title: Claims integrated
      type: object
      properties:
        ccPolicySystemId:
          title: CC policy system ID
          type: string
          description: Integration ID for use in ClaimCenter (Since 1.5.0)
          readOnly: true
          x-gw-sinceVersion: 1.5.0
          x-gw-extensions:
            defaultViews:
              - none
      description: Claims integrated entity
    Contact:
      title: Contact
      type: object
      properties:
        lastName:
          title: Last name
          type: string
          description: >-
            The person's last name. Only applicable for a `Contact` that
            represents a person.
          x-gw-nullable: true
          x-gw-extensions:
            entitySubtype: Person
        primaryPhoneType:
          $ref: '#/components/schemas/TypeKeyReference'
        displayName:
          title: Display name
          type: string
          description: >-
            A formatted representation of the full name for this `Contact',
            including all applicable fields such as `firstName` or `lastName`
          readOnly: true
          x-gw-nullable: true
        companyName:
          title: Company name
          type: string
          description: >-
            The name of the company represented by this `Contact`. Only
            applicable for a `Contact` that represents a company.
          x-gw-extensions:
            entitySubtype: Company
        homePhone:
          $ref: '#/components/schemas/PhoneNumber'
        emailAddress1:
          title: E-mail address 1
          type: string
          description: The contact's primary e-mail address
          x-gw-nullable: true
        externalId:
          title: External ID
          type: string
          description: >-
            A unique identifier assigned by the application for use when the
            `addressBookUID` field is null
          x-gw-extensions:
            filterable: true
        dateOfBirth:
          title: Date of birth
          type: string
          description: >-
            The person's date of birth. Only applicable for a `Contact` that
            represents a person.
          format: date
          x-gw-nullable: true
          x-gw-extensions:
            before: now
            entitySubtype: Person
        emailAddress2:
          title: E-mail address 2
          type: string
          description: The contact's secondary e-mail address
          x-gw-nullable: true
        firstName:
          title: First name
          type: string
          description: >-
            The persons's first name. Only applicable for a `Contact` that
            represents a person.
          x-gw-nullable: true
          x-gw-extensions:
            entitySubtype: Person
        primaryPhone:
          title: Primary phone
          type: string
          description: >-
            The contact's primary phone number, as determined by the type of
            phone number selected in the `primaryPhoneType` field
          readOnly: true
        addressBookUID:
          title: Address book UID
          type: string
          description: >-
            The unique ID of this `Contact` within the contact management
            system. Only applicable if the `Contact` has been linked to a
            contact management system.
          x-gw-nullable: true
        subtype:
          $ref: '#/components/schemas/TypeKeyReference'
        taxId:
          title: Tax ID
          type: string
          description: The contact's tax ID
        workPhone:
          $ref: '#/components/schemas/PhoneNumber'
        id:
          title: ID
          type: string
          description: The unique identifier of this `Contact`
          readOnly: true
        primaryAddress:
          $ref: '#/components/schemas/Address'
        primaryLocale:
          $ref: '#/components/schemas/TypeKeyReference'
        cellPhone:
          $ref: '#/components/schemas/PhoneNumber'
        preferred:
          title: Preferred
          type: boolean
          description: >-
            A `true` value for this field indicates that the vendor is one of
            the insurer's preferred vendors. Only applicable for a `Contact`
            that represents a vendor.
          x-gw-nullable: true
          x-gw-extensions:
            entitySubtype:
              - CompanyVendor
              - PersonVendor
        primaryLanguage:
          $ref: '#/components/schemas/TypeKeyReference'
        ccPolicySystemId:
          title: CC policy system ID
          type: string
          description: Integration ID for use in ClaimCenter (Since 1.5.0)
          readOnly: true
          x-gw-sinceVersion: 1.5.0
          x-gw-extensions:
            defaultViews:
              - none
      description: A `Contact` represents a person or company
    ContingencyData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/Contingency'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    CostData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/Cost'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    DataEnvelope:
      title: Data envelope
      type: object
      properties:
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        links:
          $ref: '#/components/schemas/framework_Links'
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
      description: >-
        Data envelope for requests and responses for individual elements. The
        primary data for the element will be in the `attributes` field.
    DataListEnvelope:
      title: Data list envelope
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
      description: >-
        Data envelope for responses for lists of elements. The primary list of
        elements will be in the `data` field.
    Document:
      title: Document
      type: object
      properties:
        account:
          $ref: '#/components/schemas/SimpleReference'
        author:
          title: Author
          type: string
          description: The name of the person who created this document
          x-gw-nullable: true
        contingency:
          $ref: '#/components/schemas/SimpleReference'
        dateModified:
          title: Date modified
          type: string
          description: The date and time that this `Document` was most recently updated
          format: date-time
          readOnly: true
          x-gw-extensions:
            sortable: true
        description:
          title: Description
          type: string
          description: A description of this document
          x-gw-nullable: true
        docUID:
          title: Document UID
          type: string
          description: >-
            The unique identifier for this `Document` in the linked document
            management system. The exact format of the identifier depends upon
            the specifics of the document management system the application is
            linked to.
          x-gw-extensions:
            createOnly: true
            defaultViews:
              - detail
        id:
          title: ID
          type: string
          description: The unique identifier of this `Document`
          readOnly: true
        inbound:
          title: Inbound
          type: boolean
          description: >-
            This field indicates whether this document is considered to be
            inbound, outbound, or neither
          x-gw-nullable: true
        job:
          $ref: '#/components/schemas/SimpleReference'
        language:
          $ref: '#/components/schemas/TypeKeyReference'
        mimeType:
          title: MIME type
          type: string
          description: >-
            The MIME type of this document, such as `application/msword` for a
            Microsoft Word document
        name:
          title: Name
          type: string
          description: The name of this document
          x-gw-extensions:
            filterable: true
            requiredForCreate: true
            sortable: true
        obsolete:
          title: Obsolete
          type: boolean
          description: >-
            Setting this field to `true` indicates that the information in this
            document can no longer be relied upon to be current and relevant.
            This is often used instead of deletion to preserve history.
          x-gw-nullable: true
        policy:
          $ref: '#/components/schemas/SimpleReference'
        recipient:
          title: Recipient
          type: string
          description: The name of the intended recipient of this document
          x-gw-nullable: true
        section:
          $ref: '#/components/schemas/TypeKeyReference'
        securityType:
          $ref: '#/components/schemas/TypeKeyReference'
        status:
          $ref: '#/components/schemas/TypeKeyReference'
        type:
          $ref: '#/components/schemas/TypeKeyReference'
      description: >-
        A `Document` represents a document within the application, which can
        have additional metadata such as the author of the document or a
        specific security level. The actual contents of the document are
        generally stored in a separate document management system that this
        application is linked to. (Since 1.1.0)
      x-gw-sinceVersion: 1.1.0
    DocumentContent:
      title: Document content
      type: object
      properties:
        contents:
          title: Contents
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          description: The contents of this document as a Base64-encoded string
          format: byte
          readOnly: true
        responseMimeType:
          title: Response MIME type
          type: string
          description: >-
            The MIME type of this document's contents, such as
            `application/msword` for a Microsoft Word document
          readOnly: true
        url:
          title: URL
          type: string
          description: >-
            The URL of this document within the linked document management
            system
          readOnly: true
      description: The contents of a `Document` (Since 1.1.0)
      x-gw-sinceVersion: 1.1.0
    DocumentContentData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/DocumentContent'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    DocumentData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/Document'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    DocumentList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/DocumentData'
        included:
          $ref: '#/components/schemas/DocumentResponseInclusions'
    DocumentRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DocumentData'
    DocumentResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DocumentData'
        included:
          $ref: '#/components/schemas/DocumentResponseInclusions'
    DocumentResponseInclusions:
      type: object
      properties:
        DocumentContent:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/DocumentContentData'
    ExclusiveStateSet:
      title: Exclusive state set
      required:
        - inclusionType
        - states
      type: object
      properties:
        inclusionType:
          title: Inclusion type
          type: string
          description: Whether the set of states is inclusive or exclusive
          enum:
            - exclusive
            - inclusive
        states:
          title: States
          minItems: 1
          type: array
          description: The states that comprise the set
          xml:
            wrapped: true
          items:
            type: string
            x-gw-type: typekey.State
      description: >-
        A set of states that can be used either as an inclusive set or an
        exclusive set (Since 1.2.0)
      x-gw-sinceVersion: 1.2.0
    GenericRelation:
      title: Generic relation
      required:
        - id
        - type
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The formatted name of the referenced element
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        jsonPath:
          title: JSON path
          type: string
          description: The path to the referenced element within the overall JSON document
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - none
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: A reference to a related element
      x-gw-extensions:
        resourceReference: true
    GroupDetail:
      title: Group detail
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The name of the `Group`
        id:
          title: ID
          type: string
          description: The unique identifier of the `Group`
      description: Used to represent a reference to a `Group`
    GroupReference:
      title: Group reference
      type: object
      properties:
        branchCode:
          title: Branch code
          type: string
          description: The `branchCode` of the group
          x-gw-nullable: true
          x-gw-extensions:
            filterable: true
        displayName:
          title: Display name
          type: string
          description: The formatted name of the group
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        jsonPath:
          title: JSON path
          type: string
          description: The path to the referenced `Group` within the overall JSON document
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - none
        refid:
          title: Reference ID
          type: string
          description: >-
            A unique identifier given to the newly created element in the
            context of the current request
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: A reference to `Group` element (Since 1.2.0)
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        resourceReference: true
    JobData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/Job'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    JobRolesData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/JobRoles'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    JobVersionData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/JobVersion'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    LinkObject:
      title: Linked object
      type: object
      properties:
        href:
          title: HREF
          type: string
          description: The URL of the link
        methods:
          title: Methods
          type: array
          description: An array of HTTP method names that can be used with the link URL
          xml:
            wrapped: true
          items:
            type: string
      description: A standard HTTP link
    Links:
      title: Links
      type: object
      additionalProperties:
        $ref: '#/components/schemas/LinkObject'
      description: A set of named links
    LossHistoryData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/LossHistory'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    MergeAccountData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/MergeAccountAttributes'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    MergeAccountRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MergeAccountData'
    MetaObject:
      title: Meta object
      type: object
      properties:
        checksum:
          title: Checksum
          type: string
          description: The checksum of the element
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        links:
          $ref: '#/components/schemas/Links'
        refid:
          title: Reference ID
          type: string
          description: >-
            A unique identifier given to the newly created element in the
            context of the current request
        related:
          $ref: '#/components/schemas/RelatedCollections'
        type:
          title: Type
          type: string
          description: The type of element
      description: An element
    MonetaryAmount:
      title: Monetary amount
      required:
        - amount
        - currency
      type: object
      properties:
        amount:
          title: Amount
          type: string
          description: The decimal amount
          format: gw-bigdecimal
        currency:
          title: Currency
          type: string
          description: The currency for the amount
          x-gw-type: typekey.Currency
      description: A monetary amount that combines a decimal amount with a currency
    MovePoliciesData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/MovePoliciesAttributes'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    MovePoliciesRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MovePoliciesData'
    Note:
      title: Note
      type: object
      properties:
        account:
          $ref: '#/components/schemas/SimpleReference'
        author:
          $ref: '#/components/schemas/SimpleReference'
        body:
          title: Body
          minLength: 1
          type: string
          description: The text of this note
          x-gw-extensions:
            defaultViews:
              - detail
            filterable: true
            requiredForCreate: true
        bodySummary:
          title: Body summary
          type: string
          description: >-
            A shorter summary of this note's `body` field, more suitable for
            displaying in a list of notes
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - summary
        confidential:
          title: Confidential
          type: boolean
          description: >-
            A `true` value for this field indicates that the note contains
            confidential information
        contingency:
          $ref: '#/components/schemas/SimpleReference'
        createdDate:
          title: Created date
          type: string
          description: The date and time that this `Note` was created
          format: date-time
          readOnly: true
        id:
          title: ID
          type: string
          description: Unique identifier of this `Note`
          readOnly: true
        job:
          $ref: '#/components/schemas/SimpleReference'
        policy:
          $ref: '#/components/schemas/SimpleReference'
        securityType:
          $ref: '#/components/schemas/TypeKeyReference'
        subject:
          title: Subject
          type: string
          description: The subject of this note
          x-gw-nullable: true
          x-gw-extensions:
            filterable: true
            sortable: true
        topic:
          $ref: '#/components/schemas/TypeKeyReference'
        updateTime:
          title: Update time
          type: string
          description: The date and time when this `Note` was most recently updated
          format: date-time
          readOnly: true
          x-gw-extensions:
            sortable: true
      description: >-
        A `Note` is used to capture any sort of additional text that needs to be
        associated with another business object. A `Note` consists of a `body`
        that contains the actual text of the note, along with other fields the
        represent additional metadata about the note.
    NoteData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/Note'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    NoteList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/NoteData'
    NoteRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/NoteData'
    NoteResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/NoteData'
    OOSConflictsData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/OOSConflicts'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    PaymentInfoData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/PaymentInfo'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    PaymentPlanData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/PaymentPlan'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    PhoneNumber:
      title: Phone number
      required:
        - countryCode
        - number
      type: object
      properties:
        countryCode:
          $ref: '#/components/schemas/TypeKeyReference'
        displayName:
          title: Display name
          type: string
          description: The phone number formatted in a standardized way
          readOnly: true
        extension:
          title: Extension
          type: string
          description: The extension for the phone number
          x-gw-nullable: true
        number:
          title: Number
          type: string
          description: >-
            The actual phone number, including area code, but excluding the
            country code and extension
      description: >-
        A phone number, with different components of the number broken out as
        separate fields
    PolicyContactData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/PolicyContact'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    PolicyData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/Policy'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    PolicyLineData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/PolicyLine'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    PolicyLocationData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/PolicyLocation'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    PriorLossData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/PriorLoss'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    PriorPolicyData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/PriorPolicy'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    ProducerCodeData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/ProducerCode'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    ProducerCodeList:
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: >-
            The number of elements currently being returned. This may be less
            than the total number of elements. Pagination links under the
            `links` property can be used to access additional pages of results,
            if any are available.
          readOnly: true
        links:
          $ref: '#/components/schemas/framework_Links'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements available, which may be greater than
            the `count` of elements currently being returned. Only included in
            responses when the `includeTotal` query parameter is set to `true`.
            The maximum number of elements counted is 1000. If the response
            value is 1000, the actual count could be 1000 or greater.
          readOnly: true
        data:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ProducerCodeData'
    QuestionAnswersData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/QuestionAnswers'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    QueueDetail:
      title: Queue detail
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The name of the `Queue`
        id:
          title: ID
          type: string
          description: The unique identifier of the `Queue`
      description: Used to represent a reference to a `Queue`
    ReferenceTableEntry:
      title: Reference table entry
      type: object
      properties:
        code:
          title: Code
          type: string
          description: The code of the reference table entry
        description:
          title: Description
          type: string
          description: The description of the reference table entry
        id:
          title: ID
          type: string
          description: The unique identifier of this element
      description: >-
        A single element from a reference table. Reference tables typically
        represent things like standardized lists of codes.
    RelatedCollection:
      title: Related collection
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: The number of elements included in the `data` array
        data:
          title: Data
          type: array
          description: The list of references to the related elements
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/SimpleReference'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements in the related set of elements. Only
            present if the `includeTotal` query parameter is used to request
            that the total be calculated for an included collection.
      description: >-
        A set of element references that are related to the element in some way.
        Used to link elements with their relations when a request is made using
        the `include` query parameter.
    RelatedCollections:
      title: Related collections
      type: object
      additionalProperties:
        $ref: '#/components/schemas/RelatedCollection'
      description: >-
        A set of `RelatedCollection` elements that contain references to
        elements included using the `include` query parameter on a request
    SimpleReference:
      title: Simple reference
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The formatted name of the element
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        jsonPath:
          title: JSON path
          type: string
          description: >-
            The path to the referenced element within the overall JSON document
            (Since 1.2.0)
          readOnly: true
          x-gw-sinceVersion: 1.2.0
          x-gw-extensions:
            defaultViews:
              - none
        refid:
          title: Reference ID
          type: string
          description: >-
            A unique identifier given to the newly created element in the
            context of the current request
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: A reference to an element
      x-gw-extensions:
        resourceReference: true
    SpatialPoint:
      title: Spatial point
      required:
        - latitude
        - longitude
      type: object
      properties:
        latitude:
          title: Latitude
          type: string
          description: The latitude of the spatial point
          format: gw-bigdecimal
        longitude:
          title: Longitude
          type: string
          description: The longitude of the spatial point
          format: gw-bigdecimal
      description: An object that combines a latitude with a longitude (Since 1.2.0)
      x-gw-sinceVersion: 1.2.0
    TypeFilter:
      title: TypeFilter
      type: object
      properties:
        description:
          title: Description
          type: string
          description: The description of this `TypeFilter`
        name:
          title: Name
          type: string
          description: The name of this `TypeFilter`
        typeKeys:
          title: TypeKeys
          type: array
          description: >-
            The `code` values for the `TypeKeys` that are included by this
            `TypeFilter`
          xml:
            wrapped: true
          items:
            type: string
          x-gw-extensions:
            defaultViews:
              - detail
      description: >-
        A `TypeFilter` represents a filtered set of the `TypeKey` values from a
        `TypeList`
    TypeKey:
      title: TypeKey
      type: object
      properties:
        categories:
          title: Categories
          type: array
          description: >-
            The categories that this `TypeKey` belongs to. Categories are
            formatted by combining the name of the `TypeList` with the `code`
            for its `TypeKey`, separated by a `.` character.
          xml:
            wrapped: true
          items:
            type: string
          x-gw-extensions:
            defaultViews:
              - none
        code:
          title: Code
          type: string
          description: >-
            The code for this `TypeKey`. `TypeKey` codes are unique within a
            `TypeList`.
        description:
          title: Description
          type: string
          description: The longer description of this `TypeKey`
        name:
          title: Name
          type: string
          description: The human-readable name of this `TypeKey`
        priority:
          title: Priority
          type: integer
          description: >-
            The order of this `TypeKey` relative to other `TypeKeys` in the same
            `TypeList`. A `TypeKey` with a lower `priority` will appear before a
            `TypeKey` with a higher priority when the values for a `TypeList`
            are presented in sorted order.
        retired:
          title: Retried
          type: boolean
          description: >-
            A `true` value for this field indicates that the `TypeKey` value
            should no longer be used. Retired `TypeKey` values are retained only
            for the sake of historical data that may already be using the
            `TypeKey`.
          x-gw-extensions:
            defaultViews:
              - none
      description: >-
        A `TypeKey` represents one of the possible enumerated values of a
        `TypeList`
    TypeKeyReference:
      title: TypeKey reference
      required:
        - code
      type: object
      properties:
        code:
          title: Code
          type: string
          description: The `code` of the `TypeKey`
        name:
          title: Name
          type: string
          description: The `name` of the `TypeKey`
      description: >-
        A reference to a `TypeKey` element that defines an enumerated value from
        a `TypeList`
    TypeList:
      title: TypeList
      type: object
      properties:
        description:
          title: Description
          type: string
          description: The description of this `TypeList`
        name:
          title: Name
          type: string
          description: The name of this `TypeList`
          x-gw-extensions:
            filterable: true
            sortable: true
        typeFilters:
          title: TypeFilters
          type: array
          description: >-
            The set of `TypeFilters` available on this `TypeList`. A
            `TypeFilter` represents a filtered subset of the `TypeKeys` in this
            `TypeList`.
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/TypeFilter'
          x-gw-extensions:
            defaultViews:
              - detail
        typeKeys:
          title: TypeKeys
          type: array
          description: >-
            The list of `TypeKeys` available on this `TypeList`. A `TypeKey`
            represents one of the enumerated values that comprise this
            `TypeList`.
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/TypeKey'
          x-gw-extensions:
            defaultViews:
              - detail
      description: A `TypeList` represents a list of enumerated `TypeKey` values
    UWIssueData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/UWIssue'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    UWIssueHistoryData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/UWIssueHistory'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    UWIssueTypeReference:
      title: Underwriting issue type reference
      type: object
      properties:
        code:
          title: Code
          type: string
          description: The `code` of the `UWIssueType`
          x-gw-extensions:
            sortable: true
        displayName:
          title: Display name
          type: string
          description: The formatted name of the `UWIssueType`
        id:
          title: ID
          type: string
          description: The unique identifier of this element
        jsonPath:
          title: JSON path
          type: string
          description: >-
            The path to the referenced `UWIssueType` within the overall JSON
            document
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - none
        refid:
          title: Reference ID
          type: string
          description: >-
            A unique identifier given to the newly created element in the
            context of the current request
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: >-
        A reference to a `UWIssueType` that represents a type of underwriting
        issue (Since 1.2.0)
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        resourceReference: true
    UWReferralReasonData:
      required:
        - attributes
      type: object
      properties:
        method:
          title: Method
          type: string
          description: >-
            The HTTP method that should be used for an included element. Only
            applicable to requests. See the documentation for more information
            about request inclusion.
          enum:
            - post
            - patch
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        checksum:
          title: Checksum
          type: string
          description: >-
            A checksum for the element that can be used to prevent lost updates
            by detecting that the element has been updated since the caller last
            retrieved it. See the documentation for more information about lost
            update prevention.
        attributes:
          $ref: '#/components/schemas/UWReferralReason'
        links:
          $ref: '#/components/schemas/framework_Links'
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        refid:
          title: Reference ID
          type: string
          description: >-
            Used to assign a temporary identifier to an element created using
            request inclusion. Only applicable to requests. See the
            documentation for more information about request inclusion.
        type:
          title: Type
          type: string
          description: The type of this element
          readOnly: true
        uri:
          title: URI
          type: string
          description: >-
            The URI for an included element, representing the parent to create
            the element on if the `method` is `post` or the element to update if
            the `method` is `patch`. Only applicable to requests. See the
            documentation for more information about request inclusion.
    Account:
      title: Account
      type: object
      properties:
        accountHolder:
          $ref: '#/components/schemas/account_SimpleReference'
        accountNumber:
          title: Account number
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The number assigned to this account
          readOnly: true
          x-gw-extensions:
            filterable: true
            sortable: true
        accountStatus:
          $ref: '#/components/schemas/account_TypeKeyReference'
        accountStatusUpdateTime:
          title: Account status update time
          type: string
          description: The date and time when the `accountStatus` was last updated
          format: date-time
          readOnly: true
        businessOperationsDescription:
          title: Business and operations description
          maxLength: 240
          minLength: 1
          pattern: \S
          type: string
          description: >-
            A brief description of the type of business done by the company
            represented by this account
          x-gw-nullable: true
        createdDate:
          title: Created date
          type: string
          description: The date and time when this `Account` was created
          format: date-time
          readOnly: true
          x-gw-extensions:
            filterable: true
            sortable: true
        frozen:
          title: Frozen
          type: boolean
          description: >-
            A `true` value indicates that this `Account` is frozen and cannot
            currently be edited
          readOnly: true
        id:
          title: ID
          type: string
          description: The unique identifier of this element
        industryCode:
          $ref: '#/components/schemas/account_ReferenceTableEntry'
        initialAccountHolder:
          $ref: '#/components/schemas/AccountContact'
        initialPrimaryLocation:
          $ref: '#/components/schemas/AccountLocation'
        locked:
          title: If true then policies cannot be created or retrieved on this account
          type: boolean
          description: >-
            A `true` value indicates that policies cannot be created or
            retrieved on this account. A locked account usually indicates that
            the account is being merged with another account. (Since 1.4.0)
          readOnly: true
          x-gw-sinceVersion: 1.4.0
        nickname:
          title: Nickname
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: >-
            A nickname for the account, which can be used to distinguish between
            different accounts held by the same account holder
          x-gw-nullable: true
        numberOfContacts:
          title: Number of contacts
          type: string
          description: The number of `AccountContact` elements on this `Account`
          readOnly: true
        organizationType:
          $ref: '#/components/schemas/account_TypeKeyReference'
        originationDate:
          title: Origination date
          type: string
          description: >-
            The date and time at which the company or person represented by this
            account first became a client of the insurer
          format: date-time
          readOnly: true
        otherOrganizationTypeDescription:
          title: Other organization type description
          maxLength: 40
          minLength: 1
          pattern: \S
          type: string
          description: >-
            A description of the organization type. Only applicable if
            `organizationType` is `other`.
          x-gw-nullable: true
        preferredCoverageCurrency:
          $ref: '#/components/schemas/account_TypeKeyReference'
        preferredSettlementCurrency:
          $ref: '#/components/schemas/account_TypeKeyReference'
        primaryLanguage:
          $ref: '#/components/schemas/account_TypeKeyReference'
        primaryLocale:
          $ref: '#/components/schemas/account_TypeKeyReference'
        primaryLocation:
          $ref: '#/components/schemas/account_SimpleReference'
        producerCodes:
          title: Producer codes
          maxItems: 1
          minItems: 1
          type: array
          description: >-
            When an `Account` is being created, this list should include a
            reference to the single `ProducerCode` that represents the default
            producer for the account. For an `Account` that already exists, this
            list will include `ProducerCode` references for all producers that
            have created or serviced policies for this account.
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/account_SimpleReference'
          x-gw-extensions:
            createOnly: true
            requiredForCreate: true
        serviceTier:
          $ref: '#/components/schemas/account_TypeKeyReference'
        stateBureauNum:
          title: State bureau number
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The state bureau number for this account
          x-gw-nullable: true
        yearBusinessStarted:
          title: Year business started
          type: integer
          description: The year that the company represented by this account was started
          x-gw-nullable: true
      description: >-
        An `Account` represents a person or company that applies for or
        purchases insurance from the insurer
      x-gw-extensions:
        dynamicProperties:
          accountHolderCreation:
            forbiddenError: >-
              Exactly one of either 'accountHolder' or 'initialAccountHolder' is
              required on creation
            jsonLogic:
              if:
                - '===':
                    - var: accountHolder
                    - null
                - x-gw-dynamicPropertiesMarker: true
                  x-gw-requiredForCreate:
                    - initialAccountHolder
                - x-gw-dynamicPropertiesMarker: true
                  x-gw-forbidden:
                    - initialAccountHolder
            requiredError: >-
              Exactly one of either 'accountHolder' or 'initialAccountHolder' is
              required on creation
          primaryLocationCreation:
            forbiddenError: >-
              Exactly one of either 'primaryLocation' or
              'initialPrimaryLocation' is required on creation
            jsonLogic:
              if:
                - '===':
                    - var: primaryLocation
                    - null
                - x-gw-dynamicPropertiesMarker: true
                  x-gw-requiredForCreate:
                    - initialPrimaryLocation
                - x-gw-dynamicPropertiesMarker: true
                  x-gw-forbidden:
                    - initialPrimaryLocation
            requiredError: >-
              Exactly one of either 'primaryLocation' or
              'initialPrimaryLocation' is required on creation
    AccountContact:
      title: Account contact
      type: object
      properties:
        lastName:
          title: Last name
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The person's last name. Only applicable for an `AccountContact` that
            represents a person.
          x-gw-extensions:
            entitySubtype: Person
            requiredForCreate: true
        student:
          title: Student
          type: boolean
          description: >-
            A `true` value indicates that the person qualifies as a student.
            Only applicable for an `AccountContact` that represents a person.
          x-gw-nullable: true
          x-gw-extensions:
            defaultViews:
              - detail
            entitySubtype: Person
            validateSubtype: false
        displayName:
          title: Display name
          type: string
          description: >-
            A formatted representation of the full name for this
            `AccountContact', including all applicable fields such as
            `firstName` or `lastName`
          readOnly: true
        officialIds:
          $ref: '#/components/schemas/OfficialIDMap'
        companyName:
          title: Company name
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The name of the company represented by this `AccountContact`. Only
            applicable for an `AccountContact` that represents a company.
          x-gw-extensions:
            entitySubtype: Company
            requiredForCreate: true
        emailAddress1:
          title: E-mail address 1
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The contact's primary e-mail address
          x-gw-nullable: true
        emailAddress2:
          title: E-mail address 2
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The contact's secondary e-mail address
          x-gw-nullable: true
          x-gw-extensions:
            defaultViews:
              - detail
        goodDriverDiscount:
          title: Good driver discount
          type: boolean
          description: >-
            A `true` value indicates that the person qualifies for a good driver
            discount. Only applicable for an `AccountContact` that represents a
            person.
          x-gw-nullable: true
          x-gw-extensions:
            defaultViews:
              - detail
            entitySubtype: Person
            validateSubtype: false
        industryCode:
          $ref: '#/components/schemas/account_ReferenceTableEntry'
        dateCompletedTrainingClass:
          title: Driver training class completion date
          type: string
          description: >-
            The date that the person completed a driver training class. Only
            applicable for an `AccountContact` that represents a person.
          format: date
          x-gw-nullable: true
          x-gw-extensions:
            before: now
            defaultViews:
              - detail
            entitySubtype: Person
            validateSubtype: false
        orgType:
          title: Named insured organization type
          type: string
          description: >-
            The organization type of the named insured's company, if this
            contact represents a named insured on the policy
          x-gw-nullable: true
          x-gw-extensions:
            defaultViews:
              - detail
        relationshipTitle:
          $ref: '#/components/schemas/account_TypeKeyReference'
        yearLicensed:
          title: Year licensed
          type: integer
          description: >-
            The year that the person first acquired a driver's license. Only
            applicable for an `AccountContact` that represents a person.
          x-gw-nullable: true
          x-gw-extensions:
            defaultViews:
              - detail
            entitySubtype: Person
            validateSubtype: false
        licenseNumber:
          title: Driver's license number
          maxLength: 20
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The person's driver's license number. Only applicable for an
            `AccountContact` that represents a person. (Since 1.1.0)
          x-gw-nullable: true
          x-gw-sinceVersion: 1.1.0
          x-gw-extensions:
            entitySubtype: Person
        particle:
          title: Particle
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The particle portion of the name of the person represented by this
            `AccountContact`. Only applicable for an `AccountContact` that
            represents a person. (Since 1.2.0)
          x-gw-nullable: true
          x-gw-sinceVersion: 1.2.0
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        numberOfAccidents:
          $ref: '#/components/schemas/account_TypeKeyReference'
        numberOfViolations:
          $ref: '#/components/schemas/account_TypeKeyReference'
        lastNameKanji:
          title: Last name kanji
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The kanji version of the last name of the person represented by this
            `AccountContact`. Only applicable for an `AccountContact` that
            represents a person. (Since 1.2.0)
          x-gw-nullable: true
          x-gw-sinceVersion: 1.2.0
        licenseState:
          $ref: '#/components/schemas/account_TypeKeyReference'
        primaryPhoneType:
          $ref: '#/components/schemas/account_TypeKeyReference'
        homePhone:
          $ref: '#/components/schemas/account_PhoneNumber'
        active:
          title: Active
          type: boolean
          description: >-
            A `true` value for this field indicates that the contact is
            available to be added to jobs (Since 1.4.0)
          x-gw-sinceVersion: 1.4.0
          x-gw-extensions:
            defaultViews:
              - detail
        externalId:
          title: External ID
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: >-
            A unique identifier assigned by the application for use when the
            `addressBookUID` field is null
          x-gw-extensions:
            defaultViews:
              - detail
        dateOfBirth:
          title: Date of birth
          type: string
          description: >-
            The person's date of birth. Only applicable for an `AccountContact`
            that represents a person.
          format: date
          x-gw-nullable: true
          x-gw-extensions:
            before: now
            entitySubtype: Person
        firstNameKanji:
          title: First name kanji
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The kanji version of the first name of the person represented by
            this `AccountContact`. Only applicable for an `AccountContact` that
            represents a person. (Since 1.2.0)
          x-gw-nullable: true
          x-gw-sinceVersion: 1.2.0
        firstName:
          title: First name
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The persons's first name. Only applicable for an `AccountContact`
            that represents a person.
          x-gw-extensions:
            entitySubtype: Person
            requiredForCreate: true
        primaryPhone:
          title: Primary phone
          type: string
          description: >-
            The contact's primary phone number, as determined by the type of
            phone number selected in the `primaryPhoneType` field
          readOnly: true
        addressBookUID:
          title: Address book UID
          maxLength: 64
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The unique ID of this contact within the contact management system.
            This field is only set if the contact has been linked to a contact
            management system.
          x-gw-nullable: true
          x-gw-extensions:
            defaultViews:
              - detail
        taxId:
          title: Tax ID
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: The contact's tax ID
          x-gw-nullable: true
        busOpsDescription:
          title: Named insured business operation description
          type: string
          description: >-
            The description of the contact's business operations, if this
            contact represents a named insured on the policy
          x-gw-nullable: true
          x-gw-extensions:
            defaultViews:
              - detail
        trainingClassType:
          $ref: '#/components/schemas/account_TypeKeyReference'
        workPhone:
          $ref: '#/components/schemas/account_PhoneNumber'
        primaryAddress:
          $ref: '#/components/schemas/account_Address'
        companyNameKanji:
          title: Company name kanji
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The kanji version of the name of the company represented by this
            `AccountContact`. Only applicable for an `AccountContact` that
            represents a company. (Since 1.2.0)
          x-gw-nullable: true
          x-gw-sinceVersion: 1.2.0
        primaryLocale:
          $ref: '#/components/schemas/account_TypeKeyReference'
        cellPhone:
          $ref: '#/components/schemas/account_PhoneNumber'
        maritalStatus:
          $ref: '#/components/schemas/account_TypeKeyReference'
        primaryLanguage:
          $ref: '#/components/schemas/account_TypeKeyReference'
        contactSubtype:
          title: Contact subtype
          type: string
          description: >-
            The specific type of contact represented by this `AccountContact`,
            such as `Person` or `Company`
          x-gw-extensions:
            requiredForCreate: true
          x-gw-type: typekey.Contact
        ccPolicySystemId:
          title: CC policy system ID
          type: string
          description: Integration ID for use in ClaimCenter (Since 1.5.0)
          readOnly: true
          x-gw-sinceVersion: 1.5.0
          x-gw-extensions:
            defaultViews:
              - none
      description: >-
        An `AccountContact` represents a person or company that is part of an
        account or policy on that account. Each `PolicyContact` on a policy for
        this account will also be linked to an `AccountContact` on this account.
        Changes to this `AccountContact` will be reflected on new jobs created
        for this account.
      x-gw-extensions:
        discriminatorProperty: contactSubtype
    AccountLocation:
      title: Account location
      type: object
      properties:
        CEDEX:
          title: CEDEX
          maxLength: 2
          type: string
          description: >-
            The CEDEX bureau of the location's address. Only applicable in
            certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        active:
          title: Active
          type: boolean
          description: >-
            A `true` value indicates that this `AccountLocation` is available to
            be added as a `PolicyLocation` to new submissions for this account.
            A `false` value indicates that the `AccountLocation` is no longer
            active and should not be available to new submissions.
        addressLine1:
          title: Address line 1
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The first line of the location's address
          x-gw-nullable: true
        addressLine1Kanji:
          title: Address line 1 kanji
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The kanji version of the first line of the location's address. Only
            applicable in certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        addressLine2:
          title: Address line 2
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The second line of the location's address
          x-gw-nullable: true
          x-gw-extensions:
            defaultViews:
              - detail
        addressLine2Kanji:
          title: Address line 2 kanji
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The kanji version of the second line of the location's address. Only
            applicable in certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        addressLine3:
          title: Address line 3
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The third line of the location's address
          x-gw-nullable: true
          x-gw-extensions:
            defaultViews:
              - detail
        addressType:
          $ref: '#/components/schemas/account_TypeKeyReference'
        area:
          $ref: '#/components/schemas/account_TypeKeyReference'
        city:
          title: City
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The city of the location's address
          x-gw-nullable: true
        cityKanji:
          title: City kanji
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The kanji version of the city of the location's address. Only
            applicable in certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        country:
          title: Country
          type: string
          description: >-
            The country of the location's address. The value of the `country`
            field will affect which other fields are applicable.
          x-gw-nullable: true
          x-gw-extensions:
            createOnly: true
            defaultViews:
              - detail
          x-gw-type: typekey.Country
        county:
          title: County
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The county of the location's address. Only applicable in certain
            countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
            defaultViews:
              - detail
        department:
          $ref: '#/components/schemas/account_TypeKeyReference'
        displayName:
          title: Display name
          type: string
          description: >-
            The formatted value of the location represented by this
            `AccountLocation`, including all standard fields for the address's
            country
          readOnly: true
        emirate:
          $ref: '#/components/schemas/account_TypeKeyReference'
        employeeCount:
          title: Employee count
          minimum: 0
          type: integer
          description: The number of employees at this location
          x-gw-nullable: true
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        island:
          $ref: '#/components/schemas/account_TypeKeyReference'
        locationCode:
          title: Location code
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: A code assigned to this location by the insurer
          x-gw-nullable: true
        locationName:
          title: Location name
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: A shorthand name for this location
          x-gw-nullable: true
          x-gw-extensions:
            sortable: true
        locationNum:
          title: Location number
          type: integer
          description: >-
            The number automatically assigned to this location in the context of
            this account
          readOnly: true
          x-gw-extensions:
            filterable: true
            sortable: true
        nonSpecific:
          title: Non-specific
          type: boolean
          description: >-
            A `true` value indicates that this `AccountLocation` does not
            represent a specific address and instead only represents a more
            general area such as a state or city. Non-specific locations do not
            require standard address fields like `addressLine1`, but can only be
            used in certain types of policies.
          x-gw-extensions:
            createOnly: true
        oblast:
          $ref: '#/components/schemas/account_TypeKeyReference'
        parish:
          $ref: '#/components/schemas/account_TypeKeyReference'
        phone:
          $ref: '#/components/schemas/account_PhoneNumber'
        postalCode:
          title: Postal code
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The postal code of the location's address. Only applicable in
            certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        prefecture:
          $ref: '#/components/schemas/account_TypeKeyReference'
        province:
          $ref: '#/components/schemas/account_TypeKeyReference'
        state:
          $ref: '#/components/schemas/account_TypeKeyReference'
      description: >-
        An `AccountLocation` represents a location relevant to the account or
        one of its policies. It combines an address for the location with other
        attributes of the location that may be relevant to the policy. Each
        `PolicyLocation` on a policy for this account will also be linked to an
        `AccountLocation` on this account. Changes to this `AccountLocation`
        will be reflected on new jobs created for this account.
      x-gw-extensions:
        discriminatorProperty: country
    AccountSearchRequestAttributes:
      title: Account search request attributes
      type: object
      properties:
        accountNumber:
          title: Account number
          type: string
          description: The `accountNumber` of the account
        addressLine1:
          title: Address line 1
          type: string
          description: >-
            The `addressLine1` of the `primaryAddress` on the account's
            `accountHolder`
        addressLine1Kanji:
          title: Address line 1 kanji
          type: string
          description: >-
            The `addressLine1Kanji` of the `primaryAddress` on the account's
            `accountHolder`. Only applicable in certain countries.
          x-gw-extensions:
            countryRestricted: true
        addressLine2:
          title: Address line 2
          type: string
          description: >-
            The `addressLine2` of the `primaryAddress` on the account's
            `accountHolder`
        addressLine2Kanji:
          title: Address line 2 kanji
          type: string
          description: >-
            The `addressLine2Kanji` of the `primaryAddress` on the account's
            `accountHolder`. Only applicable in certain countries.
          x-gw-extensions:
            countryRestricted: true
        area:
          $ref: '#/components/schemas/account_TypeKeyReference'
        city:
          title: City
          type: string
          description: The `city` of the `primaryAddress` on the account's `accountHolder`
        cityKanji:
          title: City kanji
          type: string
          description: >-
            The `cityKanji` of the `primaryAddress` on the account's
            `accountHolder`. Only applicable in certain countries.
          x-gw-extensions:
            countryRestricted: true
        companyName:
          title: Company name
          type: string
          description: The `companyName` of the account's `accountHolder`
        companyNameKanji:
          title: Company name kanji
          type: string
          description: The `companyNameKanji` of the account's `accountHolder`
        companyNamePartialMatch:
          title: Company name partial match
          type: boolean
          description: >-
            A `true` value for this field indicates that the `companyName` field
            value should allow for partial matches. Otherwise, the `companyName`
            field must match exactly.
          default: false
        country:
          title: Country
          type: string
          description: >-
            The `country` of the `primaryAddress` on the account's
            `accountHolder`
          x-gw-type: typekey.Country
        county:
          title: County
          type: string
          description: >-
            The `county` of the `primaryAddress` on the account's
            `accountHolder`. Only applicable in certain countries.
          x-gw-extensions:
            countryRestricted: true
        department:
          $ref: '#/components/schemas/account_TypeKeyReference'
        emirate:
          $ref: '#/components/schemas/account_TypeKeyReference'
        firstName:
          title: First name
          type: string
          description: The `firstName` of the account's `accountHolder`
        firstNameKanji:
          title: First name kanji
          type: string
          description: The `firstNameKanji` of the account's `accountHolder`
        firstNamePartialMatch:
          title: First name partial match
          type: boolean
          description: >-
            A `true` value for this field indicates that the `firstName` field
            value should allow for partial matches. Otherwise, the `firstName`
            field must match exactly.
          default: false
        industryCode:
          $ref: '#/components/schemas/account_SimpleReference'
        island:
          $ref: '#/components/schemas/account_TypeKeyReference'
        lastName:
          title: Last name
          type: string
          description: The `lastName` of the account's `accountHolder`
        lastNameKanji:
          title: Last name kanji
          type: string
          description: The `lastNameKanji` of the account's `accountHolder`
        lastNamePartialMatch:
          title: Last name partial match
          type: boolean
          description: >-
            A `true` value for this field indicates that the `lastName` field
            value should allow for partial matches. Otherwise, the `lastName`
            field must match exactly.
          default: false
        oblast:
          $ref: '#/components/schemas/account_TypeKeyReference'
        organization:
          $ref: '#/components/schemas/account_SimpleReference'
        parish:
          $ref: '#/components/schemas/account_TypeKeyReference'
        particle:
          title: Particle
          type: string
          description: The `particle` of the account's `accountHolder`
        phoneNumber:
          title: Phone number
          type: string
          description: The `workPhone` of the account's `accountHolder`
        postalCode:
          title: Postal code
          type: string
          description: >-
            The `postalCode` of the `primaryAddress` on the account's
            `accountHolder`. Only applicable in certain countries.
          x-gw-extensions:
            countryRestricted: true
        prefecture:
          $ref: '#/components/schemas/account_TypeKeyReference'
        producerCode:
          $ref: '#/components/schemas/account_SimpleReference'
        province:
          $ref: '#/components/schemas/account_TypeKeyReference'
        state:
          $ref: '#/components/schemas/account_TypeKeyReference'
        taxId:
          title: Tax ID
          type: string
          description: The `taxId` of the account's `accountHolder`
      description: Details of the account to search for (Since 1.2.0)
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        discriminatorProperty: country
    account_Activity:
      title: Activity
      type: object
      properties:
        activityPattern:
          title: Activity pattern
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The code of the `ActivityPattern` used to create this activity and
            set its initial values
          x-gw-extensions:
            createOnly: true
        activityType:
          $ref: '#/components/schemas/account_TypeKeyReference'
        approvalIssue:
          title: Approval issue
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The reason approval is needed. Only applicable to activities with an
            `activityType` of `approval`.
        approvalRationale:
          title: Approval rationale
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: >-
            Rationale for approving or rejecting this activity. Only applicable
            to activities with an `activityType` of `approval`.
        approved:
          title: Approved
          type: boolean
          description: >-
            This field is `true` if this activity has been approved, `false` if
            this activity has been rejected, and omitted otherwise. Only
            applicable to activities with an `activityType` of `approval`.
          readOnly: true
        assignedByUser:
          $ref: '#/components/schemas/account_SimpleReference'
        assignedGroup:
          $ref: '#/components/schemas/account_SimpleReference'
        assignedQueue:
          $ref: '#/components/schemas/account_SimpleReference'
        assignedUser:
          $ref: '#/components/schemas/account_SimpleReference'
        assignmentStatus:
          $ref: '#/components/schemas/account_TypeKeyReference'
        associatedRole:
          $ref: '#/components/schemas/account_TypeKeyReference'
        closeDate:
          title: Close date
          type: string
          description: >-
            The date and time when this activity was completed, skipped,
            approved, or rejected
          format: date-time
          readOnly: true
          x-gw-extensions:
            filterable: true
        closeUser:
          $ref: '#/components/schemas/account_SimpleReference'
        createTime:
          title: Create time
          type: string
          description: The date and time when this `Activity` was created (Since 1.1.0)
          format: date-time
          readOnly: true
          x-gw-sinceVersion: 1.1.0
        description:
          title: Description
          maxLength: 1333
          minLength: 1
          pattern: \S
          type: string
          description: The description of this activity
          x-gw-nullable: true
          x-gw-extensions:
            defaultViews:
              - detail
        dueDate:
          title: Due date
          type: string
          description: >-
            Date and time by which a person should complete the activity. If not
            completed by this time, the activity is considered overdue. Not
            applicable to activities that represent events rather than tasks.
          format: date-time
          x-gw-nullable: true
          x-gw-extensions:
            filterable: true
            sortable: true
        endDate:
          title: End date
          type: string
          description: >-
            Date and time at which the activity is expected to end. Only
            applicable to activities that represent events.
          format: date-time
          x-gw-nullable: true
        escalated:
          title: Escalated
          type: boolean
          description: >-
            A `true` value for this field indicates that the activity has been
            escalated
          readOnly: true
          x-gw-extensions:
            filterable: true
            sortable: true
        escalationDate:
          title: Escalation date
          type: string
          description: >-
            Date and time at which this activity will be escalated if it has not
            yet been completed
          format: date-time
          x-gw-nullable: true
        externallyOwned:
          title: Externally owned
          type: boolean
          description: >-
            A `true` value for this field indicates that the activity is owned
            by a user or group outside of the insurer
          x-gw-extensions:
            filterable: true
        id:
          title: ID
          type: string
          description: The unique identifier of this `Activity`
          readOnly: true
        initialAssignment:
          $ref: '#/components/schemas/account_Assignee'
        mandatory:
          title: Mandatory
          type: boolean
          description: >-
            A `true` value for this field indicates that the activity is
            mandatory and cannot be skipped
        priority:
          $ref: '#/components/schemas/account_TypeKeyReference'
        recurring:
          title: Recurring
          type: boolean
          description: A `true` value indicates that this activity is recurring
        startDate:
          title: Start date
          type: string
          description: >-
            Date and time at which the activity is scheduled to begin. Only
            applicable to activities that represent events.
          format: date-time
          x-gw-nullable: true
        status:
          $ref: '#/components/schemas/account_TypeKeyReference'
        subject:
          title: Subject
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: A brief title for the activity
          x-gw-extensions:
            filterable: true
            sortable: true
      description: >-
        An `Activity` is an assignable item that represents a task to be done, a
        decision to be made, or information to be aware of
      xml:
        name: Activity
    account_ActivityPattern:
      title: Activity pattern
      type: object
      properties:
        activityClass:
          $ref: '#/components/schemas/account_TypeKeyReference'
        activityType:
          $ref: '#/components/schemas/account_TypeKeyReference'
        category:
          $ref: '#/components/schemas/account_TypeKeyReference'
        code:
          title: Code
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The code that uniquely identifies this `ActivityPattern`
          x-gw-extensions:
            createOnly: true
            sortable: true
        description:
          title: Description
          maxLength: 1333
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The default `description` for activities created from this activity
            pattern
        dueDate:
          title: Due date
          type: string
          description: >-
            The default `dueDate` for activities created from this activity
            pattern, calculated based on the current date and time
          format: date-time
        escalationDate:
          title: Escalation date
          type: string
          description: >-
            The default `escalationDate` for activities created from this
            activity pattern, calculated based on the current date and time
          format: date-time
        id:
          title: ID
          type: string
          description: The unique identifier of this `ActivityPattern`
        mandatory:
          title: Mandatory
          type: boolean
          description: >-
            The default `mandatory` value for activities created from this
            activity pattern
        patternLevel:
          $ref: '#/components/schemas/account_TypeKeyReference'
        priority:
          $ref: '#/components/schemas/account_TypeKeyReference'
        recurring:
          title: Recurring
          type: boolean
          description: >-
            The default `recurring` value for activities created from this
            activity pattern
        subject:
          title: Subject
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The default `subject` for activities created from this activity
            pattern
      description: >-
        An `ActivityPattern` is a template for an activity, and is used to
        create a new activity and set defaults for some of its fields
      xml:
        name: ActivityPattern
    account_Address:
      title: Address
      type: object
      properties:
        CEDEX:
          title: CEDEX
          maxLength: 2
          type: string
          description: >-
            The CEDEX bureau of the address. Only applicable in certain
            countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        addressLine1:
          title: Address line 1
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The first line of the address
          x-gw-nullable: true
        addressLine1Kanji:
          title: Address line 1 kanji
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The kanji version of the first line of the address. Only applicable
            in certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        addressLine2:
          title: Address line 2
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The second line of the address
          x-gw-nullable: true
        addressLine2Kanji:
          title: Address line 2 kanji
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The kanji version of the second line of the address. Only applicable
            in certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        addressLine3:
          title: Address line 3
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The third line of the address
          x-gw-nullable: true
        addressType:
          $ref: '#/components/schemas/account_TypeKeyReference'
        area:
          $ref: '#/components/schemas/account_TypeKeyReference'
        city:
          title: City
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The city of the address
          x-gw-nullable: true
        cityKanji:
          title: City kanji
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The kanji version of the city of the address. Only applicable in
            certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        country:
          title: Country
          type: string
          description: >-
            The country of the address. The value of the `country` field will
            affect which other fields on the `Address` are applicable.
          x-gw-nullable: true
          x-gw-type: typekey.Country
        county:
          title: County
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The county of the address. Only applicable in certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        department:
          $ref: '#/components/schemas/account_TypeKeyReference'
        description:
          title: Description
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The description of the address (Since 1.2.0)
          x-gw-nullable: true
          x-gw-sinceVersion: 1.2.0
        displayName:
          title: Display name
          type: string
          description: >-
            The formatted value of the address represented by this `Address`,
            including all standard fields for the address's country
          readOnly: true
        emirate:
          $ref: '#/components/schemas/account_TypeKeyReference'
        id:
          title: ID
          type: string
          description: The unique identifier of this `Address`
          readOnly: true
        island:
          $ref: '#/components/schemas/account_TypeKeyReference'
        oblast:
          $ref: '#/components/schemas/account_TypeKeyReference'
        parish:
          $ref: '#/components/schemas/account_TypeKeyReference'
        postalCode:
          title: Postal code
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The postal code of the address. Only applicable in certain
            countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        prefecture:
          $ref: '#/components/schemas/account_TypeKeyReference'
        province:
          $ref: '#/components/schemas/account_TypeKeyReference'
        spatialPoint:
          $ref: '#/components/schemas/account_SpatialPoint'
        state:
          $ref: '#/components/schemas/account_TypeKeyReference'
        validUntil:
          title: Valid until
          type: string
          description: The date and time that the address is valid until (Since 1.2.0)
          format: date-time
          x-gw-nullable: true
          x-gw-sinceVersion: 1.2.0
      description: >-
        An `Address` represents a postal address. The fields available on an
        `Address` will depend upon the `country` value for the `Address`.
      xml:
        name: Address
      x-gw-extensions:
        discriminatorProperty: country
    account_Assignee:
      title: Assignee
      type: object
      properties:
        assigneeId:
          title: Assignee ID
          type: string
          description: Unique ID to reference this `Assignee` for includes (Since 1.4.0)
          readOnly: true
          x-gw-sinceVersion: 1.4.0
        autoAssign:
          title: Auto assign
          type: boolean
          description: >-
            Set to `true` to indicate the assignment should be done
            automatically by the system. Cannot be combined with any other
            fields.
        groupId:
          title: Group ID
          type: string
          description: >-
            The ID of the `Group` that the resource should be assigned to. If
            specified without the `userId` field, the `User` within the `Group`
            is selected by assignment rules. If specified along with the
            `userId` field, that specific `User` is assigned the element.
        name:
          title: Name
          type: string
          description: >-
            A human-readable name for the type of assignment that this
            `Assignee` represents
          readOnly: true
        queueId:
          title: Queue ID
          type: string
          description: >-
            The ID of the `Queue` that the resource should be assigned to.
            Cannot be combined with any other fields.
        role:
          $ref: '#/components/schemas/account_TypeKeyReference'
        userId:
          title: User ID
          type: string
          description: >-
            The ID of the `User` that the resource should be assigned to. The
            `groupId` field must also be specified if the `userId` field is
            specified, and the `User` must be a member of that `Group` and have
            permission to be assigned the element.
      description: >-
        An `Assignee` represents the target of an assignment action, such as a
        user/group combination, assignment queue, or automatic rule-based
        assignment
      xml:
        name: Assignee
    account_ClaimsIntegrated:
      title: Claims integrated
      type: object
      properties:
        ccPolicySystemId:
          title: CC policy system ID
          type: string
          description: Integration ID for use in ClaimCenter (Since 1.5.0)
          readOnly: true
          x-gw-sinceVersion: 1.5.0
          x-gw-extensions:
            defaultViews:
              - none
      description: Claims integrated entity
      xml:
        name: ClaimsIntegrated
    account_Contact:
      title: Contact
      type: object
      properties:
        lastName:
          title: Last name
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The person's last name. Only applicable for a `Contact` that
            represents a person.
          x-gw-nullable: true
          x-gw-extensions:
            entitySubtype: Person
        primaryPhoneType:
          $ref: '#/components/schemas/account_TypeKeyReference'
        displayName:
          title: Display name
          type: string
          description: >-
            A formatted representation of the full name for this `Contact',
            including all applicable fields such as `firstName` or `lastName`
          readOnly: true
          x-gw-nullable: true
        companyName:
          title: Company name
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The name of the company represented by this `Contact`. Only
            applicable for a `Contact` that represents a company.
          x-gw-extensions:
            entitySubtype: Company
        homePhone:
          $ref: '#/components/schemas/account_PhoneNumber'
        emailAddress1:
          title: E-mail address 1
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The contact's primary e-mail address
          x-gw-nullable: true
        externalId:
          title: External ID
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: >-
            A unique identifier assigned by the application for use when the
            `addressBookUID` field is null
          x-gw-extensions:
            filterable: true
        dateOfBirth:
          title: Date of birth
          type: string
          description: >-
            The person's date of birth. Only applicable for a `Contact` that
            represents a person.
          format: date
          x-gw-nullable: true
          x-gw-extensions:
            before: now
            entitySubtype: Person
        emailAddress2:
          title: E-mail address 2
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The contact's secondary e-mail address
          x-gw-nullable: true
        firstName:
          title: First name
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The persons's first name. Only applicable for a `Contact` that
            represents a person.
          x-gw-nullable: true
          x-gw-extensions:
            entitySubtype: Person
        primaryPhone:
          title: Primary phone
          type: string
          description: >-
            The contact's primary phone number, as determined by the type of
            phone number selected in the `primaryPhoneType` field
          readOnly: true
        addressBookUID:
          title: Address book UID
          maxLength: 64
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The unique ID of this `Contact` within the contact management
            system. Only applicable if the `Contact` has been linked to a
            contact management system.
          x-gw-nullable: true
        subtype:
          $ref: '#/components/schemas/account_TypeKeyReference'
        taxId:
          title: Tax ID
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: The contact's tax ID
        workPhone:
          $ref: '#/components/schemas/account_PhoneNumber'
        id:
          title: ID
          type: string
          description: The unique identifier of this `Contact`
          readOnly: true
        primaryAddress:
          $ref: '#/components/schemas/account_Address'
        primaryLocale:
          $ref: '#/components/schemas/account_TypeKeyReference'
        cellPhone:
          $ref: '#/components/schemas/account_PhoneNumber'
        preferred:
          title: Preferred
          type: boolean
          description: >-
            A `true` value for this field indicates that the vendor is one of
            the insurer's preferred vendors. Only applicable for a `Contact`
            that represents a vendor.
          x-gw-nullable: true
          x-gw-extensions:
            entitySubtype:
              - CompanyVendor
              - PersonVendor
        primaryLanguage:
          $ref: '#/components/schemas/account_TypeKeyReference'
        ccPolicySystemId:
          title: CC policy system ID
          type: string
          description: Integration ID for use in ClaimCenter (Since 1.5.0)
          readOnly: true
          x-gw-sinceVersion: 1.5.0
          x-gw-extensions:
            defaultViews:
              - none
      description: A `Contact` represents a person or company
      xml:
        name: Contact
    account_Document:
      title: Document
      type: object
      properties:
        account:
          $ref: '#/components/schemas/account_SimpleReference'
        author:
          title: Author
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The name of the person who created this document
          x-gw-nullable: true
        contingency:
          $ref: '#/components/schemas/account_SimpleReference'
        dateModified:
          title: Date modified
          type: string
          description: The date and time that this `Document` was most recently updated
          format: date-time
          readOnly: true
          x-gw-extensions:
            sortable: true
        description:
          title: Description
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: A description of this document
          x-gw-nullable: true
        docUID:
          title: Document UID
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The unique identifier for this `Document` in the linked document
            management system. The exact format of the identifier depends upon
            the specifics of the document management system the application is
            linked to.
          x-gw-extensions:
            createOnly: true
            defaultViews:
              - detail
        id:
          title: ID
          type: string
          description: The unique identifier of this `Document`
          readOnly: true
        inbound:
          title: Inbound
          type: boolean
          description: >-
            This field indicates whether this document is considered to be
            inbound, outbound, or neither
          x-gw-nullable: true
        job:
          $ref: '#/components/schemas/account_SimpleReference'
        language:
          $ref: '#/components/schemas/account_TypeKeyReference'
        mimeType:
          title: MIME type
          maxLength: 80
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The MIME type of this document, such as `application/msword` for a
            Microsoft Word document
        name:
          title: Name
          maxLength: 80
          minLength: 1
          pattern: \S
          type: string
          description: The name of this document
          x-gw-extensions:
            filterable: true
            requiredForCreate: true
            sortable: true
        obsolete:
          title: Obsolete
          type: boolean
          description: >-
            Setting this field to `true` indicates that the information in this
            document can no longer be relied upon to be current and relevant.
            This is often used instead of deletion to preserve history.
          x-gw-nullable: true
        policy:
          $ref: '#/components/schemas/account_SimpleReference'
        recipient:
          title: Recipient
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The name of the intended recipient of this document
          x-gw-nullable: true
        section:
          $ref: '#/components/schemas/account_TypeKeyReference'
        securityType:
          $ref: '#/components/schemas/account_TypeKeyReference'
        status:
          $ref: '#/components/schemas/account_TypeKeyReference'
        type:
          $ref: '#/components/schemas/account_TypeKeyReference'
      description: >-
        A `Document` represents a document within the application, which can
        have additional metadata such as the author of the document or a
        specific security level. The actual contents of the document are
        generally stored in a separate document management system that this
        application is linked to. (Since 1.1.0)
      xml:
        name: Document
      x-gw-sinceVersion: 1.1.0
    account_DocumentContent:
      title: Document content
      type: object
      properties:
        contents:
          title: Contents
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          description: The contents of this document as a Base64-encoded string
          format: byte
          readOnly: true
        responseMimeType:
          title: Response MIME type
          type: string
          description: >-
            The MIME type of this document's contents, such as
            `application/msword` for a Microsoft Word document
          readOnly: true
        url:
          title: URL
          type: string
          description: >-
            The URL of this document within the linked document management
            system
          readOnly: true
      description: The contents of a `Document` (Since 1.1.0)
      xml:
        name: DocumentContent
      x-gw-sinceVersion: 1.1.0
    account_ExclusiveStateSet:
      title: Exclusive state set
      required:
        - inclusionType
        - states
      type: object
      properties:
        inclusionType:
          title: Inclusion type
          type: string
          description: Whether the set of states is inclusive or exclusive
          enum:
            - exclusive
            - inclusive
        states:
          title: States
          minItems: 1
          type: array
          description: The states that comprise the set
          xml:
            wrapped: true
          items:
            type: string
            x-gw-type: typekey.State
      description: >-
        A set of states that can be used either as an inclusive set or an
        exclusive set (Since 1.2.0)
      xml:
        name: ExclusiveStateSet
      x-gw-sinceVersion: 1.2.0
    account_GenericRelation:
      title: Generic relation
      required:
        - id
        - type
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The formatted name of the referenced element
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        jsonPath:
          title: JSON path
          type: string
          description: The path to the referenced element within the overall JSON document
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - none
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: A reference to a related element
      xml:
        name: GenericRelation
      x-gw-extensions:
        resourceReference: true
    account_GroupDetail:
      title: Group detail
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The name of the `Group`
        id:
          title: ID
          type: string
          description: The unique identifier of the `Group`
      description: Used to represent a reference to a `Group`
      xml:
        name: GroupDetail
    account_GroupReference:
      title: Group reference
      type: object
      properties:
        branchCode:
          title: Branch code
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The `branchCode` of the group
          x-gw-nullable: true
          x-gw-extensions:
            filterable: true
        displayName:
          title: Display name
          type: string
          description: The formatted name of the group
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        jsonPath:
          title: JSON path
          type: string
          description: The path to the referenced `Group` within the overall JSON document
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - none
        refid:
          title: Reference ID
          type: string
          description: >-
            A unique identifier given to the newly created element in the
            context of the current request
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: A reference to `Group` element (Since 1.2.0)
      xml:
        name: GroupReference
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        resourceReference: true
    account_LinkObject:
      title: Linked object
      type: object
      properties:
        href:
          title: HREF
          type: string
          description: The URL of the link
        methods:
          title: Methods
          type: array
          description: An array of HTTP method names that can be used with the link URL
          xml:
            wrapped: true
          items:
            type: string
      description: A standard HTTP link
      xml:
        name: LinkObject
    account_Links:
      title: Links
      type: object
      additionalProperties:
        $ref: '#/components/schemas/account_LinkObject'
      description: A set of named links
      xml:
        name: Links
    MergeAccountAttributes:
      title: Merge account attributes
      required:
        - account
      type: object
      properties:
        account:
          $ref: '#/components/schemas/account_SimpleReference'
      description: >-
        Details of the account that will be deleted after moving its policies,
        notes, contacts, and assignments to the merged account (Since 1.4.0)
      x-gw-sinceVersion: 1.4.0
    account_MetaObject:
      title: Meta object
      type: object
      properties:
        checksum:
          title: Checksum
          type: string
          description: The checksum of the element
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        links:
          $ref: '#/components/schemas/account_Links'
        refid:
          title: Reference ID
          type: string
          description: >-
            A unique identifier given to the newly created element in the
            context of the current request
        related:
          $ref: '#/components/schemas/account_RelatedCollections'
        type:
          title: Type
          type: string
          description: The type of element
      description: An element
      xml:
        name: MetaObject
    account_MonetaryAmount:
      title: Monetary amount
      required:
        - amount
        - currency
      type: object
      properties:
        amount:
          title: Amount
          type: string
          description: The decimal amount
          format: gw-bigdecimal
        currency:
          title: Currency
          type: string
          description: The currency for the amount
          x-gw-type: typekey.Currency
      description: A monetary amount that combines a decimal amount with a currency
      xml:
        name: MonetaryAmount
    MovePoliciesAttributes:
      title: Move policies attributes
      required:
        - policies
      type: object
      properties:
        policies:
          title: Policies
          maxItems: 25
          minItems: 1
          type: array
          description: >-
            An array of `Policy` references that represent the policies that
            should be moved to this account
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/account_SimpleReference'
      description: Details of the policies to move to this account (Since 1.2.0)
      x-gw-sinceVersion: 1.2.0
    account_Note:
      title: Note
      type: object
      properties:
        account:
          $ref: '#/components/schemas/account_SimpleReference'
        author:
          $ref: '#/components/schemas/account_SimpleReference'
        body:
          title: Body
          maxLength: 65000
          minLength: 1
          pattern: \S
          type: string
          description: The text of this note
          x-gw-extensions:
            defaultViews:
              - detail
            filterable: true
            requiredForCreate: true
        bodySummary:
          title: Body summary
          type: string
          description: >-
            A shorter summary of this note's `body` field, more suitable for
            displaying in a list of notes
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - summary
        confidential:
          title: Confidential
          type: boolean
          description: >-
            A `true` value for this field indicates that the note contains
            confidential information
        contingency:
          $ref: '#/components/schemas/account_SimpleReference'
        createdDate:
          title: Created date
          type: string
          description: The date and time that this `Note` was created
          format: date-time
          readOnly: true
        id:
          title: ID
          type: string
          description: Unique identifier of this `Note`
          readOnly: true
        job:
          $ref: '#/components/schemas/account_SimpleReference'
        policy:
          $ref: '#/components/schemas/account_SimpleReference'
        securityType:
          $ref: '#/components/schemas/account_TypeKeyReference'
        subject:
          title: Subject
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The subject of this note
          x-gw-nullable: true
          x-gw-extensions:
            filterable: true
            sortable: true
        topic:
          $ref: '#/components/schemas/account_TypeKeyReference'
        updateTime:
          title: Update time
          type: string
          description: The date and time when this `Note` was most recently updated
          format: date-time
          readOnly: true
          x-gw-extensions:
            sortable: true
      description: >-
        A `Note` is used to capture any sort of additional text that needs to be
        associated with another business object. A `Note` consists of a `body`
        that contains the actual text of the note, along with other fields the
        represent additional metadata about the note.
      xml:
        name: Note
    OfficialID:
      title: Official ID
      type: object
      properties:
        officialIDType:
          $ref: '#/components/schemas/account_TypeKeyReference'
        officialIDValue:
          title: Official ID value
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The actual identifier value
          x-gw-nullable: true
        state:
          $ref: '#/components/schemas/account_TypeKeyReference'
      description: >-
        An `OfficialID` represents a pairing of a particular jurisdiction with
        some form of official identifier applicable to that jurisdiction, such
        as a driver's license number or state tax ID number
    OfficialIDMap:
      title: Official ID map
      type: object
      additionalProperties:
        $ref: '#/components/schemas/OfficialID'
      description: >-
        A map of `OfficialID` values for various jurisdictions and types of
        identifier. The keys in the map will be of the form `<code>-<state>` or
        `<code>-ALL` for values that do not have an assigned `state`.
    account_PhoneNumber:
      title: Phone number
      required:
        - countryCode
        - number
      type: object
      properties:
        countryCode:
          $ref: '#/components/schemas/account_TypeKeyReference'
        displayName:
          title: Display name
          type: string
          description: The phone number formatted in a standardized way
          readOnly: true
        extension:
          title: Extension
          type: string
          description: The extension for the phone number
          x-gw-nullable: true
        number:
          title: Number
          type: string
          description: >-
            The actual phone number, including area code, but excluding the
            country code and extension
      description: >-
        A phone number, with different components of the number broken out as
        separate fields
      xml:
        name: PhoneNumber
    account_QueueDetail:
      title: Queue detail
      type: object
      properties:
        displayName:
          title: Display name
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: The name of the `Queue`
        id:
          title: ID
          type: string
          description: The unique identifier of the `Queue`
      description: Used to represent a reference to a `Queue`
      xml:
        name: QueueDetail
    account_ReferenceTableEntry:
      title: Reference table entry
      type: object
      properties:
        code:
          title: Code
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The code of the reference table entry
        description:
          title: Description
          maxLength: 1333
          minLength: 1
          pattern: \S
          type: string
          description: The description of the reference table entry
        id:
          title: ID
          type: string
          description: The unique identifier of this element
      description: >-
        A single element from a reference table. Reference tables typically
        represent things like standardized lists of codes.
      xml:
        name: ReferenceTableEntry
    account_RelatedCollection:
      title: Related collection
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: The number of elements included in the `data` array
        data:
          title: Data
          type: array
          description: The list of references to the related elements
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/account_SimpleReference'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements in the related set of elements. Only
            present if the `includeTotal` query parameter is used to request
            that the total be calculated for an included collection.
      description: >-
        A set of element references that are related to the element in some way.
        Used to link elements with their relations when a request is made using
        the `include` query parameter.
      xml:
        name: RelatedCollection
    account_RelatedCollections:
      title: Related collections
      type: object
      additionalProperties:
        $ref: '#/components/schemas/account_RelatedCollection'
      description: >-
        A set of `RelatedCollection` elements that contain references to
        elements included using the `include` query parameter on a request
      xml:
        name: RelatedCollections
    account_SimpleReference:
      title: Simple reference
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The formatted name of the element
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        jsonPath:
          title: JSON path
          type: string
          description: >-
            The path to the referenced element within the overall JSON document
            (Since 1.2.0)
          readOnly: true
          x-gw-sinceVersion: 1.2.0
          x-gw-extensions:
            defaultViews:
              - none
        refid:
          title: Reference ID
          type: string
          description: >-
            A unique identifier given to the newly created element in the
            context of the current request
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: A reference to an element
      xml:
        name: SimpleReference
      x-gw-extensions:
        resourceReference: true
    account_SpatialPoint:
      title: Spatial point
      required:
        - latitude
        - longitude
      type: object
      properties:
        latitude:
          title: Latitude
          type: string
          description: The latitude of the spatial point
          format: gw-bigdecimal
        longitude:
          title: Longitude
          type: string
          description: The longitude of the spatial point
          format: gw-bigdecimal
      description: An object that combines a latitude with a longitude (Since 1.2.0)
      xml:
        name: SpatialPoint
      x-gw-sinceVersion: 1.2.0
    account_TypeFilter:
      title: TypeFilter
      type: object
      properties:
        description:
          title: Description
          type: string
          description: The description of this `TypeFilter`
        name:
          title: Name
          type: string
          description: The name of this `TypeFilter`
        typeKeys:
          title: TypeKeys
          type: array
          description: >-
            The `code` values for the `TypeKeys` that are included by this
            `TypeFilter`
          xml:
            wrapped: true
          items:
            type: string
          x-gw-extensions:
            defaultViews:
              - detail
      description: >-
        A `TypeFilter` represents a filtered set of the `TypeKey` values from a
        `TypeList`
      xml:
        name: TypeFilter
    account_TypeKey:
      title: TypeKey
      type: object
      properties:
        categories:
          title: Categories
          type: array
          description: >-
            The categories that this `TypeKey` belongs to. Categories are
            formatted by combining the name of the `TypeList` with the `code`
            for its `TypeKey`, separated by a `.` character.
          xml:
            wrapped: true
          items:
            type: string
          x-gw-extensions:
            defaultViews:
              - none
        code:
          title: Code
          type: string
          description: >-
            The code for this `TypeKey`. `TypeKey` codes are unique within a
            `TypeList`.
        description:
          title: Description
          type: string
          description: The longer description of this `TypeKey`
        name:
          title: Name
          type: string
          description: The human-readable name of this `TypeKey`
        priority:
          title: Priority
          type: integer
          description: >-
            The order of this `TypeKey` relative to other `TypeKeys` in the same
            `TypeList`. A `TypeKey` with a lower `priority` will appear before a
            `TypeKey` with a higher priority when the values for a `TypeList`
            are presented in sorted order.
        retired:
          title: Retried
          type: boolean
          description: >-
            A `true` value for this field indicates that the `TypeKey` value
            should no longer be used. Retired `TypeKey` values are retained only
            for the sake of historical data that may already be using the
            `TypeKey`.
          x-gw-extensions:
            defaultViews:
              - none
      description: >-
        A `TypeKey` represents one of the possible enumerated values of a
        `TypeList`
      xml:
        name: TypeKey
    account_TypeKeyReference:
      title: TypeKey reference
      required:
        - code
      type: object
      properties:
        code:
          title: Code
          type: string
          description: The `code` of the `TypeKey`
        name:
          title: Name
          type: string
          description: The `name` of the `TypeKey`
      description: >-
        A reference to a `TypeKey` element that defines an enumerated value from
        a `TypeList`
      xml:
        name: TypeKeyReference
    account_TypeList:
      title: TypeList
      type: object
      properties:
        description:
          title: Description
          type: string
          description: The description of this `TypeList`
        name:
          title: Name
          type: string
          description: The name of this `TypeList`
          x-gw-extensions:
            filterable: true
            sortable: true
        typeFilters:
          title: TypeFilters
          type: array
          description: >-
            The set of `TypeFilters` available on this `TypeList`. A
            `TypeFilter` represents a filtered subset of the `TypeKeys` in this
            `TypeList`.
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/account_TypeFilter'
          x-gw-extensions:
            defaultViews:
              - detail
        typeKeys:
          title: TypeKeys
          type: array
          description: >-
            The list of `TypeKeys` available on this `TypeList`. A `TypeKey`
            represents one of the enumerated values that comprise this
            `TypeList`.
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/account_TypeKey'
          x-gw-extensions:
            defaultViews:
              - detail
      description: A `TypeList` represents a list of enumerated `TypeKey` values
      xml:
        name: TypeList
    account_UWIssueTypeReference:
      title: Underwriting issue type reference
      type: object
      properties:
        code:
          title: Code
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The `code` of the `UWIssueType`
          x-gw-extensions:
            sortable: true
        displayName:
          title: Display name
          type: string
          description: The formatted name of the `UWIssueType`
        id:
          title: ID
          type: string
          description: The unique identifier of this element
        jsonPath:
          title: JSON path
          type: string
          description: >-
            The path to the referenced `UWIssueType` within the overall JSON
            document
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - none
        refid:
          title: Reference ID
          type: string
          description: >-
            A unique identifier given to the newly created element in the
            context of the current request
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: >-
        A reference to a `UWIssueType` that represents a type of underwriting
        issue (Since 1.2.0)
      xml:
        name: UWIssueTypeReference
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        resourceReference: true
    admin_Activity:
      title: Activity
      type: object
      properties:
        activityPattern:
          title: Activity pattern
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The code of the `ActivityPattern` used to create this activity and
            set its initial values
          x-gw-extensions:
            createOnly: true
        activityType:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        approvalIssue:
          title: Approval issue
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The reason approval is needed. Only applicable to activities with an
            `activityType` of `approval`.
        approvalRationale:
          title: Approval rationale
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: >-
            Rationale for approving or rejecting this activity. Only applicable
            to activities with an `activityType` of `approval`.
        approved:
          title: Approved
          type: boolean
          description: >-
            This field is `true` if this activity has been approved, `false` if
            this activity has been rejected, and omitted otherwise. Only
            applicable to activities with an `activityType` of `approval`.
          readOnly: true
        assignedByUser:
          $ref: '#/components/schemas/admin_SimpleReference'
        assignedGroup:
          $ref: '#/components/schemas/admin_SimpleReference'
        assignedQueue:
          $ref: '#/components/schemas/admin_SimpleReference'
        assignedUser:
          $ref: '#/components/schemas/admin_SimpleReference'
        assignmentStatus:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        associatedRole:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        closeDate:
          title: Close date
          type: string
          description: >-
            The date and time when this activity was completed, skipped,
            approved, or rejected
          format: date-time
          readOnly: true
          x-gw-extensions:
            filterable: true
        closeUser:
          $ref: '#/components/schemas/admin_SimpleReference'
        createTime:
          title: Create time
          type: string
          description: The date and time when this `Activity` was created (Since 1.1.0)
          format: date-time
          readOnly: true
          x-gw-sinceVersion: 1.1.0
        description:
          title: Description
          maxLength: 1333
          minLength: 1
          pattern: \S
          type: string
          description: The description of this activity
          x-gw-nullable: true
          x-gw-extensions:
            defaultViews:
              - detail
        dueDate:
          title: Due date
          type: string
          description: >-
            Date and time by which a person should complete the activity. If not
            completed by this time, the activity is considered overdue. Not
            applicable to activities that represent events rather than tasks.
          format: date-time
          x-gw-nullable: true
          x-gw-extensions:
            filterable: true
            sortable: true
        endDate:
          title: End date
          type: string
          description: >-
            Date and time at which the activity is expected to end. Only
            applicable to activities that represent events.
          format: date-time
          x-gw-nullable: true
        escalated:
          title: Escalated
          type: boolean
          description: >-
            A `true` value for this field indicates that the activity has been
            escalated
          readOnly: true
          x-gw-extensions:
            filterable: true
            sortable: true
        escalationDate:
          title: Escalation date
          type: string
          description: >-
            Date and time at which this activity will be escalated if it has not
            yet been completed
          format: date-time
          x-gw-nullable: true
        externallyOwned:
          title: Externally owned
          type: boolean
          description: >-
            A `true` value for this field indicates that the activity is owned
            by a user or group outside of the insurer
          x-gw-extensions:
            filterable: true
        id:
          title: ID
          type: string
          description: The unique identifier of this `Activity`
          readOnly: true
        initialAssignment:
          $ref: '#/components/schemas/admin_Assignee'
        mandatory:
          title: Mandatory
          type: boolean
          description: >-
            A `true` value for this field indicates that the activity is
            mandatory and cannot be skipped
        priority:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        recurring:
          title: Recurring
          type: boolean
          description: A `true` value indicates that this activity is recurring
        startDate:
          title: Start date
          type: string
          description: >-
            Date and time at which the activity is scheduled to begin. Only
            applicable to activities that represent events.
          format: date-time
          x-gw-nullable: true
        status:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        subject:
          title: Subject
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: A brief title for the activity
          x-gw-extensions:
            filterable: true
            sortable: true
      description: >-
        An `Activity` is an assignable item that represents a task to be done, a
        decision to be made, or information to be aware of
      xml:
        name: Activity
    admin_ActivityPattern:
      title: Activity pattern
      type: object
      properties:
        activityClass:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        activityType:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        category:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        code:
          title: Code
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The code that uniquely identifies this `ActivityPattern`
          x-gw-extensions:
            createOnly: true
            sortable: true
        description:
          title: Description
          maxLength: 1333
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The default `description` for activities created from this activity
            pattern
        dueDate:
          title: Due date
          type: string
          description: >-
            The default `dueDate` for activities created from this activity
            pattern, calculated based on the current date and time
          format: date-time
        escalationDate:
          title: Escalation date
          type: string
          description: >-
            The default `escalationDate` for activities created from this
            activity pattern, calculated based on the current date and time
          format: date-time
        id:
          title: ID
          type: string
          description: The unique identifier of this `ActivityPattern`
        mandatory:
          title: Mandatory
          type: boolean
          description: >-
            The default `mandatory` value for activities created from this
            activity pattern
        patternLevel:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        priority:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        recurring:
          title: Recurring
          type: boolean
          description: >-
            The default `recurring` value for activities created from this
            activity pattern
        subject:
          title: Subject
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The default `subject` for activities created from this activity
            pattern
      description: >-
        An `ActivityPattern` is a template for an activity, and is used to
        create a new activity and set defaults for some of its fields
      xml:
        name: ActivityPattern
    admin_Address:
      title: Address
      type: object
      properties:
        CEDEX:
          title: CEDEX
          maxLength: 2
          type: string
          description: >-
            The CEDEX bureau of the address. Only applicable in certain
            countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        addressLine1:
          title: Address line 1
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The first line of the address
          x-gw-nullable: true
        addressLine1Kanji:
          title: Address line 1 kanji
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The kanji version of the first line of the address. Only applicable
            in certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        addressLine2:
          title: Address line 2
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The second line of the address
          x-gw-nullable: true
        addressLine2Kanji:
          title: Address line 2 kanji
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The kanji version of the second line of the address. Only applicable
            in certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        addressLine3:
          title: Address line 3
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The third line of the address
          x-gw-nullable: true
        addressType:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        area:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        city:
          title: City
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The city of the address
          x-gw-nullable: true
        cityKanji:
          title: City kanji
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The kanji version of the city of the address. Only applicable in
            certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        country:
          title: Country
          type: string
          description: >-
            The country of the address. The value of the `country` field will
            affect which other fields on the `Address` are applicable.
          x-gw-nullable: true
          x-gw-type: typekey.Country
        county:
          title: County
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The county of the address. Only applicable in certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        department:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        description:
          title: Description
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The description of the address (Since 1.2.0)
          x-gw-nullable: true
          x-gw-sinceVersion: 1.2.0
        displayName:
          title: Display name
          type: string
          description: >-
            The formatted value of the address represented by this `Address`,
            including all standard fields for the address's country
          readOnly: true
        emirate:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        id:
          title: ID
          type: string
          description: The unique identifier of this `Address`
          readOnly: true
        island:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        oblast:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        parish:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        postalCode:
          title: Postal code
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The postal code of the address. Only applicable in certain
            countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        prefecture:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        province:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        spatialPoint:
          $ref: '#/components/schemas/admin_SpatialPoint'
        state:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        validUntil:
          title: Valid until
          type: string
          description: The date and time that the address is valid until (Since 1.2.0)
          format: date-time
          x-gw-nullable: true
          x-gw-sinceVersion: 1.2.0
      description: >-
        An `Address` represents a postal address. The fields available on an
        `Address` will depend upon the `country` value for the `Address`.
      xml:
        name: Address
      x-gw-extensions:
        discriminatorProperty: country
    AffinityGroup:
      title: Affinity group
      type: object
      properties:
        affinityGroupType:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        description:
          title: Description
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: Description of the affinity group
          x-gw-nullable: true
        endDate:
          title: End date
          type: string
          description: Affinity group end date
          format: date-time
          x-gw-nullable: true
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        jurisdictions:
          title: Jurisdictions
          type: array
          description: Jurisdictions that this affinity group is available to
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/admin_TypeKeyReference'
        name:
          title: Name
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The name of this affinity group
          x-gw-extensions:
            filterable: true
            requiredForCreate: true
            sortable: true
        nameKanji:
          title: Name kanji
          maxLength: 100
          minLength: 1
          pattern: \S
          type: string
          description: The kanji version of the name of this affinity group
          x-gw-nullable: true
        organization:
          $ref: '#/components/schemas/admin_SimpleReference'
        primaryContactFirstName:
          title: Primary contact first name
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: First name of primary contact in this affinity group
          x-gw-nullable: true
        primaryContactLastName:
          title: Primary contact last name
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: Last name of primary contact in this affinity group
          x-gw-nullable: true
        primaryContactPhone:
          $ref: '#/components/schemas/admin_PhoneNumber'
        products:
          title: Products
          type: array
          description: Products associated with this affinity group
          xml:
            wrapped: true
          items:
            type: string
        startDate:
          title: Start date
          type: string
          description: Affinity group start date
          format: date-time
          x-gw-nullable: true
          x-gw-extensions:
            sortable: true
      description: >-
        Groups and associations eligible for dividends or special rating (Since
        1.5.0)
      x-gw-sinceVersion: 1.5.0
    AffinityGroupProducerCode:
      title: Affinity group producer code
      type: object
      properties:
        id:
          title: ID
          type: string
          description: The unique identifier of this affinity group producer code
          readOnly: true
        producerCode:
          $ref: '#/components/schemas/admin_SimpleReference'
      description: >-
        An association between an affinity group and a producer code (Since
        1.5.0)
      x-gw-sinceVersion: 1.5.0
    AssignableQueue:
      title: Assignable queue
      type: object
      properties:
        description:
          title: Description
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The description of what this queue is for
          x-gw-nullable: true
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        name:
          title: Name
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The name of this queue
          x-gw-extensions:
            filterable: true
            requiredForCreate: true
            sortable: true
        subGroupVisible:
          title: Sub group visible
          type: boolean
          description: >-
            True if the queue is visible from sub-groups of the group to which
            it belongs
          x-gw-extensions:
            filterable: true
            requiredForCreate: true
            sortable: true
      description: A queue to which assignable entities can be assigned (Since 1.5.0)
      x-gw-sinceVersion: 1.5.0
    admin_Assignee:
      title: Assignee
      type: object
      properties:
        assigneeId:
          title: Assignee ID
          type: string
          description: Unique ID to reference this `Assignee` for includes (Since 1.4.0)
          readOnly: true
          x-gw-sinceVersion: 1.4.0
        autoAssign:
          title: Auto assign
          type: boolean
          description: >-
            Set to `true` to indicate the assignment should be done
            automatically by the system. Cannot be combined with any other
            fields.
        groupId:
          title: Group ID
          type: string
          description: >-
            The ID of the `Group` that the resource should be assigned to. If
            specified without the `userId` field, the `User` within the `Group`
            is selected by assignment rules. If specified along with the
            `userId` field, that specific `User` is assigned the element.
        name:
          title: Name
          type: string
          description: >-
            A human-readable name for the type of assignment that this
            `Assignee` represents
          readOnly: true
        queueId:
          title: Queue ID
          type: string
          description: >-
            The ID of the `Queue` that the resource should be assigned to.
            Cannot be combined with any other fields.
        role:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        userId:
          title: User ID
          type: string
          description: >-
            The ID of the `User` that the resource should be assigned to. The
            `groupId` field must also be specified if the `userId` field is
            specified, and the `User` must be a member of that `Group` and have
            permission to be assigned the element.
      description: >-
        An `Assignee` represents the target of an assignment action, such as a
        user/group combination, assignment queue, or automatic rule-based
        assignment
      xml:
        name: Assignee
    admin_ClaimsIntegrated:
      title: Claims integrated
      type: object
      properties:
        ccPolicySystemId:
          title: CC policy system ID
          type: string
          description: Integration ID for use in ClaimCenter (Since 1.5.0)
          readOnly: true
          x-gw-sinceVersion: 1.5.0
          x-gw-extensions:
            defaultViews:
              - none
      description: Claims integrated entity
      xml:
        name: ClaimsIntegrated
    CommissionPlan:
      title: Commission plan
      type: object
      properties:
        commissionPlanId:
          title: Commission plan ID
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The ID of the commission plan in the linked billing system
          readOnly: true
        currency:
          $ref: '#/components/schemas/admin_TypeKeyReference'
      description: >-
        A plan for how commissions are paid, configured for a particular
        producer code (Since 1.2.0)
      x-gw-sinceVersion: 1.2.0
    admin_Contact:
      title: Contact
      type: object
      properties:
        lastName:
          title: Last name
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The person's last name. Only applicable for a `Contact` that
            represents a person.
          x-gw-nullable: true
          x-gw-extensions:
            entitySubtype: Person
        primaryPhoneType:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        displayName:
          title: Display name
          type: string
          description: >-
            A formatted representation of the full name for this `Contact',
            including all applicable fields such as `firstName` or `lastName`
          readOnly: true
          x-gw-nullable: true
        companyName:
          title: Company name
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The name of the company represented by this `Contact`. Only
            applicable for a `Contact` that represents a company.
          x-gw-extensions:
            entitySubtype: Company
        homePhone:
          $ref: '#/components/schemas/admin_PhoneNumber'
        emailAddress1:
          title: E-mail address 1
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The contact's primary e-mail address
          x-gw-nullable: true
        externalId:
          title: External ID
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: >-
            A unique identifier assigned by the application for use when the
            `addressBookUID` field is null
          x-gw-extensions:
            filterable: true
        dateOfBirth:
          title: Date of birth
          type: string
          description: >-
            The person's date of birth. Only applicable for a `Contact` that
            represents a person.
          format: date
          x-gw-nullable: true
          x-gw-extensions:
            before: now
            entitySubtype: Person
        emailAddress2:
          title: E-mail address 2
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The contact's secondary e-mail address
          x-gw-nullable: true
        firstName:
          title: First name
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The persons's first name. Only applicable for a `Contact` that
            represents a person.
          x-gw-nullable: true
          x-gw-extensions:
            entitySubtype: Person
        primaryPhone:
          title: Primary phone
          type: string
          description: >-
            The contact's primary phone number, as determined by the type of
            phone number selected in the `primaryPhoneType` field
          readOnly: true
        addressBookUID:
          title: Address book UID
          maxLength: 64
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The unique ID of this `Contact` within the contact management
            system. Only applicable if the `Contact` has been linked to a
            contact management system.
          x-gw-nullable: true
        subtype:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        taxId:
          title: Tax ID
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: The contact's tax ID
        workPhone:
          $ref: '#/components/schemas/admin_PhoneNumber'
        id:
          title: ID
          type: string
          description: The unique identifier of this `Contact`
          readOnly: true
        primaryAddress:
          $ref: '#/components/schemas/admin_Address'
        primaryLocale:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        cellPhone:
          $ref: '#/components/schemas/admin_PhoneNumber'
        preferred:
          title: Preferred
          type: boolean
          description: >-
            A `true` value for this field indicates that the vendor is one of
            the insurer's preferred vendors. Only applicable for a `Contact`
            that represents a vendor.
          x-gw-nullable: true
          x-gw-extensions:
            entitySubtype:
              - CompanyVendor
              - PersonVendor
        primaryLanguage:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        ccPolicySystemId:
          title: CC policy system ID
          type: string
          description: Integration ID for use in ClaimCenter (Since 1.5.0)
          readOnly: true
          x-gw-sinceVersion: 1.5.0
          x-gw-extensions:
            defaultViews:
              - none
      description: A `Contact` represents a person or company
      xml:
        name: Contact
    admin_Document:
      title: Document
      type: object
      properties:
        account:
          $ref: '#/components/schemas/admin_SimpleReference'
        author:
          title: Author
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The name of the person who created this document
          x-gw-nullable: true
        contingency:
          $ref: '#/components/schemas/admin_SimpleReference'
        dateModified:
          title: Date modified
          type: string
          description: The date and time that this `Document` was most recently updated
          format: date-time
          readOnly: true
          x-gw-extensions:
            sortable: true
        description:
          title: Description
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: A description of this document
          x-gw-nullable: true
        docUID:
          title: Document UID
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The unique identifier for this `Document` in the linked document
            management system. The exact format of the identifier depends upon
            the specifics of the document management system the application is
            linked to.
          x-gw-extensions:
            createOnly: true
            defaultViews:
              - detail
        id:
          title: ID
          type: string
          description: The unique identifier of this `Document`
          readOnly: true
        inbound:
          title: Inbound
          type: boolean
          description: >-
            This field indicates whether this document is considered to be
            inbound, outbound, or neither
          x-gw-nullable: true
        job:
          $ref: '#/components/schemas/admin_SimpleReference'
        language:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        mimeType:
          title: MIME type
          maxLength: 80
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The MIME type of this document, such as `application/msword` for a
            Microsoft Word document
        name:
          title: Name
          maxLength: 80
          minLength: 1
          pattern: \S
          type: string
          description: The name of this document
          x-gw-extensions:
            filterable: true
            requiredForCreate: true
            sortable: true
        obsolete:
          title: Obsolete
          type: boolean
          description: >-
            Setting this field to `true` indicates that the information in this
            document can no longer be relied upon to be current and relevant.
            This is often used instead of deletion to preserve history.
          x-gw-nullable: true
        policy:
          $ref: '#/components/schemas/admin_SimpleReference'
        recipient:
          title: Recipient
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The name of the intended recipient of this document
          x-gw-nullable: true
        section:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        securityType:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        status:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        type:
          $ref: '#/components/schemas/admin_TypeKeyReference'
      description: >-
        A `Document` represents a document within the application, which can
        have additional metadata such as the author of the document or a
        specific security level. The actual contents of the document are
        generally stored in a separate document management system that this
        application is linked to. (Since 1.1.0)
      xml:
        name: Document
      x-gw-sinceVersion: 1.1.0
    admin_DocumentContent:
      title: Document content
      type: object
      properties:
        contents:
          title: Contents
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          description: The contents of this document as a Base64-encoded string
          format: byte
          readOnly: true
        responseMimeType:
          title: Response MIME type
          type: string
          description: >-
            The MIME type of this document's contents, such as
            `application/msword` for a Microsoft Word document
          readOnly: true
        url:
          title: URL
          type: string
          description: >-
            The URL of this document within the linked document management
            system
          readOnly: true
      description: The contents of a `Document` (Since 1.1.0)
      xml:
        name: DocumentContent
      x-gw-sinceVersion: 1.1.0
    admin_ExclusiveStateSet:
      title: Exclusive state set
      required:
        - inclusionType
        - states
      type: object
      properties:
        inclusionType:
          title: Inclusion type
          type: string
          description: Whether the set of states is inclusive or exclusive
          enum:
            - exclusive
            - inclusive
        states:
          title: States
          minItems: 1
          type: array
          description: The states that comprise the set
          xml:
            wrapped: true
          items:
            type: string
            x-gw-type: typekey.State
      description: >-
        A set of states that can be used either as an inclusive set or an
        exclusive set (Since 1.2.0)
      xml:
        name: ExclusiveStateSet
      x-gw-sinceVersion: 1.2.0
    admin_GenericRelation:
      title: Generic relation
      required:
        - id
        - type
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The formatted name of the referenced element
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        jsonPath:
          title: JSON path
          type: string
          description: The path to the referenced element within the overall JSON document
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - none
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: A reference to a related element
      xml:
        name: GenericRelation
      x-gw-extensions:
        resourceReference: true
    Group:
      title: Group
      type: object
      properties:
        branchCode:
          title: Branch code
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: >-
            The code that identifies an internal carrier group as a branch
            (Since 1.5.0)
          x-gw-sinceVersion: 1.5.0
        description:
          title: Group description
          maxLength: 1333
          minLength: 1
          pattern: \S
          type: string
          description: A description of the group (Since 1.5.0)
          x-gw-nullable: true
          x-gw-sinceVersion: 1.5.0
        displayName:
          title: Display name
          type: string
          description: The formatted name of this group
          readOnly: true
        groupType:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        id:
          title: ID
          type: string
          description: The unique identifier of this group
          readOnly: true
        loadFactor:
          title: Load factor
          type: integer
          description: >-
            Percentage value of normal workload to be given to this group. This
            is used for round-robin assignment. (Since 1.5.0)
          x-gw-nullable: true
          x-gw-sinceVersion: 1.5.0
          x-gw-extensions:
            filterable: true
        name:
          title: Name
          maxLength: 100
          minLength: 1
          pattern: \S
          type: string
          description: The name of this group
          x-gw-extensions:
            filterable: true
            requiredForCreate: true
            sortable: true
        organization:
          $ref: '#/components/schemas/admin_SimpleReference'
        parent:
          $ref: '#/components/schemas/admin_SimpleReference'
        securityZone:
          $ref: '#/components/schemas/admin_SimpleReference'
        supervisor:
          $ref: '#/components/schemas/admin_SimpleReference'
      description: A named group within the system (Since 1.4.0)
      x-gw-sinceVersion: 1.4.0
    admin_GroupDetail:
      title: Group detail
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The name of the `Group`
        id:
          title: ID
          type: string
          description: The unique identifier of the `Group`
      description: Used to represent a reference to a `Group`
      xml:
        name: GroupDetail
    GroupProducerCode:
      title: Group producer code
      type: object
      properties:
        branch:
          $ref: '#/components/schemas/admin_GroupReference'
        code:
          title: Code
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The code assigned to this producer code
          x-gw-extensions:
            filterable: true
            readOnly: true
            sortable: true
        description:
          title: Description
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: A description of this producer code
          readOnly: true
          x-gw-nullable: true
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        producerCode:
          $ref: '#/components/schemas/admin_SimpleReference'
        producerStatus:
          $ref: '#/components/schemas/admin_TypeKeyReference'
      description: >-
        Details of a producer code that has been associated with a group (Since
        1.5.0)
      x-gw-sinceVersion: 1.5.0
    admin_GroupReference:
      title: Group reference
      type: object
      properties:
        branchCode:
          title: Branch code
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The `branchCode` of the group
          x-gw-nullable: true
          x-gw-extensions:
            filterable: true
        displayName:
          title: Display name
          type: string
          description: The formatted name of the group
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        jsonPath:
          title: JSON path
          type: string
          description: The path to the referenced `Group` within the overall JSON document
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - none
        refid:
          title: Reference ID
          type: string
          description: >-
            A unique identifier given to the newly created element in the
            context of the current request
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: A reference to `Group` element (Since 1.2.0)
      xml:
        name: GroupReference
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        resourceReference: true
    GroupUser:
      title: Details about a user's involvement in a group
      type: object
      properties:
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        loadFactor:
          title: Load factor
          maximum: 100
          minimum: 0
          type: integer
          description: >-
            Percentage value of normal workload to be given to this user in this
            group
          x-gw-nullable: true
          x-gw-extensions:
            filterable: true
        loadFactorType:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        manager:
          title: Manager
          type: boolean
          description: >-
            Flag indicating whether the user has permission to see activity
            within the group
          x-gw-nullable: false
          x-gw-extensions:
            filterable: true
        member:
          title: Member
          type: boolean
          description: >-
            Flag indicating whether the user is a working member of the group
            (for purposes of work assignment, for example), as opposed to simply
            being associated with the group as a manager or other auxiliary
            person
          x-gw-nullable: false
          x-gw-extensions:
            filterable: true
        user:
          $ref: '#/components/schemas/admin_SimpleReference'
      description: Details about a user's involvement in a group (Since 1.4.0)
      x-gw-sinceVersion: 1.4.0
    admin_LinkObject:
      title: Linked object
      type: object
      properties:
        href:
          title: HREF
          type: string
          description: The URL of the link
        methods:
          title: Methods
          type: array
          description: An array of HTTP method names that can be used with the link URL
          xml:
            wrapped: true
          items:
            type: string
      description: A standard HTTP link
      xml:
        name: LinkObject
    admin_Links:
      title: Links
      type: object
      additionalProperties:
        $ref: '#/components/schemas/admin_LinkObject'
      description: A set of named links
      xml:
        name: Links
    admin_MetaObject:
      title: Meta object
      type: object
      properties:
        checksum:
          title: Checksum
          type: string
          description: The checksum of the element
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        links:
          $ref: '#/components/schemas/admin_Links'
        refid:
          title: Reference ID
          type: string
          description: >-
            A unique identifier given to the newly created element in the
            context of the current request
        related:
          $ref: '#/components/schemas/admin_RelatedCollections'
        type:
          title: Type
          type: string
          description: The type of element
      description: An element
      xml:
        name: MetaObject
    admin_MonetaryAmount:
      title: Monetary amount
      required:
        - amount
        - currency
      type: object
      properties:
        amount:
          title: Amount
          type: string
          description: The decimal amount
          format: gw-bigdecimal
        currency:
          title: Currency
          type: string
          description: The currency for the amount
          x-gw-type: typekey.Currency
      description: A monetary amount that combines a decimal amount with a currency
      xml:
        name: MonetaryAmount
    admin_Note:
      title: Note
      type: object
      properties:
        account:
          $ref: '#/components/schemas/admin_SimpleReference'
        author:
          $ref: '#/components/schemas/admin_SimpleReference'
        body:
          title: Body
          maxLength: 65000
          minLength: 1
          pattern: \S
          type: string
          description: The text of this note
          x-gw-extensions:
            defaultViews:
              - detail
            filterable: true
            requiredForCreate: true
        bodySummary:
          title: Body summary
          type: string
          description: >-
            A shorter summary of this note's `body` field, more suitable for
            displaying in a list of notes
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - summary
        confidential:
          title: Confidential
          type: boolean
          description: >-
            A `true` value for this field indicates that the note contains
            confidential information
        contingency:
          $ref: '#/components/schemas/admin_SimpleReference'
        createdDate:
          title: Created date
          type: string
          description: The date and time that this `Note` was created
          format: date-time
          readOnly: true
        id:
          title: ID
          type: string
          description: Unique identifier of this `Note`
          readOnly: true
        job:
          $ref: '#/components/schemas/admin_SimpleReference'
        policy:
          $ref: '#/components/schemas/admin_SimpleReference'
        securityType:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        subject:
          title: Subject
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The subject of this note
          x-gw-nullable: true
          x-gw-extensions:
            filterable: true
            sortable: true
        topic:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        updateTime:
          title: Update time
          type: string
          description: The date and time when this `Note` was most recently updated
          format: date-time
          readOnly: true
          x-gw-extensions:
            sortable: true
      description: >-
        A `Note` is used to capture any sort of additional text that needs to be
        associated with another business object. A `Note` consists of a `body`
        that contains the actual text of the note, along with other fields the
        represent additional metadata about the note.
      xml:
        name: Note
    Organization:
      title: Organization
      type: object
      properties:
        carrier:
          title: Carrier
          type: boolean
          description: >-
            A `true` value indicates that this organization represents the
            insurer rather than an external organization. Only one
            `Organization` within the system can have this field set to `true`.
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - none
        contact:
          $ref: '#/components/schemas/admin_Contact'
        displayName:
          title: Display name
          type: string
          description: The formatted name of the `Organization`
          readOnly: true
        groupDescription:
          title: Group description
          maxLength: 1333
          minLength: 1
          pattern: \S
          type: string
          description: A description of the root group for this organization
          x-gw-nullable: true
        groupLoadFactor:
          title: Group load factor
          type: integer
          description: >-
            The percentage of a normal workload given to the root group for this
            organization. Load factors are used for automated assignment.
          x-gw-nullable: true
        groupSecurityZone:
          $ref: '#/components/schemas/admin_SimpleReference'
        groupSupervisor:
          $ref: '#/components/schemas/admin_SimpleReference'
        id:
          title: ID
          type: string
          description: The unique identifier of the `Organization`
        masterAdmin:
          title: Master admin
          type: boolean
          description: >-
            A `true` value indicates that this `Organization` has administrator
            powers over all other `Organization` elements in the system
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - none
        name:
          title: Name
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The name of the organization
          x-gw-extensions:
            filterable: true
            requiredForCreate: true
            sortable: true
        producerStatus:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        rootGroup:
          $ref: '#/components/schemas/admin_SimpleReference'
        tier:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        type:
          $ref: '#/components/schemas/admin_TypeKeyReference'
      description: >-
        An `Organization` represents an organization that can contain groups and
        users. One `Organization` is used to represent the insurer, while other
        `Organization` elements represent external organizations, such as
        third-party agencies. (Since 1.2.0)
      x-gw-sinceVersion: 1.2.0
    admin_PhoneNumber:
      title: Phone number
      required:
        - countryCode
        - number
      type: object
      properties:
        countryCode:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        displayName:
          title: Display name
          type: string
          description: The phone number formatted in a standardized way
          readOnly: true
        extension:
          title: Extension
          type: string
          description: The extension for the phone number
          x-gw-nullable: true
        number:
          title: Number
          type: string
          description: >-
            The actual phone number, including area code, but excluding the
            country code and extension
      description: >-
        A phone number, with different components of the number broken out as
        separate fields
      xml:
        name: PhoneNumber
    ProducerCode:
      title: Producer code
      type: object
      properties:
        address:
          $ref: '#/components/schemas/admin_Address'
        appointmentDate:
          title: Appointment date
          type: string
          description: >-
            The date and time when the insurer's relationship with the producer
            began
          format: date-time
          x-gw-nullable: true
          x-gw-extensions:
            defaultViews:
              - detail
        branch:
          $ref: '#/components/schemas/admin_GroupReference'
        code:
          title: Code
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The code assigned to this producer code
          x-gw-extensions:
            filterable: true
            requiredForCreate: true
            sortable: true
        commissionPlans:
          title: Commission plans
          minItems: 1
          type: array
          description: >-
            A list of the commission plans available for use with this producer
            code
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/CommissionPlan'
          x-gw-extensions:
            defaultViews:
              - detail
        description:
          title: Description
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: A description of this producer code
          x-gw-nullable: true
        displayName:
          title: Display name
          type: string
          description: The formatted name of this `ProducerCode`
          readOnly: true
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        organization:
          $ref: '#/components/schemas/admin_SimpleReference'
        parent:
          $ref: '#/components/schemas/admin_SimpleReference'
        preferredUnderwriter:
          $ref: '#/components/schemas/admin_SimpleReference'
        producerStatus:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        roles:
          title: Roles
          minItems: 1
          type: array
          description: >-
            A list of references to `Role` elements that define permissions
            granted by this producer code. Users that are configured to use
            producer code security must have permission both via their own roles
            and via the applicable producer code's roles in order to read or
            write a job or policy.
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/admin_SimpleReference'
          x-gw-extensions:
            defaultViews:
              - detail
            requiredForCreate: true
        terminationDate:
          title: Termination date
          type: string
          description: >-
            The date that the insurer's relationship with this producer ended or
            will be terminated
          format: date-time
          x-gw-nullable: true
          x-gw-extensions:
            defaultViews:
              - detail
      description: >-
        A `ProducerCode` represents a specific set of commission options,
        assignment preferences, and permissions granted to a particular producer
        (Since 1.2.0)
      x-gw-sinceVersion: 1.2.0
    admin_QueueDetail:
      title: Queue detail
      type: object
      properties:
        displayName:
          title: Display name
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: The name of the `Queue`
        id:
          title: ID
          type: string
          description: The unique identifier of the `Queue`
      description: Used to represent a reference to a `Queue`
      xml:
        name: QueueDetail
    admin_ReferenceTableEntry:
      title: Reference table entry
      type: object
      properties:
        code:
          title: Code
          type: string
          description: The code of the reference table entry
        description:
          title: Description
          type: string
          description: The description of the reference table entry
        id:
          title: ID
          type: string
          description: The unique identifier of this element
      description: >-
        A single element from a reference table. Reference tables typically
        represent things like standardized lists of codes.
      xml:
        name: ReferenceTableEntry
    admin_RelatedCollection:
      title: Related collection
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: The number of elements included in the `data` array
        data:
          title: Data
          type: array
          description: The list of references to the related elements
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/admin_SimpleReference'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements in the related set of elements. Only
            present if the `includeTotal` query parameter is used to request
            that the total be calculated for an included collection.
      description: >-
        A set of element references that are related to the element in some way.
        Used to link elements with their relations when a request is made using
        the `include` query parameter.
      xml:
        name: RelatedCollection
    admin_RelatedCollections:
      title: Related collections
      type: object
      additionalProperties:
        $ref: '#/components/schemas/admin_RelatedCollection'
      description: >-
        A set of `RelatedCollection` elements that contain references to
        elements included using the `include` query parameter on a request
      xml:
        name: RelatedCollections
    Role:
      title: Role
      type: object
      properties:
        carrierInternal:
          title: Carrier internal
          type: boolean
          description: >-
            A `true` value indicates that the role is applicable to users
            internal to the carrier organization
          x-gw-extensions:
            filterable: true
        description:
          title: Description
          maxLength: 4096
          minLength: 1
          pattern: \S
          type: string
          description: Detailed description of the role
          x-gw-nullable: true
        displayName:
          title: Display name
          type: string
          description: The formatted name of the role
          readOnly: true
        id:
          title: ID
          type: string
          description: The unique identifier of the `Role`
          readOnly: true
        name:
          title: Name
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The name of the role
          x-gw-extensions:
            filterable: true
            sortable: true
        roleType:
          $ref: '#/components/schemas/admin_TypeKeyReference'
      description: A named role within the system (Since 1.3.0)
      x-gw-sinceVersion: 1.3.0
    RolePermission:
      title: Role permission
      type: object
      properties:
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        permission:
          $ref: '#/components/schemas/admin_TypeKeyReference'
      description: >-
        A RolePermission represents a permission granted to a particular role
        (Since 1.4.0)
      x-gw-sinceVersion: 1.4.0
    admin_SimpleReference:
      title: Simple reference
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The formatted name of the element
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        jsonPath:
          title: JSON path
          type: string
          description: >-
            The path to the referenced element within the overall JSON document
            (Since 1.2.0)
          readOnly: true
          x-gw-sinceVersion: 1.2.0
          x-gw-extensions:
            defaultViews:
              - none
        refid:
          title: Reference ID
          type: string
          description: >-
            A unique identifier given to the newly created element in the
            context of the current request
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: A reference to an element
      xml:
        name: SimpleReference
      x-gw-extensions:
        resourceReference: true
    admin_SpatialPoint:
      title: Spatial point
      required:
        - latitude
        - longitude
      type: object
      properties:
        latitude:
          title: Latitude
          type: string
          description: The latitude of the spatial point
          format: gw-bigdecimal
        longitude:
          title: Longitude
          type: string
          description: The longitude of the spatial point
          format: gw-bigdecimal
      description: An object that combines a latitude with a longitude (Since 1.2.0)
      xml:
        name: SpatialPoint
      x-gw-sinceVersion: 1.2.0
    admin_TypeFilter:
      title: TypeFilter
      type: object
      properties:
        description:
          title: Description
          type: string
          description: The description of this `TypeFilter`
        name:
          title: Name
          type: string
          description: The name of this `TypeFilter`
        typeKeys:
          title: TypeKeys
          type: array
          description: >-
            The `code` values for the `TypeKeys` that are included by this
            `TypeFilter`
          xml:
            wrapped: true
          items:
            type: string
          x-gw-extensions:
            defaultViews:
              - detail
      description: >-
        A `TypeFilter` represents a filtered set of the `TypeKey` values from a
        `TypeList`
      xml:
        name: TypeFilter
    admin_TypeKey:
      title: TypeKey
      type: object
      properties:
        categories:
          title: Categories
          type: array
          description: >-
            The categories that this `TypeKey` belongs to. Categories are
            formatted by combining the name of the `TypeList` with the `code`
            for its `TypeKey`, separated by a `.` character.
          xml:
            wrapped: true
          items:
            type: string
          x-gw-extensions:
            defaultViews:
              - none
        code:
          title: Code
          type: string
          description: >-
            The code for this `TypeKey`. `TypeKey` codes are unique within a
            `TypeList`.
        description:
          title: Description
          type: string
          description: The longer description of this `TypeKey`
        name:
          title: Name
          type: string
          description: The human-readable name of this `TypeKey`
        priority:
          title: Priority
          type: integer
          description: >-
            The order of this `TypeKey` relative to other `TypeKeys` in the same
            `TypeList`. A `TypeKey` with a lower `priority` will appear before a
            `TypeKey` with a higher priority when the values for a `TypeList`
            are presented in sorted order.
        retired:
          title: Retried
          type: boolean
          description: >-
            A `true` value for this field indicates that the `TypeKey` value
            should no longer be used. Retired `TypeKey` values are retained only
            for the sake of historical data that may already be using the
            `TypeKey`.
          x-gw-extensions:
            defaultViews:
              - none
      description: >-
        A `TypeKey` represents one of the possible enumerated values of a
        `TypeList`
      xml:
        name: TypeKey
    admin_TypeKeyReference:
      title: TypeKey reference
      required:
        - code
      type: object
      properties:
        code:
          title: Code
          type: string
          description: The `code` of the `TypeKey`
        name:
          title: Name
          type: string
          description: The `name` of the `TypeKey`
      description: >-
        A reference to a `TypeKey` element that defines an enumerated value from
        a `TypeList`
      xml:
        name: TypeKeyReference
    admin_TypeList:
      title: TypeList
      type: object
      properties:
        description:
          title: Description
          type: string
          description: The description of this `TypeList`
        name:
          title: Name
          type: string
          description: The name of this `TypeList`
          x-gw-extensions:
            filterable: true
            sortable: true
        typeFilters:
          title: TypeFilters
          type: array
          description: >-
            The set of `TypeFilters` available on this `TypeList`. A
            `TypeFilter` represents a filtered subset of the `TypeKeys` in this
            `TypeList`.
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/admin_TypeFilter'
          x-gw-extensions:
            defaultViews:
              - detail
        typeKeys:
          title: TypeKeys
          type: array
          description: >-
            The list of `TypeKeys` available on this `TypeList`. A `TypeKey`
            represents one of the enumerated values that comprise this
            `TypeList`.
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/admin_TypeKey'
          x-gw-extensions:
            defaultViews:
              - detail
      description: A `TypeList` represents a list of enumerated `TypeKey` values
      xml:
        name: TypeList
    UWAuthorityGrant:
      title: Underwriting authority grant
      type: object
      properties:
        approveAnyValue:
          title: ApproveAnyValue
          type: boolean
          description: >-
            If this property is true, the grant has the authority to approve any
            value for the given underwriting issue type
        comparator:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        decimalValue:
          title: Decimal value
          type: string
          description: >-
            The value of the issue as a decimal. Only applicable if `valueType`
            is `decimal`.
          format: gw-bigdecimal
        id:
          title: ID
          type: string
          description: The unique identifier of this underwriting authority grant
          readOnly: true
        integerValue:
          title: Integer value
          type: string
          description: >-
            The value of the issue as an integer. Only applicable if `valueType`
            is `integer`.
          format: gw-biginteger
        issueType:
          $ref: '#/components/schemas/admin_UWIssueTypeReference'
        moneyValue:
          $ref: '#/components/schemas/admin_MonetaryAmount'
        stateSetValue:
          $ref: '#/components/schemas/admin_ExclusiveStateSet'
        valueType:
          title: Value type
          type: string
          description: >-
            The type of value for this issue type and its approvals. This field
            determines which of the value fields are applicable to this issue.
          readOnly: true
      description: >-
        Underwriting authority grant attached to an underwriting authority
        profile (Since 1.4.0)
      x-gw-sinceVersion: 1.4.0
    UWAuthorityProfile:
      title: Underwriting authority profile
      type: object
      properties:
        description:
          title: Description
          maxLength: 1333
          minLength: 1
          pattern: \S
          type: string
          description: A description of this authority profile
          x-gw-nullable: true
        displayName:
          title: Display name
          type: string
          description: The formatted name of this authority profile
          readOnly: true
        id:
          title: ID
          type: string
          description: The unique identifier of this authority profile
          readOnly: true
        name:
          title: Name
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The name of this authority profile
          x-gw-extensions:
            filterable: true
            requiredForCreate: true
            sortable: true
      description: >-
        Underwriting authority profiles determine the types of underwriting
        issues that can be approved by users who have been assigned the profile
        (Since 1.3.0)
      x-gw-sinceVersion: 1.3.0
    admin_UWIssueTypeReference:
      title: Underwriting issue type reference
      type: object
      properties:
        code:
          title: Code
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The `code` of the `UWIssueType`
          x-gw-extensions:
            sortable: true
        displayName:
          title: Display name
          type: string
          description: The formatted name of the `UWIssueType`
        id:
          title: ID
          type: string
          description: The unique identifier of this element
        jsonPath:
          title: JSON path
          type: string
          description: >-
            The path to the referenced `UWIssueType` within the overall JSON
            document
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - none
        refid:
          title: Reference ID
          type: string
          description: >-
            A unique identifier given to the newly created element in the
            context of the current request
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: >-
        A reference to a `UWIssueType` that represents a type of underwriting
        issue (Since 1.2.0)
      xml:
        name: UWIssueTypeReference
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        resourceReference: true
    User:
      title: User
      type: object
      properties:
        active:
          title: Active
          type: boolean
          description: >-
            A `true` value indicates that the user is currently active and
            allowed to log in. A `false` value indicates the user has been
            deactivated and cannot currently log in.
          x-gw-extensions:
            securityLevel: internal
        cellPhone:
          $ref: '#/components/schemas/admin_PhoneNumber'
        displayName:
          title: Display name
          type: string
          description: The formatted name of the `User`
          readOnly: true
        employeeNumber:
          title: Employee number
          maxLength: 255
          minLength: 1
          pattern: \S
          type: string
          description: The employee number assigned to the user
          x-gw-nullable: true
          x-gw-extensions:
            securityLevel: internal
        externalUser:
          title: External user
          type: boolean
          description: >-
            A `true` value indicates that the user represents a user from an
            external organization, rather than a user from within the insurer's
            organization
          readOnly: true
          x-gw-extensions:
            securityLevel: internal
        firstName:
          title: First name
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: The first name of the user
          x-gw-nullable: true
        groups:
          title: Groups
          type: array
          description: The groups this user is part of (Since 1.2.0)
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/UserGroupReference'
          x-gw-sinceVersion: 1.2.0
          x-gw-extensions:
            defaultViews:
              - summary
              - detail
        homePhone:
          $ref: '#/components/schemas/admin_PhoneNumber'
        id:
          title: ID
          type: string
          description: The unique identifier of the `User`
          readOnly: true
        lastName:
          title: Last name
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: The last name of the user
          x-gw-nullable: true
        organization:
          $ref: '#/components/schemas/admin_SimpleReference'
        roles:
          title: Roles
          type: array
          description: The roles assigned to the user (Since 1.3.0)
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/UserRoleReference'
          x-gw-sinceVersion: 1.3.0
          x-gw-extensions:
            resourceType: Role
            securityLevel: special
        suffix:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        useOrgAddress:
          title: Use organization address
          type: boolean
          description: >-
            A `true` value for this field indicates that the `address` of the
            user's `organization` should be used for this user (Since 1.2.0)
          x-gw-nullable: true
          x-gw-sinceVersion: 1.2.0
          x-gw-extensions:
            securityLevel: internal
        useProducerCodeSecurity:
          title: Use producer code security
          type: boolean
          description: >-
            A `true` value for this field indicates that this user is subject to
            producer code security. Producer code security restricts access such
            that the user can only access jobs and policies that are written or
            serviced by one of the producer codes this user has been assigned.
            Note that switching the use producer code security flag from `true`
            to `false` will remove all producer codes from the user. (Since
            1.2.0)
          x-gw-sinceVersion: 1.2.0
          x-gw-extensions:
            securityLevel: special
        userType:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        username:
          title: Username
          maxLength: 30
          minLength: 1
          pattern: \S
          type: string
          description: The username for the user
          x-gw-extensions:
            requiredForCreate: true
        uwAuthorityProfiles:
          title: Underwriting authority profiles
          type: array
          description: >-
            The underwriting authority profiles assigned to this user (Since
            1.3.0)
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/UserAuthorityProfileReference'
          x-gw-sinceVersion: 1.3.0
          x-gw-extensions:
            securityLevel: special
        vacationStatus:
          $ref: '#/components/schemas/admin_TypeKeyReference'
        workPhone:
          $ref: '#/components/schemas/admin_PhoneNumber'
      description: A named user within the system
    UserAuthorityProfileReference:
      title: User authority profile reference
      required:
        - id
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The formatted name of the element
          readOnly: true
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        type:
          title: Type
          type: string
          description: The type of the referenced element
          readOnly: true
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
          readOnly: true
      description: >-
        A reference to a `UWAuthorityProfile` that has been assigned to a user
        (Since 1.3.0)
      x-gw-sinceVersion: 1.3.0
    UserGroupReference:
      title: User group reference
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The formatted name of the element
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        jsonPath:
          title: JSON path
          type: string
          description: >-
            The path to the referenced element within the overall JSON document
            (Since 1.5.0)
          readOnly: true
          x-gw-sinceVersion: 1.5.0
          x-gw-extensions:
            defaultViews:
              - none
        refid:
          title: Reference ID
          type: string
          description: >-
            A unique identifier given to the newly created element in the
            context of the current request
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: A reference to a `Group` that the user belongs to (Since 1.5.0)
      x-gw-sinceVersion: 1.5.0
    UserProducerCode:
      title: User producer code
      type: object
      properties:
        id:
          title: ID
          type: string
          description: The unique identifier of this user producer code
          readOnly: true
        producerCode:
          $ref: '#/components/schemas/admin_SimpleReference'
        roles:
          title: Roles
          type: array
          description: >-
            The set of `Roles` that define permissions granted by this producer
            code
          readOnly: true
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/admin_SimpleReference'
      description: >-
        The relationship between a user and its producer codes and associated
        roles (Since 1.4.0)
      x-gw-sinceVersion: 1.4.0
    UserRoleReference:
      title: User role reference
      required:
        - id
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The formatted name of the element
          readOnly: true
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        type:
          title: Type
          type: string
          description: The type of the referenced element
          readOnly: true
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
          readOnly: true
      description: A reference to a `Role` that has been granted to a user (Since 1.3.0)
      x-gw-sinceVersion: 1.3.0
    BatchRequest:
      title: Batch request
      required:
        - requests
      type: object
      properties:
        requests:
          title: Requests
          type: array
          description: The array of subrequests
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/BatchSubRequest'
      description: The body of a batch request
    BatchResponse:
      title: Batch response
      type: object
      properties:
        responses:
          title: Responses
          type: array
          description: >-
            The list of subresponses, appearing in the same order as the
            elements in the `requests` field of the request
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/BatchSubResponse'
      description: >-
        The body of a response to a batch request. The `responses` field will
        have one element for every entry in the `requests` field on the request,
        and responses will appear in the same order.
    BatchSubRequest:
      title: Batch subrequest
      required:
        - method
        - path
      type: object
      properties:
        body:
          title: Body
          type: object
          properties: {}
          description: The body of the subrequest
        headers:
          title: Headers
          type: array
          description: >-
            Headers that will be included as part of the subrequest. Any headers
            defined using this field will override header values inherited from
            the main request. Any headers present on the main request that are
            not defined in this list will be inherited when the subrequest is
            made, with the exception of the `GW-Checksum` header.
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Header'
        method:
          title: Method
          type: string
          description: The HTTP method for the subrequest
          enum:
            - delete
            - head
            - get
            - options
            - patch
            - post
            - put
        onFail:
          title: On fail
          type: string
          description: >-
            Controls whether or not subsequent subrequests are processed if this
            subrequest fails. The default behavior is to continue processing
            subrequests. The `abort` option specifies that all subsequent
            subrequests will be skipped.
          enum:
            - abort
            - continue
        path:
          title: Path
          minLength: 1
          pattern: ^/[\S]*$
          type: string
          description: >-
            The path for the subrequest. This path is relative to the root of
            the API hosting the batch endpoint. For example, if the batch
            endpoint is `<servlet>/rest/common/v1/batch`, then a path of
            `/activities` will mean a request against
            `<servlet>/rest/common/v1/activities`. The path must start with `/`
            and cannot contain whitespace.
        query:
          title: Query
          type: string
          description: The query string to use for the subrequest
      description: An individual subrequest within a batch request
    BatchSubResponse:
      title: Batch subresponse
      type: object
      properties:
        body:
          title: Body
          type: object
          properties: {}
          description: The body of the subresponse
        code:
          title: Code
          type: integer
          description: The HTTP status code for the subresponse
        headers:
          title: Headers
          type: array
          description: The headers returned for the subresponse
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Header'
        skipped:
          title: Skipped
          type: boolean
          description: >-
            A `true` value indicates that the corresponding subrequest was not
            processed due to a prior failed request that specified the `onFail`
            field with the `abort` option
      description: A subresponse to a batch subrequest
    Header:
      title: Header
      required:
        - name
        - value
      type: object
      properties:
        name:
          title: Name
          type: string
          description: The header name
        value:
          title: Value
          type: string
          description: The header value
      description: An HTTP request or response header
    framework_GenericRelation:
      title: Generic relation
      required:
        - id
        - type
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The formatted name of the referenced element
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        jsonPath:
          title: JSON path
          type: string
          description: The path to the referenced element within the overall JSON document
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - none
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: A reference to a related element
      xml:
        name: GenericRelation
      x-gw-extensions:
        resourceReference: true
    framework_LinkObject:
      title: Linked object
      type: object
      properties:
        href:
          title: HREF
          type: string
          description: The URL of the link
        methods:
          title: Methods
          type: array
          description: An array of HTTP method names that can be used with the link URL
          xml:
            wrapped: true
          items:
            type: string
      description: A standard HTTP link
      xml:
        name: LinkObject
    framework_Links:
      title: Links
      type: object
      additionalProperties:
        $ref: '#/components/schemas/framework_LinkObject'
      description: A set of named links
      xml:
        name: Links
    framework_MetaObject:
      title: Meta object
      type: object
      properties:
        checksum:
          title: Checksum
          type: string
          description: The checksum of the element
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        links:
          $ref: '#/components/schemas/framework_Links'
        refid:
          title: Reference ID
          type: string
          description: >-
            A unique identifier given to the newly created element in the
            context of the current request
        related:
          $ref: '#/components/schemas/framework_RelatedCollections'
        type:
          title: Type
          type: string
          description: The type of element
      description: An element
      xml:
        name: MetaObject
    framework_MonetaryAmount:
      title: Monetary amount
      required:
        - amount
        - currency
      type: object
      properties:
        amount:
          title: Amount
          type: string
          description: The decimal amount
          format: gw-bigdecimal
        currency:
          title: Currency
          type: string
          description: The currency for the amount
          x-gw-type: typekey.Currency
      description: A monetary amount that combines a decimal amount with a currency
      xml:
        name: MonetaryAmount
    framework_PhoneNumber:
      title: Phone number
      required:
        - countryCode
        - number
      type: object
      properties:
        countryCode:
          $ref: '#/components/schemas/framework_TypeKeyReference'
        displayName:
          title: Display name
          type: string
          description: The phone number formatted in a standardized way
          readOnly: true
        extension:
          title: Extension
          type: string
          description: The extension for the phone number
          x-gw-nullable: true
        number:
          title: Number
          type: string
          description: >-
            The actual phone number, including area code, but excluding the
            country code and extension
      description: >-
        A phone number, with different components of the number broken out as
        separate fields
      xml:
        name: PhoneNumber
    framework_RelatedCollection:
      title: Related collection
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: The number of elements included in the `data` array
        data:
          title: Data
          type: array
          description: The list of references to the related elements
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/framework_SimpleReference'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements in the related set of elements. Only
            present if the `includeTotal` query parameter is used to request
            that the total be calculated for an included collection.
      description: >-
        A set of element references that are related to the element in some way.
        Used to link elements with their relations when a request is made using
        the `include` query parameter.
      xml:
        name: RelatedCollection
    framework_RelatedCollections:
      title: Related collections
      type: object
      additionalProperties:
        $ref: '#/components/schemas/framework_RelatedCollection'
      description: >-
        A set of `RelatedCollection` elements that contain references to
        elements included using the `include` query parameter on a request
      xml:
        name: RelatedCollections
    framework_SimpleReference:
      title: Simple reference
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The formatted name of the element
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        jsonPath:
          title: JSON path
          type: string
          description: >-
            The path to the referenced element within the overall JSON document
            (Since 1.2.0)
          readOnly: true
          x-gw-sinceVersion: 1.2.0
          x-gw-extensions:
            defaultViews:
              - none
        refid:
          title: Reference ID
          type: string
          description: >-
            A unique identifier given to the newly created element in the
            context of the current request
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: A reference to an element
      xml:
        name: SimpleReference
      x-gw-extensions:
        resourceReference: true
    framework_SpatialPoint:
      title: Spatial point
      required:
        - latitude
        - longitude
      type: object
      properties:
        latitude:
          title: Latitude
          type: string
          description: The latitude of the spatial point
          format: gw-bigdecimal
        longitude:
          title: Longitude
          type: string
          description: The longitude of the spatial point
          format: gw-bigdecimal
      description: An object that combines a latitude with a longitude (Since 1.2.0)
      xml:
        name: SpatialPoint
      x-gw-sinceVersion: 1.2.0
    framework_TypeKeyReference:
      title: TypeKey reference
      required:
        - code
      type: object
      properties:
        code:
          title: Code
          type: string
          description: The `code` of the `TypeKey`
        name:
          title: Name
          type: string
          description: The `name` of the `TypeKey`
      description: >-
        A reference to a `TypeKey` element that defines an enumerated value from
        a `TypeList`
      xml:
        name: TypeKeyReference
    policyperiod_Activity:
      title: Activity
      type: object
      properties:
        activityPattern:
          title: Activity pattern
          type: string
          description: >-
            The code of the `ActivityPattern` used to create this activity and
            set its initial values
          x-gw-extensions:
            createOnly: true
        activityType:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        approvalIssue:
          title: Approval issue
          type: string
          description: >-
            The reason approval is needed. Only applicable to activities with an
            `activityType` of `approval`.
        approvalRationale:
          title: Approval rationale
          type: string
          description: >-
            Rationale for approving or rejecting this activity. Only applicable
            to activities with an `activityType` of `approval`.
        approved:
          title: Approved
          type: boolean
          description: >-
            This field is `true` if this activity has been approved, `false` if
            this activity has been rejected, and omitted otherwise. Only
            applicable to activities with an `activityType` of `approval`.
          readOnly: true
        assignedByUser:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        assignedGroup:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        assignedQueue:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        assignedUser:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        assignmentStatus:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        associatedRole:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        closeDate:
          title: Close date
          type: string
          description: >-
            The date and time when this activity was completed, skipped,
            approved, or rejected
          format: date-time
          readOnly: true
          x-gw-extensions:
            filterable: true
        closeUser:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        createTime:
          title: Create time
          type: string
          description: The date and time when this `Activity` was created (Since 1.1.0)
          format: date-time
          readOnly: true
          x-gw-sinceVersion: 1.1.0
        description:
          title: Description
          type: string
          description: The description of this activity
          x-gw-nullable: true
          x-gw-extensions:
            defaultViews:
              - detail
        dueDate:
          title: Due date
          type: string
          description: >-
            Date and time by which a person should complete the activity. If not
            completed by this time, the activity is considered overdue. Not
            applicable to activities that represent events rather than tasks.
          format: date-time
          x-gw-nullable: true
          x-gw-extensions:
            filterable: true
            sortable: true
        endDate:
          title: End date
          type: string
          description: >-
            Date and time at which the activity is expected to end. Only
            applicable to activities that represent events.
          format: date-time
          x-gw-nullable: true
        escalated:
          title: Escalated
          type: boolean
          description: >-
            A `true` value for this field indicates that the activity has been
            escalated
          readOnly: true
          x-gw-extensions:
            filterable: true
            sortable: true
        escalationDate:
          title: Escalation date
          type: string
          description: >-
            Date and time at which this activity will be escalated if it has not
            yet been completed
          format: date-time
          x-gw-nullable: true
        externallyOwned:
          title: Externally owned
          type: boolean
          description: >-
            A `true` value for this field indicates that the activity is owned
            by a user or group outside of the insurer
          x-gw-extensions:
            filterable: true
        id:
          title: ID
          type: string
          description: The unique identifier of this `Activity`
          readOnly: true
        initialAssignment:
          $ref: '#/components/schemas/policyperiod_Assignee'
        mandatory:
          title: Mandatory
          type: boolean
          description: >-
            A `true` value for this field indicates that the activity is
            mandatory and cannot be skipped
        priority:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        recurring:
          title: Recurring
          type: boolean
          description: A `true` value indicates that this activity is recurring
        startDate:
          title: Start date
          type: string
          description: >-
            Date and time at which the activity is scheduled to begin. Only
            applicable to activities that represent events.
          format: date-time
          x-gw-nullable: true
        status:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        subject:
          title: Subject
          minLength: 1
          type: string
          description: A brief title for the activity
          x-gw-extensions:
            filterable: true
            sortable: true
      description: >-
        An `Activity` is an assignable item that represents a task to be done, a
        decision to be made, or information to be aware of
      xml:
        name: Activity
    policyperiod_ActivityPattern:
      title: Activity pattern
      type: object
      properties:
        activityClass:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        activityType:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        category:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        code:
          title: Code
          type: string
          description: The code that uniquely identifies this `ActivityPattern`
          x-gw-extensions:
            createOnly: true
            sortable: true
        description:
          title: Description
          type: string
          description: >-
            The default `description` for activities created from this activity
            pattern
        dueDate:
          title: Due date
          type: string
          description: >-
            The default `dueDate` for activities created from this activity
            pattern, calculated based on the current date and time
          format: date-time
        escalationDate:
          title: Escalation date
          type: string
          description: >-
            The default `escalationDate` for activities created from this
            activity pattern, calculated based on the current date and time
          format: date-time
        id:
          title: ID
          type: string
          description: The unique identifier of this `ActivityPattern`
        mandatory:
          title: Mandatory
          type: boolean
          description: >-
            The default `mandatory` value for activities created from this
            activity pattern
        patternLevel:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        priority:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        recurring:
          title: Recurring
          type: boolean
          description: >-
            The default `recurring` value for activities created from this
            activity pattern
        subject:
          title: Subject
          type: string
          description: >-
            The default `subject` for activities created from this activity
            pattern
      description: >-
        An `ActivityPattern` is a template for an activity, and is used to
        create a new activity and set defaults for some of its fields
      xml:
        name: ActivityPattern
    AdditionalNamedInsured:
      title: Additional named insured
      type: object
      properties:
        accountContact:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        relationship:
          title: Relationship
          type: string
          description: The relationship to the primary named insured
          x-gw-nullable: true
        ccPolicySystemId:
          title: CC policy system ID
          type: string
          description: Integration ID for use in ClaimCenter (Since 1.5.0)
          readOnly: true
          x-gw-sinceVersion: 1.5.0
          x-gw-extensions:
            defaultViews:
              - none
      description: Additional named insured for the policy (Since 1.4.0)
      x-gw-sinceVersion: 1.4.0
    policyperiod_Address:
      title: Address
      type: object
      properties:
        CEDEX:
          title: CEDEX
          maxLength: 2
          type: string
          description: >-
            The CEDEX bureau of the address. Only applicable in certain
            countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        addressLine1:
          title: Address line 1
          type: string
          description: The first line of the address
          x-gw-nullable: true
        addressLine1Kanji:
          title: Address line 1 kanji
          type: string
          description: >-
            The kanji version of the first line of the address. Only applicable
            in certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        addressLine2:
          title: Address line 2
          type: string
          description: The second line of the address
          x-gw-nullable: true
        addressLine2Kanji:
          title: Address line 2 kanji
          type: string
          description: >-
            The kanji version of the second line of the address. Only applicable
            in certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        addressLine3:
          title: Address line 3
          type: string
          description: The third line of the address
          x-gw-nullable: true
        addressType:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        area:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        city:
          title: City
          type: string
          description: The city of the address
          x-gw-nullable: true
        cityKanji:
          title: City kanji
          type: string
          description: >-
            The kanji version of the city of the address. Only applicable in
            certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        country:
          title: Country
          type: string
          description: >-
            The country of the address. The value of the `country` field will
            affect which other fields on the `Address` are applicable.
          x-gw-nullable: true
          x-gw-type: typekey.Country
        county:
          title: County
          type: string
          description: The county of the address. Only applicable in certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        department:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        description:
          title: Description
          type: string
          description: The description of the address (Since 1.2.0)
          x-gw-nullable: true
          x-gw-sinceVersion: 1.2.0
        displayName:
          title: Display name
          type: string
          description: >-
            The formatted value of the address represented by this `Address`,
            including all standard fields for the address's country
          readOnly: true
        emirate:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        id:
          title: ID
          type: string
          description: The unique identifier of this `Address`
          readOnly: true
        island:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        oblast:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        parish:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        postalCode:
          title: Postal code
          type: string
          description: >-
            The postal code of the address. Only applicable in certain
            countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        prefecture:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        province:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        spatialPoint:
          $ref: '#/components/schemas/policyperiod_SpatialPoint'
        state:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        validUntil:
          title: Valid until
          type: string
          description: The date and time that the address is valid until (Since 1.2.0)
          format: date-time
          x-gw-nullable: true
          x-gw-sinceVersion: 1.2.0
      description: >-
        An `Address` represents a postal address. The fields available on an
        `Address` will depend upon the `country` value for the `Address`.
      xml:
        name: Address
      x-gw-extensions:
        discriminatorProperty: country
    AssessmentSummary:
      title: Assessment summary
      type: object
      properties:
        assessedEntity:
          $ref: '#/components/schemas/policyperiod_GenericRelation'
        category:
          title: Category
          type: string
          description: >-
            The categorization of the score. For example, a fraud system may use
            low_risk, medium_risk, high_risk. A total loss evaluation system may
            use repairable, total_loss.
          x-gw-extensions:
            createOnly: true
            filterable: true
            requiredForCreate: true
            sortable: true
        conclusionCode:
          title: Conclusion code
          type: string
          description: >-
            The external system may provide a conclusion code, which summarizes
            the assessment conclusion. The conclusion code is intended to be
            used in business rules.
          x-gw-extensions:
            createOnly: true
            filterable: true
            sortable: true
        conclusionDescription:
          title: Conclusion description
          type: string
          description: A human readable description of the conclusion code
          x-gw-extensions:
            createOnly: true
            filterable: true
            sortable: true
        estimate:
          title: Estimate
          type: string
          description: >-
            The estimate relating to the assessment. The meaning of the estimate
            depends on the type of assessment.
          format: gw-bigdecimal
          x-gw-extensions:
            createOnly: true
            filterable: true
            sortable: true
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        normalizedScore:
          title: Normalized score
          type: string
          description: >-
            The raw score mapped into the range 0-100. For example, a raw score
            of 320 out of 400 could map on a normalized score of 80.
          format: gw-bigdecimal
          x-gw-extensions:
            createOnly: true
            filterable: true
            sortable: true
        recommendedActionCode:
          title: Recommended action code
          type: string
          description: >-
            The external system may provide a recommended action code that
            should be triggered in PolicyCenter. This code could be used in
            business rules.
          x-gw-extensions:
            createOnly: true
            filterable: true
            sortable: true
        recommendedActionDescription:
          title: Recommended action description
          type: string
          description: A human readable description of the recommended action
          x-gw-extensions:
            createOnly: true
            filterable: true
            sortable: true
        recommendedValue:
          title: Recommended value
          type: string
          description: >-
            Recommended actions may be optionally parameterized. For example, if
            there is a rate increase, the `recommendedValue` would provide the
            factor for the increase.
          format: gw-bigdecimal
          x-gw-extensions:
            createOnly: true
            filterable: true
            sortable: true
        score:
          title: Score
          type: string
          description: >-
            The score relating to the assessment. The meaning of a score depends
            on the type of assessment.
          format: gw-bigdecimal
          x-gw-extensions:
            createOnly: true
            filterable: true
            sortable: true
        scoreDate:
          title: Score date
          type: string
          description: The date and time the external system scored the assessed entity
          format: date-time
          x-gw-extensions:
            createOnly: true
            filterable: true
            requiredForCreate: true
            sortable: true
        scorePercentile:
          title: score percentile
          type: string
          description: >-
            A value corresponding to where the score lies in the distribution of
            scores, as determined by the external system
          format: gw-bigdecimal
          x-gw-extensions:
            createOnly: true
            filterable: true
            sortable: true
        tapId:
          title: TAP ID
          type: string
          description: The assessment provider name
          x-gw-extensions:
            createOnly: true
            filterable: true
            requiredForCreate: true
            sortable: true
        tapSubtypeId:
          title: TAP subtype ID
          type: string
          description: Designation to differentiate between distinct types of assessments
          x-gw-extensions:
            createOnly: true
            filterable: true
            requiredForCreate: true
            sortable: true
      description: Assessment summary (Since 1.5.0)
      x-gw-sinceVersion: 1.5.0
    policyperiod_Assignee:
      title: Assignee
      type: object
      properties:
        assigneeId:
          title: Assignee ID
          type: string
          description: Unique ID to reference this `Assignee` for includes (Since 1.4.0)
          readOnly: true
          x-gw-sinceVersion: 1.4.0
        autoAssign:
          title: Auto assign
          type: boolean
          description: >-
            Set to `true` to indicate the assignment should be done
            automatically by the system. Cannot be combined with any other
            fields.
        groupId:
          title: Group ID
          type: string
          description: >-
            The ID of the `Group` that the resource should be assigned to. If
            specified without the `userId` field, the `User` within the `Group`
            is selected by assignment rules. If specified along with the
            `userId` field, that specific `User` is assigned the element.
        name:
          title: Name
          type: string
          description: >-
            A human-readable name for the type of assignment that this
            `Assignee` represents
          readOnly: true
        queueId:
          title: Queue ID
          type: string
          description: >-
            The ID of the `Queue` that the resource should be assigned to.
            Cannot be combined with any other fields.
        role:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        userId:
          title: User ID
          type: string
          description: >-
            The ID of the `User` that the resource should be assigned to. The
            `groupId` field must also be specified if the `userId` field is
            specified, and the `User` must be a member of that `Group` and have
            permission to be assigned the element.
      description: >-
        An `Assignee` represents the target of an assignment action, such as a
        user/group combination, assignment queue, or automatic rule-based
        assignment
      xml:
        name: Assignee
    ChangeJobEffectiveDateAttributes:
      title: Change job effective date attributes
      required:
        - jobEffectiveDate
      type: object
      properties:
        jobEffectiveDate:
          title: Job effective date
          type: string
          description: The date on which the job takes effect
          format: date
      description: Details of the request to change a job's effective date (Since 1.3.0)
      x-gw-sinceVersion: 1.3.0
    ChangeJobVersionAttributes:
      title: Change job version attributes
      required:
        - selectedVersion
      type: object
      properties:
        selectedVersion:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
      description: The new selected version for the job
    policyperiod_ClaimsIntegrated:
      title: Claims integrated
      type: object
      properties:
        ccPolicySystemId:
          title: CC policy system ID
          type: string
          description: Integration ID for use in ClaimCenter (Since 1.5.0)
          readOnly: true
          x-gw-sinceVersion: 1.5.0
          x-gw-extensions:
            defaultViews:
              - none
      description: Claims integrated entity
      xml:
        name: ClaimsIntegrated
    ClassCodeBasis:
      title: Class code basis
      type: object
      properties:
        code:
          title: Code
          type: string
          description: The standardized code assigned to this class code basis
        description:
          title: Description
          type: string
          description: A description of this class code basis
        name:
          title: Name
          type: string
          description: The name of this class code basis
      description: >-
        The measurement basis for a class code, such as hundreds of square feet
        or thousands of payroll
    CompareJobsAttributes:
      title: Compare job attributes
      required:
        - job1
        - job2
      type: object
      properties:
        job1:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        job2:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
      description: >-
        Details of a request to compare two jobs on the same policy (Since
        1.4.0)
      x-gw-sinceVersion: 1.4.0
    policyperiod_Contact:
      title: Contact
      type: object
      properties:
        lastName:
          title: Last name
          type: string
          description: >-
            The person's last name. Only applicable for a `Contact` that
            represents a person.
          x-gw-nullable: true
          x-gw-extensions:
            entitySubtype: Person
        primaryPhoneType:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        displayName:
          title: Display name
          type: string
          description: >-
            A formatted representation of the full name for this `Contact',
            including all applicable fields such as `firstName` or `lastName`
          readOnly: true
          x-gw-nullable: true
        companyName:
          title: Company name
          type: string
          description: >-
            The name of the company represented by this `Contact`. Only
            applicable for a `Contact` that represents a company.
          x-gw-extensions:
            entitySubtype: Company
        homePhone:
          $ref: '#/components/schemas/policyperiod_PhoneNumber'
        emailAddress1:
          title: E-mail address 1
          type: string
          description: The contact's primary e-mail address
          x-gw-nullable: true
        externalId:
          title: External ID
          type: string
          description: >-
            A unique identifier assigned by the application for use when the
            `addressBookUID` field is null
          x-gw-extensions:
            filterable: true
        dateOfBirth:
          title: Date of birth
          type: string
          description: >-
            The person's date of birth. Only applicable for a `Contact` that
            represents a person.
          format: date
          x-gw-nullable: true
          x-gw-extensions:
            before: now
            entitySubtype: Person
        emailAddress2:
          title: E-mail address 2
          type: string
          description: The contact's secondary e-mail address
          x-gw-nullable: true
        firstName:
          title: First name
          type: string
          description: >-
            The persons's first name. Only applicable for a `Contact` that
            represents a person.
          x-gw-nullable: true
          x-gw-extensions:
            entitySubtype: Person
        primaryPhone:
          title: Primary phone
          type: string
          description: >-
            The contact's primary phone number, as determined by the type of
            phone number selected in the `primaryPhoneType` field
          readOnly: true
        addressBookUID:
          title: Address book UID
          type: string
          description: >-
            The unique ID of this `Contact` within the contact management
            system. Only applicable if the `Contact` has been linked to a
            contact management system.
          x-gw-nullable: true
        subtype:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        taxId:
          title: Tax ID
          type: string
          description: The contact's tax ID
        workPhone:
          $ref: '#/components/schemas/policyperiod_PhoneNumber'
        id:
          title: ID
          type: string
          description: The unique identifier of this `Contact`
          readOnly: true
        primaryAddress:
          $ref: '#/components/schemas/policyperiod_Address'
        primaryLocale:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        cellPhone:
          $ref: '#/components/schemas/policyperiod_PhoneNumber'
        preferred:
          title: Preferred
          type: boolean
          description: >-
            A `true` value for this field indicates that the vendor is one of
            the insurer's preferred vendors. Only applicable for a `Contact`
            that represents a vendor.
          x-gw-nullable: true
          x-gw-extensions:
            entitySubtype:
              - CompanyVendor
              - PersonVendor
        primaryLanguage:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        ccPolicySystemId:
          title: CC policy system ID
          type: string
          description: Integration ID for use in ClaimCenter (Since 1.5.0)
          readOnly: true
          x-gw-sinceVersion: 1.5.0
          x-gw-extensions:
            defaultViews:
              - none
      description: A `Contact` represents a person or company
      xml:
        name: Contact
    Contingency:
      title: Contingency
      type: object
      properties:
        action:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        actionStartDate:
          title: Action start date
          type: string
          description: >-
            The date on which the action specified in the `action` field will be
            initiated if the underlying issue is still unresolved. This value is
            calculated from the `action` type and the `dueDate` in order to
            ensure that the action can completed by the due date.
          format: date-time
          readOnly: true
          x-gw-extensions:
            sortable: true
        actionStarted:
          title: Action started
          type: boolean
          description: >-
            A `true` value for this field indicates that the action specified in
            the `action` field has started
          readOnly: true
        closeDate:
          title: Close date
          type: string
          description: The date and time when this `Contingency` was closed
          format: date-time
          readOnly: true
          x-gw-extensions:
            sortable: true
        closeUser:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        createDate:
          title: Create date
          type: string
          description: The date and time when this `Contingency` was created
          format: date-time
          readOnly: true
          x-gw-extensions:
            sortable: true
        createUser:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        description:
          title: Description
          type: string
          description: The details of the underlying issue
          x-gw-extensions:
            createOnly: true
            requiredForCreate: true
        dueDate:
          title: Due date
          type: string
          description: The date and time by which the underlying issue must be resolved
          format: date-time
          x-gw-extensions:
            createOnly: true
            requiredForCreate: true
            sortable: true
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        status:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        title:
          title: Title
          type: string
          description: A short summary of the underlying issue
          x-gw-extensions:
            createOnly: true
            filterable: true
            requiredForCreate: true
      description: >-
        A `Contingency` indicates that some additional work is still remaining
        on the policy, such as additional documentation that the insured needs
        to provide. If the underlying issue is not resolved by the
        `actionStartDate`, then the `action` will automatically be started by
        the system, such as initiating a policy change or cancellation. (Since
        1.3.0)
      x-gw-sinceVersion: 1.3.0
    Cost:
      title: Cost
      type: object
      properties:
        adjustedRate:
          title: Adjusted rate
          type: string
          description: >-
            The adjusted rate, after any modification factors have been applied,
            for the cost over the rated term
          format: gw-bigdecimal
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - none
            securityLevel: internal
        amount:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        baseRate:
          title: Base rate
          type: string
          description: >-
            The base rate, before any modification factors have been applied,
            for the cost over the rated term
          format: gw-bigdecimal
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - none
            securityLevel: internal
        basis:
          title: Basis
          type: string
          description: >-
            The basis for this cost for the period of time between the
            `effectiveDate` and the `expirationDate`
          format: gw-bigdecimal
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - none
            securityLevel: internal
        basisScalable:
          title: Basis scalable
          type: boolean
          description: >-
            A `true` value for this field indicates that the `amount` of the
            cost will be scaled based on the `basis` of the cost if the
            effective length of the period is altered (Since 1.2.0)
          readOnly: true
          x-gw-sinceVersion: 1.2.0
          x-gw-extensions:
            defaultViews:
              - none
            securityLevel: internal
        chargeGroup:
          title: Charge group
          type: string
          description: A custom group name that can be used to group related charges
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - none
            securityLevel: internal
        chargePattern:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        costCode:
          $ref: '#/components/schemas/policyperiod_ReferenceTableEntry'
        coverable:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        coverage:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        effectiveDate:
          title: Effective date
          type: string
          description: The start date and time for the period of time that this cost covers
          format: date-time
          readOnly: true
        expirationDate:
          title: Expiration date
          type: string
          description: The end date and time for the period of time that this cost covers
          format: date-time
          readOnly: true
        exposure:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        jurisdiction:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        numDaysInRatedTerm:
          title: Number of days in rated term
          type: integer
          description: >-
            The number of days in the policy term that were used when
            calculating the amounts in this cost
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - none
            securityLevel: internal
        overridable:
          title: Overridable
          type: boolean
          description: >-
            A `true` value for this field indicates that overrides are allowed
            on this cost
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - none
            securityLevel: internal
        overrideAdjustedRate:
          title: Override adjusted rate
          type: string
          description: >-
            An override value that will be used as the `adjustedRate` for this
            cost instead of the `standardAdjustedRate` when calculating the
            `termAmount`
          format: gw-bigdecimal
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - none
            securityLevel: internal
        overrideAmount:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        overrideBaseRate:
          title: Override base rate
          type: string
          description: >-
            An override value that will be used as the `baseRate` for this cost
            instead of the `standardBaseRate` when calculating the
            `adjustedRate`
          format: gw-bigdecimal
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - none
            securityLevel: internal
        overrideReason:
          title: Override reason
          type: string
          description: The reason for setting one of the override fields
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - none
            securityLevel: internal
        overrideSource:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        overrideTermAmount:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        policyLine:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        prorationMethod:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        rateAmountType:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        rateRoutine:
          title: Rate routine
          type: string
          description: The rate routine that produced this cost
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - none
        raterId:
          title: Rater ID
          type: string
          description: The ID of the `Rater` that produced this cost
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - none
            securityLevel: internal
        roundingLevel:
          title: Rounding level
          type: integer
          description: >-
            The number of decimal places that this cost was rounded to during
            proration
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - none
            securityLevel: internal
        roundingMode:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        standardAdjustedRate:
          title: Standard adjusted rate
          type: string
          description: >-
            The standard value for the `adjustedRate` field, as calculated based
            on the `standardBaseRate`. This field can be used as a reference
            value if this cost has been overridden.
          format: gw-bigdecimal
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - none
            securityLevel: internal
        standardAmount:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        standardBaseRate:
          title: Standard base rate
          type: string
          description: >-
            The standard value for the `baseRate` field. This field can be used
            as a reference value if this cost has been overridden.
          format: gw-bigdecimal
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - none
            securityLevel: internal
        standardTermAmount:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        subjectToReporting:
          title: Subject to reporting
          type: boolean
          description: A `true` value indicates that this cost is subject to reporting
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - none
            securityLevel: internal
        termAmount:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
      description: A `Cost` represents a unit of price over a period of time
    Coverage:
      title: Coverage
      type: object
      properties:
        pattern:
          $ref: '#/components/schemas/ProductModelReference'
        id:
          title: ID
          type: string
          description: The unique identifier of this element
        clauseType:
          title: Clause type
          type: string
          description: >-
            Indicates what type of contract clause this `Coverage` represents.
            If set to `coverage`, this `Coverage` represents a coverage for a
            particular cause of loss or insurable object. If set to `exclusion`,
            this `Coverage` represents something that is explicitly not covered
            by this policy. If set to `condition`, this `Coverage` represents
            some other aspect of the insurance contract that is neither
            providing coverage nor excluding coverage.
        terms:
          $ref: '#/components/schemas/CoverageTermsMap'
        selected:
          title: Selected
          type: boolean
          description: >-
            A `true` value indicates that this clause is part of the policy. A
            `false` value indicates that this clause is available but is not
            currently part of the policy.
          readOnly: true
          x-gw-extensions:
            filterable: true
        ccPolicySystemId:
          title: CC policy system ID
          type: string
          description: Integration ID for use in ClaimCenter (Since 1.5.0)
          readOnly: true
          x-gw-sinceVersion: 1.5.0
          x-gw-extensions:
            defaultViews:
              - none
      description: >-
        A `Coverage` represents a clause in the policy contract. It can
        represent a coverage, exclusion, or other condition that is part of the
        policy.
    CoverageTerm:
      title: Coverage term
      type: object
      properties:
        dateValue:
          title: (Deprecated) Date value
          type: string
          description: >-
            This field value has been deprecated. Use the `dateTimeValue` field
            instead.
          format: date-time
          x-gw-nullable: true
        bigDecimalValue:
          title: Decimal value
          type: string
          description: >-
            The value of this term as a decimal. Only applicable if the
            `covTermType` is `decimal`.
          format: gw-bigdecimal
          x-gw-nullable: true
        directValue:
          title: Direct value
          type: string
          description: >-
            The value of this term as a decimal. Only applicable if the
            `covTermType` is `direct`.
          format: gw-bigdecimal
          x-gw-nullable: true
        typekeyValue:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        dateTimeValue:
          title: Date time value
          type: string
          description: >-
            The value of this term as a date and time. Only applicable if the
            `covTermType` is `date`. (Since 1.1.0)
          format: date-time
          x-gw-nullable: true
          x-gw-sinceVersion: 1.1.0
        pattern:
          $ref: '#/components/schemas/ProductModelReference'
        choiceValue:
          $ref: '#/components/schemas/ProductModelChoice'
        availableChoices:
          title: Available choices
          type: array
          description: >-
            The set of all available choices for this term. Only applicable if
            the `covTermType` is `choice`.
          readOnly: true
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ProductModelChoice'
          x-gw-extensions:
            defaultViews:
              - none
        covTermType:
          title: Coverage term type
          type: string
          description: The type of value for this term, such as `choice` or `direct`
          readOnly: true
        displayValue:
          title: Display value
          type: string
          description: The formatted, human-readable version of the value of this term
          readOnly: true
        stringValue:
          title: String value
          type: string
          description: >-
            The value of this term as a string. Only applicable if the
            `covTermType` is `string`.
          x-gw-nullable: true
        booleanValue:
          title: Boolean value
          type: boolean
          description: >-
            The value of this term as a Boolean. Only applicable if the
            `covTermType` is `boolean`.
          x-gw-nullable: true
        ccPolicySystemId:
          title: CC policy system ID
          type: string
          description: Integration ID for use in ClaimCenter (Since 1.5.0)
          readOnly: true
          x-gw-sinceVersion: 1.5.0
          x-gw-extensions:
            defaultViews:
              - none
      description: >-
        The value of a single term that applies to a coverage, condition, or
        exclusion
    CoverageTermsMap:
      title: Coverage terms
      type: object
      additionalProperties:
        $ref: '#/components/schemas/CoverageTerm'
      description: The term values for a coverage, condition, or exclusion
    CoveragesMap:
      title: Coverages
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Coverage'
      description: The coverages, conditions, and exclusions for a covered risk
    CoveredLocationBase:
      type: object
      properties:
        CEDEX:
          title: CEDEX
          maxLength: 2
          type: string
          description: >-
            The CEDEX bureau of the location's address. Only applicable in
            certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        accountLocation:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        addressLine1:
          title: Address line 1
          type: string
          description: The first line of the location's address
          x-gw-nullable: true
        addressLine1Kanji:
          title: Address line 1 kanji
          type: string
          description: >-
            The kanji version of the first line of the location's address. Only
            applicable in certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        addressLine2:
          title: Address line 2
          type: string
          description: The second line of the location's address
          x-gw-nullable: true
          x-gw-extensions:
            defaultViews:
              - detail
        addressLine2Kanji:
          title: Address line 2 kanji
          type: string
          description: >-
            The kanji version of the second line of the location's address. Only
            applicable in certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        addressLine3:
          title: Address line 3
          type: string
          description: The third line of the location's address
          x-gw-nullable: true
          x-gw-extensions:
            defaultViews:
              - detail
        addressType:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        area:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        city:
          title: City
          type: string
          description: The city of the location's address
          x-gw-nullable: true
        cityKanji:
          title: City kanji
          type: string
          description: >-
            The kanji version of the city of the location's address. Only
            applicable in certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        country:
          title: Country
          type: string
          description: >-
            The country of the location's address. The value of the `country`
            field will affect which other fields are applicable.
          x-gw-nullable: true
          x-gw-extensions:
            createOnly: true
            defaultViews:
              - detail
          x-gw-type: typekey.Country
        county:
          title: County
          type: string
          description: >-
            The county of the location's address. Only applicable in certain
            countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
            defaultViews:
              - detail
        department:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        displayName:
          title: Display name
          type: string
          description: >-
            The formatted value of the location represented by this element,
            including all standard fields for the address's country
          readOnly: true
        emirate:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        island:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        locationNum:
          title: Location number
          type: integer
          description: The number automatically assigned to this location
          readOnly: true
        oblast:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        parish:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        postalCode:
          title: Postal code
          type: string
          description: >-
            The postal code of the location's address. Only applicable in
            certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        prefecture:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        province:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        state:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        territoryCodes:
          $ref: '#/components/schemas/TerritoryCodesMap'
    CreateCancellationAttributes:
      title: Create cancellation attributes
      required:
        - cancellationReasonCode
        - cancellationSource
        - jobEffectiveDate
      type: object
      properties:
        calculationMethod:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        cancellationReasonCode:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        description:
          title: Description
          type: string
          description: >-
            An extended description of this job. Can be used to describe the
            reason why this job was created. (Since 1.1.0)
          x-gw-sinceVersion: 1.1.0
        jobEffectiveDate:
          title: Job effective date
          type: string
          description: The date on which the cancellation takes effect
          format: date
        cancellationSource:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        quoteOnStart:
          title: Quote on start
          type: boolean
          description: >-
            Set this field to explicitly request that the `Cancellation` should
            or should not be quoted immediately upon starting. If not specified,
            the default system configuration will determine if the
            `Cancellation` is automatically quoted. (Since 1.2.0)
          x-gw-sinceVersion: 1.2.0
      description: Details of the `Cancellation` job to create
    CreateIssuanceAttributes:
      title: Create issuance attributes
      type: object
      properties:
        description:
          title: Description
          type: string
          description: >-
            An extended description of this job. Can be used to describe the
            reason why this job was created. (Since 1.1.0)
          x-gw-sinceVersion: 1.1.0
      description: Details of the `Issuance` job to create (Since 1.1.0)
      x-gw-sinceVersion: 1.1.0
    CreateJobAttributes:
      type: object
      properties:
        description:
          title: Description
          type: string
          description: >-
            An extended description of this job. Can be used to describe the
            reason why this job was created. (Since 1.1.0)
          x-gw-sinceVersion: 1.1.0
    CreatePolicyChangeAttributes:
      title: Create policy change attributes
      required:
        - jobEffectiveDate
      type: object
      properties:
        description:
          title: Description
          type: string
          description: >-
            An extended description of this job. Can be used to describe the
            reason why this job was created. (Since 1.1.0)
          x-gw-sinceVersion: 1.1.0
        jobEffectiveDate:
          title: Job effective date
          type: string
          description: The date on which this change should become effective
          format: date
      description: Details of the `PolicyChange` job to create
    CreateReinstatementAttributes:
      title: Create reinstatement attributes
      required:
        - reinstateCode
      type: object
      properties:
        reinstateCode:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        description:
          title: Description
          type: string
          description: >-
            An extended description of this job. Can be used to describe the
            reason why this job was created. (Since 1.1.0)
          x-gw-sinceVersion: 1.1.0
      description: Details of the `Reinstatement` job to create
    CreateRenewalAttributes:
      title: Create renewal attributes
      type: object
      properties:
        description:
          title: Description
          type: string
          description: >-
            An extended description of this job. Can be used to describe the
            reason why this job was created. (Since 1.1.0)
          x-gw-sinceVersion: 1.1.0
      description: Details of the `Renewal` job to create
    CreateRewriteAttributes:
      title: Create rewrite attributes
      required:
        - rewriteType
      type: object
      properties:
        rewriteType:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        description:
          title: Description
          type: string
          description: >-
            An extended description of this job. Can be used to describe the
            reason why this job was created. (Since 1.1.0)
          x-gw-sinceVersion: 1.1.0
        changePolicyNumber:
          title: Change policy number
          type: boolean
          description: >-
            Set this field to `true` to indicate that a new policy number should
            be generated when the policy is rewritten. Defaults to `false`.
          default: false
      description: Details of the `Rewrite` job to create
    CreateRewriteNewAccountAttributes:
      title: Create rewrite new account attributes
      required:
        - account
      type: object
      properties:
        description:
          title: Description
          type: string
          description: >-
            An extended description of this job. Can be used to describe the
            reason why this job was created. (Since 1.1.0)
          x-gw-sinceVersion: 1.1.0
        account:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
      description: Details of the `RewriteNewAccount` job to create (Since 1.1.0)
      x-gw-sinceVersion: 1.1.0
    CreateSubmissionAttributes:
      title: Create submission attributes
      required:
        - account
        - baseState
        - jobEffectiveDate
        - producerCode
        - product
      type: object
      properties:
        dateQuoteNeeded:
          title: Date quote needed
          type: string
          description: The date that a quote for this submission is needed by
          format: date
          x-gw-nullable: true
        baseState:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        jobEffectiveDate:
          title: Job effective date
          type: string
          description: The date on which the new policy will become effective
          format: date
        product:
          $ref: '#/components/schemas/ProductModelReference'
        termType:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        uwCompany:
          $ref: '#/components/schemas/UWCompanyReference'
        description:
          title: Description
          type: string
          description: >-
            An extended description of this job. Can be used to describe the
            reason why this job was created. (Since 1.1.0)
          x-gw-sinceVersion: 1.1.0
        producerCode:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        quoteType:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        account:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
      description: Details of the `Submission` job to create
    DeclineAttributes:
      title: Decline attributes
      required:
        - rejectReason
      type: object
      properties:
        rejectReason:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        rejectReasonText:
          title: Reject reason text
          type: string
          description: A more detailed explanation for why the submission was declined
          x-gw-nullable: true
      description: Details of the decision to decline the submission
    DiffTreeNode:
      title: Diff tree node
      type: object
      properties:
        changeType:
          title: Change type
          type: string
          description: >-
            The type of diff change - Add or Remove or Change or Window -
            associated with this difference tree node
        children:
          title: Children
          type: array
          description: A collection of children for this difference tree node
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/DiffTreeNode'
        entity:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        field:
          title: Field
          type: string
          description: The field that this diff tree node corresponds to, if any
        label:
          title: Label
          type: string
          description: A descriptive label for this diff tree node
        value1:
          title: First value
          type: string
          description: >-
            The first value of the difference. This could be the old value or
            value on the first job, depending on the context of the difference.
        value2:
          title: Second value
          type: string
          description: >-
            The second value of the difference. This could be the new value or
            the value on the second job, depending on the context of the
            difference.
      description: >-
        A node in the tree of differences between two policy periods (Since
        1.4.0)
      x-gw-sinceVersion: 1.4.0
    policyperiod_Document:
      title: Document
      type: object
      properties:
        account:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        author:
          title: Author
          type: string
          description: The name of the person who created this document
          x-gw-nullable: true
        contingency:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        dateModified:
          title: Date modified
          type: string
          description: The date and time that this `Document` was most recently updated
          format: date-time
          readOnly: true
          x-gw-extensions:
            sortable: true
        description:
          title: Description
          type: string
          description: A description of this document
          x-gw-nullable: true
        docUID:
          title: Document UID
          type: string
          description: >-
            The unique identifier for this `Document` in the linked document
            management system. The exact format of the identifier depends upon
            the specifics of the document management system the application is
            linked to.
          x-gw-extensions:
            createOnly: true
            defaultViews:
              - detail
        id:
          title: ID
          type: string
          description: The unique identifier of this `Document`
          readOnly: true
        inbound:
          title: Inbound
          type: boolean
          description: >-
            This field indicates whether this document is considered to be
            inbound, outbound, or neither
          x-gw-nullable: true
        job:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        language:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        mimeType:
          title: MIME type
          type: string
          description: >-
            The MIME type of this document, such as `application/msword` for a
            Microsoft Word document
        name:
          title: Name
          type: string
          description: The name of this document
          x-gw-extensions:
            filterable: true
            requiredForCreate: true
            sortable: true
        obsolete:
          title: Obsolete
          type: boolean
          description: >-
            Setting this field to `true` indicates that the information in this
            document can no longer be relied upon to be current and relevant.
            This is often used instead of deletion to preserve history.
          x-gw-nullable: true
        policy:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        recipient:
          title: Recipient
          type: string
          description: The name of the intended recipient of this document
          x-gw-nullable: true
        section:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        securityType:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        status:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        type:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
      description: >-
        A `Document` represents a document within the application, which can
        have additional metadata such as the author of the document or a
        specific security level. The actual contents of the document are
        generally stored in a separate document management system that this
        application is linked to. (Since 1.1.0)
      xml:
        name: Document
      x-gw-sinceVersion: 1.1.0
    policyperiod_DocumentContent:
      title: Document content
      type: object
      properties:
        contents:
          title: Contents
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          description: The contents of this document as a Base64-encoded string
          format: byte
          readOnly: true
        responseMimeType:
          title: Response MIME type
          type: string
          description: >-
            The MIME type of this document's contents, such as
            `application/msword` for a Microsoft Word document
          readOnly: true
        url:
          title: URL
          type: string
          description: >-
            The URL of this document within the linked document management
            system
          readOnly: true
      description: The contents of a `Document` (Since 1.1.0)
      xml:
        name: DocumentContent
      x-gw-sinceVersion: 1.1.0
    EffDatedSplit:
      title: Effective dated split
      type: object
      properties:
        endDate:
          title: End date
          type: string
          description: >-
            The date and time that marks the end of the period of time that this
            split covers
          format: date-time
          readOnly: true
        startDate:
          title: Start date
          type: string
          description: >-
            The date and time that marks the beginning of the period of time
            that this split covers
          format: date-time
          readOnly: true
      description: >-
        Represents the start and end dates for an effective dated split of field
        values
    policyperiod_ExclusiveStateSet:
      title: Exclusive state set
      required:
        - inclusionType
        - states
      type: object
      properties:
        inclusionType:
          title: Inclusion type
          type: string
          description: Whether the set of states is inclusive or exclusive
          enum:
            - exclusive
            - inclusive
        states:
          title: States
          minItems: 1
          type: array
          description: The states that comprise the set
          xml:
            wrapped: true
          items:
            type: string
            x-gw-type: typekey.State
      description: >-
        A set of states that can be used either as an inclusive set or an
        exclusive set (Since 1.2.0)
      xml:
        name: ExclusiveStateSet
      x-gw-sinceVersion: 1.2.0
    FieldDiff:
      title: Field diff
      type: object
      properties:
        changedValue:
          title: Changed value
          type: string
          description: The value of the diff field in the policy period that was changed
        entity:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        existingValue:
          title: Existing value
          type: string
          description: The value of the diff field on this job
        field:
          title: field
          type: string
          description: The label of the diff field on this job
      description: >-
        A field representing a diff or change between two policy periods (Since
        1.3.0)
      x-gw-sinceVersion: 1.3.0
    policyperiod_GenericRelation:
      title: Generic relation
      required:
        - id
        - type
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The formatted name of the referenced element
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        jsonPath:
          title: JSON path
          type: string
          description: The path to the referenced element within the overall JSON document
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - none
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: A reference to a related element
      xml:
        name: GenericRelation
      x-gw-extensions:
        resourceReference: true
    policyperiod_GroupDetail:
      title: Group detail
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The name of the `Group`
        id:
          title: ID
          type: string
          description: The unique identifier of the `Group`
      description: Used to represent a reference to a `Group`
      xml:
        name: GroupDetail
    policyperiod_GroupReference:
      title: Group reference
      type: object
      properties:
        branchCode:
          title: Branch code
          type: string
          description: The `branchCode` of the group
          x-gw-nullable: true
          x-gw-extensions:
            filterable: true
        displayName:
          title: Display name
          type: string
          description: The formatted name of the group
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        jsonPath:
          title: JSON path
          type: string
          description: The path to the referenced `Group` within the overall JSON document
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - none
        refid:
          title: Reference ID
          type: string
          description: >-
            A unique identifier given to the newly created element in the
            context of the current request
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: A reference to `Group` element (Since 1.2.0)
      xml:
        name: GroupReference
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        resourceReference: true
    Job:
      title: Job
      type: object
      properties:
        organizationOfService:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        policyNumber:
          title: Policy number
          type: string
          description: The number assigned to this policy
          readOnly: true
        renewalNotificationDate:
          title: Renewal notification date
          type: string
          description: >-
            The date and time when a renewal notification was sent. Only
            applicable to `Renewal` jobs. (Since 1.1.0)
          format: date-time
          readOnly: true
          x-gw-sinceVersion: 1.1.0
        sourcePolicy:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        rejectReason:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        rewriteType:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        id:
          title: ID
          type: string
          description: The unique identifier of this element
        periodEnd:
          title: Period end
          type: string
          description: The end date and time for this policy term
          format: date-time
          readOnly: true
        depositAmount:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        jobEffectiveDate:
          title: Job effective date
          type: string
          description: >-
            The date and time when this job will become effective. The exact
            meaning depends upon the `jobType` of this job. For example, for a
            `Submission` job, this will be the start date for the new policy,
            while for a `Cancellation` job this will be the date the policy is
            cancelled.
          format: date-time
          readOnly: true
        renewalCode:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        additionalNamedInsureds:
          title: Additional named insureds
          type: array
          description: The list of additional named insureds on the policy (Since 1.4.0)
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/AdditionalNamedInsured'
          x-gw-sinceVersion: 1.4.0
          x-gw-extensions:
            defaultViews:
              - detail
        preferredCoverageCurrency:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        uwCompany:
          $ref: '#/components/schemas/UWCompanyReference'
        changePolicyNumber:
          title: Change policy number
          type: boolean
          description: >-
            A `true` value for this field indicates that a new policy number
            will be generated when the policy is rewritten. Only applicable to
            `Rewrite` jobs.
          readOnly: true
        periodStart:
          title: Period start
          type: string
          description: The start date and time for this policy term
          format: date-time
          readOnly: true
        jobNumber:
          title: Job number
          type: string
          description: A number assigned automatically to this job
          readOnly: true
          x-gw-extensions:
            filterable: true
            sortable: true
        totalCost:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        dateQuoteNeeded:
          title: Date quote needed
          type: string
          description: >-
            The date that a quote for this submission is needed by. Only
            applicable to `Submission` jobs.
          format: date
          x-gw-nullable: true
        jobStatus:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        primaryInsured:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        termType:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        description:
          title: Description
          type: string
          description: >-
            An extended description of this job. Can be used to describe the
            reason why this job was created.
          x-gw-nullable: true
        producerCode:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        depositOverridePercentage:
          title: Deposit override percentage
          type: string
          description: >-
            Override of the default reporting deposit percentage of the
            reporting pattern chosen (Since 1.5.0)
          format: gw-bigdecimal
          readOnly: true
          x-gw-nullable: true
          x-gw-sinceVersion: 1.5.0
          x-gw-extensions:
            defaultViews:
              - detail
        quoteType:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        rescindNotificationDate:
          title: Rescind notification date
          type: string
          description: >-
            The date and time when a rescind cancellation notification was sent.
            Only applicable to `Cancellation` jobs. (Since 1.1.0)
          format: date-time
          readOnly: true
          x-gw-sinceVersion: 1.1.0
        calculationMethod:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        cancellationReasonCode:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        baseState:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        producerCodeOfService:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        rejectReasonText:
          title: Reject reason text
          type: string
          description: >-
            A more detailed explanation of why this submission was declined or
            not taken. Only applicable to `Submission` jobs.
          readOnly: true
        primaryLocation:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        jobType:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        policy:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        nonRenewalNotificationDate:
          title: Non-renewal notification date
          type: string
          description: >-
            The date and time when a non-renewal notification was sent. Only
            applicable to `Renewal` jobs. (Since 1.1.0)
          format: date-time
          readOnly: true
          x-gw-sinceVersion: 1.1.0
        isOOSJob:
          title: Is an out-of-sequence job
          type: boolean
          description: >-
            A `true` value for this field indicates that this job is considered
            to be out-of-sequence, meaning that there are already bound changes
            that occur at a later effective date within this term (Since 1.2.0)
          readOnly: true
          x-gw-sinceVersion: 1.2.0
          x-gw-extensions:
            defaultViews:
              - none
        product:
          $ref: '#/components/schemas/ProductModelReference'
        sourceAccount:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        finalAuditOption:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        reinstateCode:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        totalPremium:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        editLocked:
          title: Edit locked
          type: boolean
          description: >-
            A `true` value for this field indicates that this `Job` is locked
            from being edited by users without special permission to override
            the lock (Since 1.2.0)
          readOnly: true
          x-gw-sinceVersion: 1.2.0
        affinityGroup:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        taxesAndSurcharges:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        closeDate:
          title: Close date
          type: string
          description: The date and time when this job was closed
          format: date-time
          readOnly: true
        nonRenewalCode:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        cancellationSource:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        isPreempted:
          title: Is preempted
          type: boolean
          description: >-
            A `true` value for this field indicates that this job has been
            preempted. A job is considered preempted when another job for the
            same policy has been bound after this job was created. (Since 1.2.0)
          readOnly: true
          x-gw-sinceVersion: 1.2.0
        createdDate:
          title: Created date
          type: string
          description: The date and time that this element was created
          format: date-time
          readOnly: true
          x-gw-extensions:
            sortable: true
        selectedVersion:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        organization:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        cancelProcessDate:
          title: Cancel process date
          type: string
          description: >-
            The date and time when the cancellation should be processed by an
            external system. Only applicable to `Cancellation` jobs. (Since
            1.1.0)
          format: date-time
          readOnly: true
          x-gw-sinceVersion: 1.1.0
        targetAccount:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        targetPolicy:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        account:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        ccPolicySystemId:
          title: CC policy system ID
          type: string
          description: Integration ID for use in ClaimCenter (Since 1.5.0)
          readOnly: true
          x-gw-sinceVersion: 1.5.0
          x-gw-extensions:
            defaultViews:
              - none
      description: >-
        A `Job` represents a policy transaction that creates or alters an
        insurance policy. Each specific type of job is represented by a
        different `jobType` that represents the specific type of transaction,
        such as a `Submission` to create a new policy or a `Renewal` to renew
        the policy.
    JobComparisonDiffs:
      title: Job comparison diffs
      type: object
      properties:
        diffTree:
          $ref: '#/components/schemas/DiffTreeNode'
        job1:
          $ref: '#/components/schemas/JobToCompare'
        job2:
          $ref: '#/components/schemas/JobToCompare'
      description: Details of differences between two jobs on the same policy (Since 1.4.0)
      x-gw-sinceVersion: 1.4.0
    JobDiffs:
      title: Job diffs
      type: object
      properties:
        diffs:
          title: Diffs
          type: array
          description: The list of diff fields
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/FieldDiff'
        job:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        jobEffectiveDate:
          title: Job effective date
          type: string
          description: The date and time when this job becomes effective
          format: date-time
          readOnly: true
        jobNumber:
          title: Job number
          type: string
          description: The `jobNumber` of the job
        jobType:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
      description: >-
        A list of diff fields representing the set of changes in a job (Since
        1.3.0)
      x-gw-sinceVersion: 1.3.0
    JobPreemptionConflicts:
      title: Job preemption conflicts
      type: object
      properties:
        conflicts:
          $ref: '#/components/schemas/JobDiffs'
        job:
          $ref: '#/components/schemas/Job'
      description: >-
        The job created as a result of handling preemptions and conflicting diff
        changes, if any, for the job (Since 1.3.0)
      x-gw-sinceVersion: 1.3.0
    JobReviewDiffs:
      title: Job review diffs
      type: object
      properties:
        basedOnJob:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        diffTree:
          $ref: '#/components/schemas/DiffTreeNode'
      description: >-
        A comparison between the current job and the job that it was based on
        (Since 1.4.0)
      x-gw-sinceVersion: 1.4.0
    JobRole:
      title: Job role
      type: object
      properties:
        group:
          title: Group
          type: string
          description: The `id` of the `Group` that has been assigned the role
        role:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        user:
          title: User
          type: string
          description: The `id` of the `User` that has been assigned the role
      description: An assignment of a role on a `Job` to a user
    JobRoles:
      title: Job roles
      type: object
      properties:
        roles:
          title: Roles
          type: array
          description: A list of `JobRole` elements
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/JobRole'
      description: A list of `JobRole` elements
    JobSearchRequestAttributes:
      title: Job search request attributes
      required:
        - jobType
      type: object
      properties:
        country:
          title: Country
          type: string
          description: >-
            The `country` of the `primaryAddress` on the `primaryInsured` (Since
            1.4.0)
          x-gw-sinceVersion: 1.4.0
          x-gw-type: typekey.Country
        lastName:
          title: Last name
          type: string
          description: The `lastName` of the `primaryInsured`
        officialId:
          title: Official ID
          type: string
          description: The `value` of an `OfficialID` on the `primaryInsured`
        product:
          $ref: '#/components/schemas/ProductModelReference'
        city:
          title: City
          type: string
          description: The `city` of the `primaryAddress` on the `primaryInsured`
        companyName:
          title: Company name
          type: string
          description: The `companyName` of the `primaryInsured`
        jurisdiction:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        postalCode:
          title: Postal code
          type: string
          description: The `postalCode` of the `primaryAddress` on the `primaryInsured`
        policyNumber:
          title: Policy number
          type: string
          description: The `policyNumber` for the policy
        producerCode:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        firstName:
          title: First name
          type: string
          description: The `firstName` of the `primaryInsured`
        phone:
          title: Phone
          type: string
          description: The `workPhone` of the `primaryInsured`
        street:
          title: Street
          type: string
          description: >-
            Part of the street address of the `primaryAddress` on the
            `primaryInsured`
        state:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        jobType:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        jobNumber:
          title: Job number
          type: string
          description: The `jobNumber` of the job
      description: Details of the job to search for
    JobSearchResult:
      title: Job search result
      type: object
      properties:
        jobStatus:
          title: Status
          type: string
          description: The current status of the job
          readOnly: true
        product:
          $ref: '#/components/schemas/ProductModelReference'
        policyNumber:
          title: Policy number
          type: string
          description: The assigned number for this policy
          readOnly: true
        policyAddress:
          title: Policy address
          type: string
          description: The formatted address of the primary location for this policy
          readOnly: true
        editEffectiveDate:
          title: Edit effective date
          type: string
          description: The date and time when the job becomes effective
          format: date-time
          readOnly: true
        accountNumber:
          title: Account number
          type: string
          description: The `accountNumber` on the account for this policy
          readOnly: true
        jobId:
          title: Job ID
          type: string
          description: The `id` of the `Job`
          readOnly: true
        producerOfRecordName:
          title: Producer of record name
          type: string
          description: >-
            The name of the `ProducerCode` assigned as the producer of record
            for this policy
          readOnly: true
        producerOfServiceName:
          title: Producer of service name
          type: string
          description: >-
            The name of the `ProducerCode` assigned as the producer of service
            for this policy
          readOnly: true
        jobType:
          title: Job type
          type: string
          description: The type of job, such as `Submission` or `Cancellation`
          readOnly: true
        insuredName:
          title: Insured name
          type: string
          description: The name of the primary named insured for this policy
          readOnly: true
        jobNumber:
          title: Job number
          type: string
          description: The automatically assigned number for the job
          readOnly: true
        effectiveDate:
          title: Effective date
          type: string
          description: The date on which this particular period became effective
          format: date-time
          readOnly: true
        expirationDate:
          title: Expiration date
          type: string
          description: The date on which this particular period ceased being in effect
          format: date-time
          readOnly: true
      description: An element returned from a search for `Job` elements
    JobToCompare:
      title: Job to compare
      type: object
      properties:
        job:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        jobEffectiveDate:
          title: Job effective date
          type: string
          description: The date and time when the compared job becomes effective
          format: date-time
          readOnly: true
        jobNumber:
          title: Job number
          type: string
          description: The `jobNumber` of the compared job
        jobStatus:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        jobType:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        totalPremium:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
      description: A summary of a job used in a diff between two jobs (Since 1.4.0)
      x-gw-sinceVersion: 1.4.0
    JobVersion:
      title: Job version
      type: object
      properties:
        id:
          title: ID
          type: string
          description: The unique identifier of this element
        name:
          title: Name
          type: string
          description: A human-readable name for this version
          x-gw-extensions:
            filterable: true
            sortable: true
        number:
          title: Number
          type: integer
          description: The automatically assigned number of this version
          readOnly: true
          x-gw-extensions:
            filterable: true
            sortable: true
        selected:
          title: Selected
          type: boolean
          description: >-
            A `true` value for this field indicates that this is the version
            that is currently selected for the job
          readOnly: true
        status:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
      description: >-
        A `JobVersion` represents a version of a job. Some job types support
        having multiple versions, one of which can be selected. Different
        versions of the same job can have different contents.
    policyperiod_LinkObject:
      title: Linked object
      type: object
      properties:
        href:
          title: HREF
          type: string
          description: The URL of the link
        methods:
          title: Methods
          type: array
          description: An array of HTTP method names that can be used with the link URL
          xml:
            wrapped: true
          items:
            type: string
      description: A standard HTTP link
      xml:
        name: LinkObject
    policyperiod_Links:
      title: Links
      type: object
      additionalProperties:
        $ref: '#/components/schemas/policyperiod_LinkObject'
      description: A set of named links
      xml:
        name: Links
    LossHistory:
      title: Loss history
      type: object
      properties:
        lossHistoryType:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        numPriorLosses:
          title: Number of prior losses
          minimum: 0
          type: integer
          description: >-
            The number of prior losses. Only applicable if `lossHistoryType` is
            `att`.
        priorTotalIncurred:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
      description: >-
        `LossHistory` has the `lossHistoryType` and any fields specific to that
        type. Attached documents or prior loss details must be included
        separately. (Since 1.5.0)
      x-gw-sinceVersion: 1.5.0
    policyperiod_MetaObject:
      title: Meta object
      type: object
      properties:
        checksum:
          title: Checksum
          type: string
          description: The checksum of the element
        id:
          title: ID
          type: string
          description: The unique identifier of the element
        links:
          $ref: '#/components/schemas/policyperiod_Links'
        refid:
          title: Reference ID
          type: string
          description: >-
            A unique identifier given to the newly created element in the
            context of the current request
        related:
          $ref: '#/components/schemas/policyperiod_RelatedCollections'
        type:
          title: Type
          type: string
          description: The type of element
      description: An element
      xml:
        name: MetaObject
    Modifier:
      title: Modifier
      type: object
      properties:
        valueFinal:
          title: Value final
          type: boolean
          description: >-
            A `true` value for this field indicates that the value of this
            modifier is final
        splits:
          $ref: '#/components/schemas/ModifierSplitsMap'
        rateModifier:
          title: Rate modifier
          type: string
          description: >-
            The decimal value of this modifier. Only applicable if this modifier
            has a `modifierType` of `rate`. Can only be set directly if this
            modifier does not have rate factors, otherwise this value will be
            calculated based on the rate factors.
          format: gw-bigdecimal
          x-gw-nullable: true
        pattern:
          $ref: '#/components/schemas/ProductModelReference'
        rateFactors:
          $ref: '#/components/schemas/RateFactorsMap'
        modifierType:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        booleanModifier:
          title: Boolean modifier
          type: boolean
          description: >-
            The Boolean value of this modifier. Only applicable if this modifier
            has a `modifierType` of `boolean`.
          x-gw-nullable: true
        eligible:
          title: Eligible
          type: boolean
          description: >-
            A `true` value for this field indicates that the policy is eligible
            for this modifier
        dateModifier:
          title: Date modifier
          type: string
          description: >-
            The date-time value of this modifier. Only applicable if this
            modifier has a `modifierType` of `date`.
          format: date-time
          x-gw-nullable: true
        typeKeyModifier:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        id:
          title: ID
          type: string
          description: The unique identifier of this element
        justification:
          title: Justification
          type: string
          description: Additional comments that justify the value of this modifier
          x-gw-nullable: true
        state:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        referenceDate:
          title: Reference date
          type: string
          description: >-
            The reference date and time used to determine if this particular
            modifier is available
          format: date-time
          readOnly: true
      description: >-
        A `Modifier` captures information relevant to the pricing of a policy
        that is not necessarily tied to a specific coverage or covered risk
    ModifierSplit:
      title: Modifier split
      type: object
      properties:
        rateModifier:
          title: Rate modifier
          type: string
          description: >-
            The decimal value of this modifier. Only applicable if this modifier
            has a `modifierType` of `rate`. Can only be set directly if this
            modifier does not have rate factors, otherwise this value will be
            calculated based on the rate factors.
          format: gw-bigdecimal
          x-gw-nullable: true
        booleanModifier:
          title: Boolean modifier
          type: boolean
          description: >-
            The Boolean value of this modifier. Only applicable if this modifier
            has a `modifierType` of `boolean`.
          x-gw-nullable: true
        endDate:
          title: End date
          type: string
          description: >-
            The date and time that marks the end of the period of time that this
            split covers
          format: date-time
          readOnly: true
        dateModifier:
          title: Date modifier
          type: string
          description: >-
            The date-time value of this modifier. Only applicable if this
            modifier has a `modifierType` of `date`.
          format: date-time
          x-gw-nullable: true
        typeKeyModifier:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        rateFactors:
          $ref: '#/components/schemas/RateFactorsMap'
        startDate:
          title: Start date
          type: string
          description: >-
            The date and time that marks the beginning of the period of time
            that this split covers
          format: date-time
          readOnly: true
      description: The values of a `Modifier` for a particular span of time
    ModifierSplitFields:
      type: object
      properties:
        booleanModifier:
          title: Boolean modifier
          type: boolean
          description: >-
            The Boolean value of this modifier. Only applicable if this modifier
            has a `modifierType` of `boolean`.
          x-gw-nullable: true
        dateModifier:
          title: Date modifier
          type: string
          description: >-
            The date-time value of this modifier. Only applicable if this
            modifier has a `modifierType` of `date`.
          format: date-time
          x-gw-nullable: true
        rateFactors:
          $ref: '#/components/schemas/RateFactorsMap'
        rateModifier:
          title: Rate modifier
          type: string
          description: >-
            The decimal value of this modifier. Only applicable if this modifier
            has a `modifierType` of `rate`. Can only be set directly if this
            modifier does not have rate factors, otherwise this value will be
            calculated based on the rate factors.
          format: gw-bigdecimal
          x-gw-nullable: true
        typeKeyModifier:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
    ModifierSplitsMap:
      title: Modifier splits
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ModifierSplit'
      description: The values of a `Modifier` for each of the relevant periods of time
    policyperiod_MonetaryAmount:
      title: Monetary amount
      required:
        - amount
        - currency
      type: object
      properties:
        amount:
          title: Amount
          type: string
          description: The decimal amount
          format: gw-bigdecimal
        currency:
          title: Currency
          type: string
          description: The currency for the amount
          x-gw-type: typekey.Currency
      description: A monetary amount that combines a decimal amount with a currency
      xml:
        name: MonetaryAmount
    NonRenewalExplanation:
      title: Non-renewal explanation
      required:
        - body
        - code
      type: object
      properties:
        body:
          title: Body
          minLength: 1
          pattern: \S
          type: string
          description: The explanation for the non-renewal
        code:
          title: Code
          maxLength: 60
          minLength: 1
          pattern: \S
          type: string
          description: The code of the non-renewal explanation pattern
      description: An explanation for a non-renewal directon on a policy (Since 1.3.0)
      x-gw-sinceVersion: 1.3.0
    NotTakeAttributes:
      title: Not take attributes
      required:
        - rejectReason
      type: object
      properties:
        rejectReason:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        rejectReasonText:
          title: Reject reason text
          type: string
          description: >-
            A more detailed explanation for why the submission is not being
            taken
          x-gw-nullable: true
      description: Details of the decision to not take the submission
    policyperiod_Note:
      title: Note
      type: object
      properties:
        account:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        author:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        body:
          title: Body
          minLength: 1
          type: string
          description: The text of this note
          x-gw-extensions:
            defaultViews:
              - detail
            filterable: true
            requiredForCreate: true
        bodySummary:
          title: Body summary
          type: string
          description: >-
            A shorter summary of this note's `body` field, more suitable for
            displaying in a list of notes
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - summary
        confidential:
          title: Confidential
          type: boolean
          description: >-
            A `true` value for this field indicates that the note contains
            confidential information
        contingency:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        createdDate:
          title: Created date
          type: string
          description: The date and time that this `Note` was created
          format: date-time
          readOnly: true
        id:
          title: ID
          type: string
          description: Unique identifier of this `Note`
          readOnly: true
        job:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        policy:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        securityType:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        subject:
          title: Subject
          type: string
          description: The subject of this note
          x-gw-nullable: true
          x-gw-extensions:
            filterable: true
            sortable: true
        topic:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        updateTime:
          title: Update time
          type: string
          description: The date and time when this `Note` was most recently updated
          format: date-time
          readOnly: true
          x-gw-extensions:
            sortable: true
      description: >-
        A `Note` is used to capture any sort of additional text that needs to be
        associated with another business object. A `Note` consists of a `body`
        that contains the actual text of the note, along with other fields the
        represent additional metadata about the note.
      xml:
        name: Note
    OOSConflict:
      title: Out-of-sequence conflict
      type: object
      properties:
        conflictValues:
          title: Conflict values
          type: array
          description: The actual values and effective date that are conflicting
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/OOSConflictValue'
        entity:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        field:
          title: Field
          type: string
          description: The field that has conflicting values
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        originalValue:
          title: Original value
          type: string
          description: >-
            The original value of the conflicting field in the policy period
            that this job was based on
        yourValue:
          title: Your value
          type: string
          description: The current value of the conflicting field in this job
      description: >-
        An out-of-sequence conflict represents a value that has been changed by
        the current job in a way that conflicts with a change made in the same
        policy term at a later effective date (Since 1.2.0)
      x-gw-sinceVersion: 1.2.0
    OOSConflictOverride:
      title: Out-of-sequence conflict override
      required:
        - id
        - resolution
      type: object
      properties:
        id:
          title: ID
          type: string
          description: The `id` of the `OOSConflict` that this resolution applies to
        resolution:
          title: Resolution
          type: string
          description: >-
            How the conflict should be resolved. `acceptYours` will take the
            current value from this job and use it to override the conflicting
            values at future effective dates. `discardYours` will retain the
            conflicting values at future effective dates.
          enum:
            - acceptYours
            - discardYours
      description: The requested resolution of an out-of-sequence conflict (Since 1.2.0)
      x-gw-sinceVersion: 1.2.0
    OOSConflictValue:
      title: Out-of-sequence conflict value
      type: object
      properties:
        displayValue:
          title: Display value
          type: string
          description: The human-readable, formatted value on the conflicting date
        effectiveDate:
          title: Effective date
          type: string
          description: The effective date of the conflicting value
          format: date-time
      description: >-
        The value and effective date of a single out-of-sequence conflict (Since
        1.2.0)
      x-gw-sinceVersion: 1.2.0
    OOSConflicts:
      title: Out-of-sequence conflicts
      type: object
      properties:
        conflicts:
          title: Conflicts
          type: array
          description: The list of out-of-sequence conflicts
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/OOSConflict'
      description: A list of out-of-sequence conflicts (Since 1.2.0)
      x-gw-sinceVersion: 1.2.0
    policyperiod_OfficialID:
      title: Official ID
      type: object
      properties:
        officialIDSubtype:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        officialIDType:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        officialIDValue:
          title: Official ID value
          type: string
          description: The actual identifier value
          x-gw-nullable: true
        patternCode:
          type: string
          readOnly: true
          x-gw-extensions:
            entitySubtype: PCOfficialID
            validateSubtype: false
        state:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
      description: >-
        An `OfficialID` represents a pairing of a particular jurisdiction with
        some form of official identifier applicable to that jurisdiction, such
        as a driver's license number or state tax ID number
      xml:
        name: OfficialID
      x-gw-extensions:
        discriminatorProperty: officialIDSubtype
    policyperiod_OfficialIDMap:
      title: Official ID map
      type: object
      additionalProperties:
        $ref: '#/components/schemas/policyperiod_OfficialID'
      description: >-
        A map of `OfficialID` values for various jurisdictions and types of
        identifier. The keys in the map will be of the form `<code>-<state>` or
        `<code>-ALL` for values that do not have an assigned `state`.
      xml:
        name: OfficialIDMap
    OverrideCostAttributes:
      title: Override cost attributes
      required:
        - costId
      type: object
      properties:
        costId:
          title: Cost ID
          type: string
          description: The `id` of the `Cost` being overridden
        overrideAdjustedRate:
          title: Override adjusted rate
          type: string
          description: >-
            An override of the `adjustedRate` on the cost, which will then be
            used to calculate the `termAmount` and `amount`
          format: gw-bigdecimal
          x-gw-nullable: true
        overrideAmount:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        overrideAmountBilling:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        overrideBaseRate:
          title: Override base rate
          type: string
          description: >-
            An override of the `baseRate` on the cost, which will then be used
            to calculate the `adjustedRate`, `termAmount` and `amount`
          format: gw-bigdecimal
          x-gw-nullable: true
        overrideReason:
          title: Override reason
          type: string
          description: The reason for the override
        overrideTermAmount:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        overrideTermAmountBilling:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
      description: >-
        Override values for a single cost. Only one of the
        `overrideAdjustedRate`, `overrideAmountBilling`, `overrideBaseRate`, or
        `overrideTermAmountBilling` fields should be sent. (Since 1.3.0)
      x-gw-sinceVersion: 1.3.0
    OverrideCostsResponseAttributes:
      title: Override costs response attributes
      type: object
      properties:
        costs:
          title: Costs
          type: array
          description: >-
            The new list of costs for the job. These costs will reflect the
            overridden values if `successfulRerate` is `true`.
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Cost'
        jobStatus:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        rerateError:
          title: Rerate error
          type: object
          properties: {}
          description: >-
            If rerating was unsuccessful, this field will contain the error that
            happened during rerating
        successfulRerate:
          title: Successful rerate
          type: boolean
          description: >-
            A `true` value indicates that rerating was successful and that the
            `costs`, `taxesAndSurcharges`, and `totalPremium` fields reflect the
            applied overrides. If this field is not `true` the `rerateError`
            field will indicate what failed.
        taxesAndSurcharges:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        totalCost:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        totalPremium:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
      description: >-
        The values returned as the response to a request to override rating on a
        job (Since 1.3.0)
      x-gw-sinceVersion: 1.3.0
    PaymentInfo:
      title: Payment info
      type: object
      properties:
        alternateBillingAccount:
          title: Alternate billing account
          type: string
          description: The number of the alternate billing account
          x-gw-nullable: true
        billingContact:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        billingMethod:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        depositOverridePercentage:
          title: Deposit override percentage
          type: string
          description: >-
            Override of the default reporting deposit percentage of the
            reporting pattern chosen (Since 1.5.0)
          format: gw-bigdecimal
          x-gw-nullable: true
          x-gw-sinceVersion: 1.5.0
          x-gw-extensions:
            defaultViews:
              - detail
            securityLevel: special
        finalAuditOption:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        selectedPaymentPlan:
          $ref: '#/components/schemas/PaymentPlan'
      description: Information about how payment will be made for this policy
    PaymentPlan:
      title: Payment plan
      type: object
      properties:
        billingId:
          title: Billing ID
          type: string
          description: The ID of this payment plan within the billing system
        downPaymentAmount:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        fee:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        id:
          title: ID
          type: string
          description: The unique identifier of this element
        installmentAmount:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        invoicingFrequency:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        notes:
          title: Notes
          type: string
          description: Additional notes regarding this payment plan
          readOnly: true
        planName:
          title: Plan name
          type: string
          description: The name of this payment plan
          readOnly: true
        reportingPatternCode:
          title: Reporting pattern code
          type: string
          description: >-
            The code of the pattern used to create and schedule premium reports.
            Only applicable to reporting payment plans.
        total:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
      description: A plan for how the policy will be paid for
    PendingCancelAttributes:
      title: Pending cancel attributes
      required:
        - processDate
      type: object
      properties:
        processDate:
          title: Process date
          type: string
          description: The date on which the cancellation should take place
          format: date
      description: Details of the pending cancellation (Since 1.1.0)
      x-gw-sinceVersion: 1.1.0
    PendingNonRenewAttributes:
      title: Pending non-renew attributes
      required:
        - nonRenewalCode
      type: object
      properties:
        nonRenewalCode:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
      description: Details of the pending non-renewal (Since 1.1.0)
      x-gw-sinceVersion: 1.1.0
    PendingRenewAttributes:
      title: Pending renew attributes
      required:
        - renewalCode
      type: object
      properties:
        renewalCode:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
      description: Details of the pending renewal (Since 1.1.0)
      x-gw-sinceVersion: 1.1.0
    policyperiod_PhoneNumber:
      title: Phone number
      required:
        - countryCode
        - number
      type: object
      properties:
        countryCode:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        displayName:
          title: Display name
          type: string
          description: The phone number formatted in a standardized way
          readOnly: true
        extension:
          title: Extension
          type: string
          description: The extension for the phone number
          x-gw-nullable: true
        number:
          title: Number
          type: string
          description: >-
            The actual phone number, including area code, but excluding the
            country code and extension
      description: >-
        A phone number, with different components of the number broken out as
        separate fields
      xml:
        name: PhoneNumber
    Policy:
      title: Policy
      type: object
      properties:
        organizationOfService:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        lossRatioCalculationDate:
          title: Loss ratio calculation date
          type: string
          description: Date of the most recent loss ratio calculation (Since 1.5.0)
          format: date
          readOnly: true
          x-gw-nullable: true
          x-gw-sinceVersion: 1.5.0
          x-gw-extensions:
            defaultViews:
              - detail
        policyNumber:
          title: Policy number
          type: string
          description: The number assigned to this policy
          readOnly: true
        primaryInsured:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        termType:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        producerCode:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        nonRenewalAdditionalExplanation:
          title: Non-renewal reason additional explanation
          type: string
          description: An explanation for advising a non-renewal (Since 1.3.0)
          readOnly: true
          x-gw-sinceVersion: 1.3.0
        claimSystemTotalIncurred:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        mostRecentBoundDate:
          title: Most recent bound date
          type: string
          description: >-
            The effective date and time of the most recent bound job for the
            most recent term on this policy (Since 1.2.0)
          format: date-time
          readOnly: true
          x-gw-sinceVersion: 1.2.0
          x-gw-extensions:
            defaultViews:
              - none
        depositReleased:
          title: Deposit released
          type: boolean
          description: True if the deposit amount has been released (Since 1.5.0)
          readOnly: true
          default: false
          x-gw-sinceVersion: 1.5.0
          x-gw-extensions:
            defaultViews:
              - detail
        sourcePolicy:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        baseState:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        producerCodeOfService:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        lossRatioEarnedPremium:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        mostRecentTerm:
          title: Most recent term
          type: boolean
          description: Flags the future-most term for a policy (Since 1.5.0)
          readOnly: true
          default: false
          x-gw-sinceVersion: 1.5.0
          x-gw-extensions:
            defaultViews:
              - detail
        primaryLocation:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        nextRenewalCheckDate:
          title: Next renewal check date
          type: string
          description: >-
            The date to next evaluate this PolicyTerm for renewal, null
            indicates to check at the next opportunity (Since 1.5.0)
          format: date
          readOnly: true
          x-gw-nullable: true
          x-gw-sinceVersion: 1.5.0
          x-gw-extensions:
            defaultViews:
              - detail
        nonRenewalReason:
          title: Non-renewal reason
          type: string
          description: The reason this policy has been marked for non-renewal (Since 1.3.0)
          readOnly: true
          x-gw-sinceVersion: 1.3.0
          x-gw-type: typekey.NonRenewalCode
        id:
          title: ID
          type: string
          description: The unique identifier of this element
        cancellationDate:
          title: Cancellation date
          type: string
          description: The date and time at which this policy was cancelled (Since 1.2.0)
          format: date-time
          readOnly: true
          x-gw-sinceVersion: 1.2.0
        periodEnd:
          title: Period end
          type: string
          description: The end date and time for this policy term
          format: date-time
          readOnly: true
        product:
          $ref: '#/components/schemas/ProductModelReference'
        sourceAccount:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        finalAuditOption:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        additionalNamedInsureds:
          title: Additional named insureds
          type: array
          description: The list of additional named insureds on the policy (Since 1.4.0)
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/AdditionalNamedInsured'
          x-gw-sinceVersion: 1.4.0
          x-gw-extensions:
            defaultViews:
              - detail
        preferredCoverageCurrency:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        totalPremium:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        uwCompany:
          $ref: '#/components/schemas/UWCompanyReference'
        affinityGroup:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        taxesAndSurcharges:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        createdDate:
          title: Created date
          type: string
          description: The date and time that this element was created
          format: date-time
          readOnly: true
          x-gw-extensions:
            sortable: true
        preRenewalOwner:
          $ref: '#/components/schemas/policyperiod_Assignee'
        organization:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        nonRenewalExplanations:
          title: Non-renewal reason explanations
          type: array
          description: Reasons for advising a non-renewal (Since 1.3.0)
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/NonRenewalExplanation'
          x-gw-sinceVersion: 1.3.0
        targetAccount:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        targetPolicy:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        preRenewalDirection:
          title: Pre-renewal direction
          type: string
          description: >-
            The recommended action to take on this policy when it comes up for
            renewal (Since 1.3.0)
          readOnly: true
          x-gw-sinceVersion: 1.3.0
          x-gw-type: typekey.PreRenewalDirection
        periodStart:
          title: Period start
          type: string
          description: The start date and time for this policy term
          format: date-time
          readOnly: true
        account:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        totalCost:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        ccPolicySystemId:
          title: CC policy system ID
          type: string
          description: Integration ID for use in ClaimCenter (Since 1.5.0)
          readOnly: true
          x-gw-sinceVersion: 1.5.0
          x-gw-extensions:
            defaultViews:
              - none
      description: An insurance policy
    PolicyContact:
      title: Policy contact
      type: object
      properties:
        lastName:
          title: Last name
          type: string
          description: >-
            The person's last name. Only applicable for a `PolicyContact` that
            represents a person.
          x-gw-extensions:
            entitySubtype: Person
            validateSubtype: false
        student:
          title: Student
          type: boolean
          description: >-
            A `true` value indicates that the person qualifies as a student.
            Only applicable for a `PolicyContact` that represents a person.
            (Since 1.1.0)
          x-gw-nullable: true
          x-gw-sinceVersion: 1.1.0
          x-gw-extensions:
            defaultViews:
              - detail
            entitySubtype: Person
            validateSubtype: false
        displayName:
          title: Display name
          type: string
          description: >-
            A formatted representation of the full name for this
            `PolicyContact', including all applicable fields such as `firstName`
            or `lastName`
          readOnly: true
        officialIds:
          $ref: '#/components/schemas/policyperiod_OfficialIDMap'
        companyName:
          title: Company name
          type: string
          description: >-
            The name of the company represented by this `PolicyContact`. Only
            applicable for a `PolicyContact` that represents a company.
          x-gw-extensions:
            entitySubtype: Company
            validateSubtype: false
        emailAddress1:
          title: E-mail address 1
          type: string
          description: The contact's primary e-mail address
          x-gw-nullable: true
        doNotOrderMVR:
          title: Do not order motor vehicle record
          type: boolean
          description: >-
            If set to `true`, indicates that motor vehicle records should not be
            ordered for this driver. Only applicable for a `PolicyContact` that
            represents a person. (Since 1.4.0)
          x-gw-nullable: true
          x-gw-sinceVersion: 1.4.0
          x-gw-extensions:
            entitySubtype: Person
            validateSubtype: false
        emailAddress2:
          title: E-mail address 2
          type: string
          description: The contact's secondary e-mail address
          x-gw-nullable: true
          x-gw-extensions:
            defaultViews:
              - detail
        goodDriverDiscount:
          title: Good driver discount
          type: boolean
          description: >-
            A `true` value indicates that the person qualifies for a good driver
            discount. Only applicable for a `PolicyContact` that represents a
            person. (Since 1.1.0)
          x-gw-nullable: true
          x-gw-sinceVersion: 1.1.0
          x-gw-extensions:
            defaultViews:
              - detail
            entitySubtype: Person
            validateSubtype: false
        industryCode:
          $ref: '#/components/schemas/policyperiod_ReferenceTableEntry'
        dateCompletedTrainingClass:
          title: Driver training class completion date
          type: string
          description: >-
            The date that the person completed a driver training class. Only
            applicable for a `PolicyContact` that represents a person. (Since
            1.1.0)
          format: date
          x-gw-nullable: true
          x-gw-sinceVersion: 1.1.0
          x-gw-extensions:
            before: now
            defaultViews:
              - detail
            entitySubtype: Person
            validateSubtype: false
        relationshipTitle:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        yearLicensed:
          title: Year licensed
          type: integer
          description: >-
            The year that the person first acquired a driver's license. Only
            applicable for a `PolicyContact` that represents a person. (Since
            1.1.0)
          x-gw-nullable: true
          x-gw-sinceVersion: 1.1.0
          x-gw-extensions:
            defaultViews:
              - detail
            entitySubtype: Person
            validateSubtype: false
        licenseNumber:
          title: Driver's license number
          type: string
          description: >-
            The person's driver's license number. Only applicable for a
            `PolicyContact` that represents a person.
          x-gw-nullable: true
          x-gw-extensions:
            entitySubtype: Person
            validateSubtype: false
        particle:
          title: Particle
          type: string
          description: >-
            The particle portion of the name of the person represented by this
            `PolicyContact`. Only applicable for a `PolicyContact` that
            represents a person. (Since 1.2.0)
          x-gw-nullable: true
          x-gw-sinceVersion: 1.2.0
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        numberOfAccidents:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        numberOfViolations:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        lastNameKanji:
          title: Last name kanji
          type: string
          description: >-
            The kanji version of the last name of the person represented by this
            `PolicyContact`. Only applicable for a `PolicyContact` that
            represents a person. (Since 1.2.0)
          x-gw-nullable: true
          x-gw-sinceVersion: 1.2.0
        licenseState:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        primaryPhoneType:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        homePhone:
          $ref: '#/components/schemas/policyperiod_PhoneNumber'
        externalId:
          title: External ID
          type: string
          description: >-
            A unique identifier assigned by the application for use when the
            `addressBookUID` field is null
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - detail
        dateOfBirth:
          title: Date of birth
          type: string
          description: >-
            The person's date of birth. Only applicable for a `PolicyContact`
            that represents a person.
          format: date
          x-gw-nullable: true
          x-gw-extensions:
            before: now
            entitySubtype: Person
            validateSubtype: false
        firstNameKanji:
          title: First name kanji
          type: string
          description: >-
            The kanji version of the first name of the person represented by
            this `PolicyContact`. Only applicable for a `PolicyContact` that
            represents a person. (Since 1.2.0)
          x-gw-nullable: true
          x-gw-sinceVersion: 1.2.0
        policyNumberOfViolations:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        firstName:
          title: First name
          type: string
          description: >-
            The persons's first name. Only applicable for a `PolicyContact` that
            represents a person.
          x-gw-extensions:
            entitySubtype: Person
            validateSubtype: false
        primaryPhone:
          title: Primary phone
          type: string
          description: >-
            The contact's primary phone number, as determined by the type of
            phone number selected in the `primaryPhoneType` field
          readOnly: true
        accountContact:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        addressBookUID:
          title: Address book UID
          type: string
          description: >-
            The unique ID of this contact within the contact management system.
            This field is only set if the contact has been linked to a contact
            management system.
          x-gw-nullable: true
          x-gw-extensions:
            defaultViews:
              - detail
        taxId:
          title: Tax ID
          type: string
          description: The contact's tax ID
          x-gw-nullable: true
        trainingClassType:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        workPhone:
          $ref: '#/components/schemas/policyperiod_PhoneNumber'
        primaryAddress:
          $ref: '#/components/schemas/policyperiod_Address'
        companyNameKanji:
          title: Company name kanji
          type: string
          description: >-
            The kanji version of the name of the company represented by this
            `PolicyContact`. Only applicable for a `PolicyContact` that
            represents a company. (Since 1.2.0)
          x-gw-nullable: true
          x-gw-sinceVersion: 1.2.0
        primaryLocale:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        applicableGoodDriverDiscount:
          title: Applicable good driver discount
          type: boolean
          description: >-
            A `true` value indicates that the person qualifies for a good driver
            discount and that discount applies to this policy. Only applicable
            for a `PolicyContact` that represents a person.
          x-gw-nullable: true
          x-gw-extensions:
            entitySubtype: Person
            validateSubtype: false
        cellPhone:
          $ref: '#/components/schemas/policyperiod_PhoneNumber'
        maritalStatus:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        primaryLanguage:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        contactSubtype:
          title: Contact subtype
          type: string
          description: >-
            The specific type of contact represented by this `PolicyContact`,
            such as `Person` or `Company`
          x-gw-extensions:
            createOnly: true
            filterable: true
          x-gw-type: typekey.Contact
        excludedDriver:
          title: Excluded driver
          type: boolean
          description: >-
            If set to `true`, indicates that this driver is explicitly not
            covered by this policy. Only applicable for a `PolicyContact` that
            represents a person. (Since 1.4.0)
          x-gw-nullable: true
          x-gw-sinceVersion: 1.4.0
          x-gw-extensions:
            entitySubtype: Person
            validateSubtype: false
        policyNumberOfAccidents:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        ccPolicySystemId:
          title: CC policy system ID
          type: string
          description: Integration ID for use in ClaimCenter (Since 1.5.0)
          readOnly: true
          x-gw-sinceVersion: 1.5.0
          x-gw-extensions:
            defaultViews:
              - none
      description: >-
        A `PolicyContact` represents a person or company that is referenced on
        an insurance policy. Each `PolicyContact` is linked to an
        `AccountContact` on the policy's account.
      x-gw-extensions:
        discriminatorProperty: contactSubtype
    PolicyLine:
      title: Policy line
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The human-readable name for this `PolicyLine`
          readOnly: true
        id:
          title: ID
          type: string
          description: The unique identifier of this element
        numAddInsured:
          title: Number of additional insureds
          type: integer
          description: >-
            The number of additional insureds for this line. Used for quick
            quotes where the number can be specified, but actual details of the
            additional insureds are not entered.
        pattern:
          $ref: '#/components/schemas/ProductModelReference'
        patternCode:
          title: Pattern code
          type: string
          description: The `id` for the `PolicyLinePattern` that defines this `PolicyLine`
      description: >-
        A `PolicyLine` represents the information about a single line of
        business on an insurance policy
    PolicyLocation:
      title: Policy location
      type: object
      properties:
        addressLine1Kanji:
          title: Address line 1 kanji
          type: string
          description: >-
            The kanji version of the first line of the location's address. Only
            applicable in certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        country:
          title: Country
          type: string
          description: >-
            The country of the location's address. The value of the `country`
            field will affect which other fields are applicable.
          x-gw-nullable: true
          x-gw-extensions:
            createOnly: true
            defaultViews:
              - detail
          x-gw-type: typekey.Country
        cityKanji:
          title: City kanji
          type: string
          description: >-
            The kanji version of the city of the location's address. Only
            applicable in certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        CEDEX:
          title: CEDEX
          maxLength: 2
          type: string
          description: >-
            The CEDEX bureau of the location's address. Only applicable in
            certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        city:
          title: City
          type: string
          description: The city of the location's address
          x-gw-nullable: true
        prefecture:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        displayName:
          title: Display name
          type: string
          description: >-
            The formatted value of the location represented by this
            `PolicyLocation`, including all standard fields for the address's
            country
          readOnly: true
        postalCode:
          title: Postal code
          type: string
          description: >-
            The postal code of the location's address. Only applicable in
            certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        county:
          title: County
          type: string
          description: >-
            The county of the location's address. Only applicable in certain
            countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
            defaultViews:
              - detail
        description:
          title: Description
          type: string
          description: A description of the location
          x-gw-nullable: true
        employeeCount:
          title: Employee count
          type: integer
          description: The number of employees at this location
          x-gw-nullable: true
        industryCode:
          $ref: '#/components/schemas/policyperiod_ReferenceTableEntry'
        province:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        parish:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        accountLocation:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        addressLine1:
          title: Address line 1
          type: string
          description: The first line of the location's address
          x-gw-nullable: true
        addressLine2:
          title: Address line 2
          type: string
          description: The second line of the location's address
          x-gw-nullable: true
          x-gw-extensions:
            defaultViews:
              - detail
        addressLine3:
          title: Address line 3
          type: string
          description: The third line of the location's address
          x-gw-nullable: true
          x-gw-extensions:
            defaultViews:
              - detail
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        state:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        department:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        area:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        territoryCodes:
          $ref: '#/components/schemas/TerritoryCodesMap'
        addressType:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        island:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        oblast:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        addressLine2Kanji:
          title: Address line 2 kanji
          type: string
          description: >-
            The kanji version of the second line of the location's address. Only
            applicable in certain countries.
          x-gw-nullable: true
          x-gw-extensions:
            countryRestricted: true
        fireProtectionClass:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        taxLocation:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        emirate:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        validUntil:
          title: Valid until
          type: string
          description: A date and time after which this information is no longer valid
          format: date-time
          x-gw-nullable: true
        locationNum:
          title: Location number
          type: integer
          description: >-
            The number automatically assigned to this location in the context of
            this policy
          readOnly: true
          x-gw-extensions:
            filterable: true
            sortable: true
        primary:
          title: >-
            If true then this policy location is the primary location on this
            policy
          type: boolean
          description: >-
            A `true` value indicates that this policy location is the primary
            location on this policy (Since 1.4.0)
          readOnly: true
          x-gw-sinceVersion: 1.4.0
        ccPolicySystemId:
          title: CC policy system ID
          type: string
          description: Integration ID for use in ClaimCenter (Since 1.5.0)
          readOnly: true
          x-gw-sinceVersion: 1.5.0
          x-gw-extensions:
            defaultViews:
              - none
      description: >-
        A `PolicyLocation` represents a location relevant to the insurance
        policy. It combines an address for the location with other attributes of
        the location that may be relevant to the policy.
      x-gw-extensions:
        discriminatorProperty: country
        wizardStepId: Locations
    PolicyPeriod:
      title: Policy period
      type: object
      properties:
        jobStatus:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        organizationOfService:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        policyNumber:
          title: Policy number
          type: string
          description: The number assigned to this policy
          readOnly: true
        primaryInsured:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        termType:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        producerCode:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        depositOverridePercentage:
          title: Deposit override percentage
          type: string
          description: >-
            Override of the default reporting deposit percentage of the
            reporting pattern chosen (Since 1.5.0)
          format: gw-bigdecimal
          readOnly: true
          x-gw-nullable: true
          x-gw-sinceVersion: 1.5.0
          x-gw-extensions:
            defaultViews:
              - detail
        sourcePolicy:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        baseState:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        producerCodeOfService:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        primaryLocation:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        id:
          title: ID
          type: string
          description: The unique identifier of this element
        periodEnd:
          title: Period end
          type: string
          description: The end date and time for this policy term
          format: date-time
          readOnly: true
        depositAmount:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        jobEffectiveDate:
          title: Job effective date
          type: string
          description: >-
            The date and time when the job that this `PolicyPeriod` belongs to
            will become effective. The exact meaning depends upon the `jobType`
            of the job. For example, for a `Sumbission` job, this will be the
            start date for the new policy, while for a `Cancellation` job this
            will be the date the policy is cancelled.
          format: date-time
          readOnly: true
        product:
          $ref: '#/components/schemas/ProductModelReference'
        sourceAccount:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        finalAuditOption:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        additionalNamedInsureds:
          title: Additional named insureds
          type: array
          description: The list of additional named insureds on the policy (Since 1.4.0)
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/AdditionalNamedInsured'
          x-gw-sinceVersion: 1.4.0
          x-gw-extensions:
            defaultViews:
              - detail
        preferredCoverageCurrency:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        totalPremium:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        uwCompany:
          $ref: '#/components/schemas/UWCompanyReference'
        sliceDate:
          title: Slice date
          type: string
          description: >-
            The specific effective date and time that this period represents
            within the policy
          format: date-time
        affinityGroup:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        taxesAndSurcharges:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        createdDate:
          title: Created date
          type: string
          description: The date and time that this element was created
          format: date-time
          readOnly: true
          x-gw-extensions:
            sortable: true
        organization:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        targetAccount:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        targetPolicy:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        periodStart:
          title: Period start
          type: string
          description: The start date and time for this policy term
          format: date-time
          readOnly: true
        account:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        totalCost:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        ccPolicySystemId:
          title: CC policy system ID
          type: string
          description: Integration ID for use in ClaimCenter (Since 1.5.0)
          readOnly: true
          x-gw-sinceVersion: 1.5.0
          x-gw-extensions:
            defaultViews:
              - none
      description: >-
        A `PolicyPeriod` represents a version of the policy on a specific
        effective date
    PolicyPeriodBase:
      type: object
      properties:
        organizationOfService:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        policyNumber:
          title: Policy number
          type: string
          description: The number assigned to this policy
          readOnly: true
        primaryInsured:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        termType:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        producerCode:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        sourcePolicy:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        baseState:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        producerCodeOfService:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        primaryLocation:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        id:
          title: ID
          type: string
          description: The unique identifier of this element
        periodEnd:
          title: Period end
          type: string
          description: The end date and time for this policy term
          format: date-time
          readOnly: true
        product:
          $ref: '#/components/schemas/ProductModelReference'
        sourceAccount:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        finalAuditOption:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        additionalNamedInsureds:
          title: Additional named insureds
          type: array
          description: The list of additional named insureds on the policy (Since 1.4.0)
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/AdditionalNamedInsured'
          x-gw-sinceVersion: 1.4.0
          x-gw-extensions:
            defaultViews:
              - detail
        preferredCoverageCurrency:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        totalPremium:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        uwCompany:
          $ref: '#/components/schemas/UWCompanyReference'
        affinityGroup:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        taxesAndSurcharges:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        createdDate:
          title: Created date
          type: string
          description: The date and time that this element was created
          format: date-time
          readOnly: true
          x-gw-extensions:
            sortable: true
        organization:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        targetAccount:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        targetPolicy:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        periodStart:
          title: Period start
          type: string
          description: The start date and time for this policy term
          format: date-time
          readOnly: true
        account:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        totalCost:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        ccPolicySystemId:
          title: CC policy system ID
          type: string
          description: Integration ID for use in ClaimCenter (Since 1.5.0)
          readOnly: true
          x-gw-sinceVersion: 1.5.0
          x-gw-extensions:
            defaultViews:
              - none
    PolicyPeriodSearchRequestAttributes:
      type: object
      properties:
        city:
          title: City
          type: string
          description: The `city` of the `primaryAddress` on the `primaryInsured`
        companyName:
          title: Company name
          type: string
          description: The `companyName` of the `primaryInsured`
        country:
          title: Country
          type: string
          description: >-
            The `country` of the `primaryAddress` on the `primaryInsured` (Since
            1.4.0)
          x-gw-sinceVersion: 1.4.0
          x-gw-type: typekey.Country
        firstName:
          title: First name
          type: string
          description: The `firstName` of the `primaryInsured`
        jurisdiction:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        lastName:
          title: Last name
          type: string
          description: The `lastName` of the `primaryInsured`
        officialId:
          title: Official ID
          type: string
          description: The `value` of an `OfficialID` on the `primaryInsured`
        phone:
          title: Phone
          type: string
          description: The `workPhone` of the `primaryInsured`
        policyNumber:
          title: Policy number
          type: string
          description: The `policyNumber` for the policy
        postalCode:
          title: Postal code
          type: string
          description: The `postalCode` of the `primaryAddress` on the `primaryInsured`
        producerCode:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        product:
          $ref: '#/components/schemas/ProductModelReference'
        state:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        street:
          title: Street
          type: string
          description: >-
            Part of the street address of the `primaryAddress` on the
            `primaryInsured`
    PolicyPeriodSearchResult:
      title: Policy period search result
      type: object
      properties:
        accountNumber:
          title: Account number
          type: string
          description: The `accountNumber` on the account for this policy
          readOnly: true
        effectiveDate:
          title: Effective date
          type: string
          description: The date on which this particular period became effective
          format: date-time
          readOnly: true
        expirationDate:
          title: Expiration date
          type: string
          description: The date on which this particular period ceased being in effect
          format: date-time
          readOnly: true
        insuredName:
          title: Insured name
          type: string
          description: The name of the primary named insured for this policy
          readOnly: true
        policyAddress:
          title: Policy address
          type: string
          description: The formatted address of the primary location for this policy
          readOnly: true
        policyNumber:
          title: Policy number
          type: string
          description: The assigned number for this policy
          readOnly: true
        producerOfRecordName:
          title: Producer of record name
          type: string
          description: >-
            The name of the `ProducerCode` assigned as the producer of record
            for this policy
          readOnly: true
        producerOfServiceName:
          title: Producer of service name
          type: string
          description: >-
            The name of the `ProducerCode` assigned as the producer of service
            for this policy
          readOnly: true
        product:
          $ref: '#/components/schemas/ProductModelReference'
      description: A limited view of the data on a policy period as returned from a search
    PolicySearchRequestAttributes:
      title: Policy search request attributes
      type: object
      properties:
        inForceOn:
          title: In force on
          type: string
          description: A date that the policy is in force on
          format: date
        country:
          title: Country
          type: string
          description: >-
            The `country` of the `primaryAddress` on the `primaryInsured` (Since
            1.4.0)
          x-gw-sinceVersion: 1.4.0
          x-gw-type: typekey.Country
        lastName:
          title: Last name
          type: string
          description: The `lastName` of the `primaryInsured`
        officialId:
          title: Official ID
          type: string
          description: The `value` of an `OfficialID` on the `primaryInsured`
        product:
          $ref: '#/components/schemas/ProductModelReference'
        city:
          title: City
          type: string
          description: The `city` of the `primaryAddress` on the `primaryInsured`
        companyName:
          title: Company name
          type: string
          description: The `companyName` of the `primaryInsured`
        jurisdiction:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        postalCode:
          title: Postal code
          type: string
          description: The `postalCode` of the `primaryAddress` on the `primaryInsured`
        policyNumber:
          title: Policy number
          type: string
          description: The `policyNumber` for the policy
        producerCode:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        firstName:
          title: First name
          type: string
          description: The `firstName` of the `primaryInsured`
        phone:
          title: Phone
          type: string
          description: The `workPhone` of the `primaryInsured`
        street:
          title: Street
          type: string
          description: >-
            Part of the street address of the `primaryAddress` on the
            `primaryInsured`
        state:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
      description: Details of the policy to search for
    PolicySearchResult:
      title: Policy search result
      type: object
      properties:
        producerOfRecordName:
          title: Producer of record name
          type: string
          description: >-
            The name of the `ProducerCode` assigned as the producer of record
            for this policy
          readOnly: true
        producerOfServiceName:
          title: Producer of service name
          type: string
          description: >-
            The name of the `ProducerCode` assigned as the producer of service
            for this policy
          readOnly: true
        product:
          $ref: '#/components/schemas/ProductModelReference'
        policyId:
          title: ID
          type: string
          description: The unique identifier for the `Policy`
          readOnly: true
        policyNumber:
          title: Policy number
          type: string
          description: The assigned number for this policy
          readOnly: true
        policyAddress:
          title: Policy address
          type: string
          description: The formatted address of the primary location for this policy
          readOnly: true
        accountNumber:
          title: Account number
          type: string
          description: The `accountNumber` on the account for this policy
          readOnly: true
        insuredName:
          title: Insured name
          type: string
          description: The name of the primary named insured for this policy
          readOnly: true
        effectiveDate:
          title: Effective date
          type: string
          description: The date on which this particular period became effective
          format: date-time
          readOnly: true
        expirationDate:
          title: Expiration date
          type: string
          description: The date on which this particular period ceased being in effect
          format: date-time
          readOnly: true
      description: A limited view of the data on a policy as returned from a search
    PreRenewalDirectionRequest:
      title: Pre-renewal direction request
      required:
        - body
        - direction
        - securityType
      type: object
      properties:
        assignTo:
          $ref: '#/components/schemas/policyperiod_Assignee'
        body:
          title: Body
          minLength: 1
          pattern: \S
          type: string
          description: The text body for the pre-renewal note
        direction:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        nonRenewAdditionalExplanations:
          title: Non-renewal reason additional explanations
          type: array
          description: Additional reasons for advising a non-renewal
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/NonRenewalExplanation'
        nonRenewReason:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        nonRenewReasonText:
          title: Non-renewal reason text
          type: string
          description: A more detailed explanation of the reason to not renew the policy
        securityType:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        subject:
          title: Subject
          minLength: 1
          pattern: \S
          type: string
          description: The subject for the pre-renewal note
          x-gw-extensions:
            filterable: true
            sortable: true
      description: Details of the pre-renewal direction for a policy
    PrimaryNamedInsuredAttributes:
      title: Policy named insured attributes
      required:
        - primaryNamedInsured
      type: object
      properties:
        primaryNamedInsured:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
      description: The new `primaryNamedInsured` for the policy (Since 1.4.0)
      x-gw-sinceVersion: 1.4.0
    PriorLoss:
      title: Prior loss
      type: object
      properties:
        amountPaid:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        description:
          title: Description
          type: string
          description: An extended description of this prior loss
          x-gw-nullable: true
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        lossStatus:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        occurrenceDate:
          title: Occurrence date
          type: string
          description: The date of the loss event
          format: date
          x-gw-nullable: true
          x-gw-extensions:
            sortable: true
        openReserve:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        totalIncurred:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
      description: >-
        A manually-entered history of a prior loss for this policy. The
        `lossHistoryType` of a job or policy must be `man` to have prior loss
        details. (Since 1.5.0)
      x-gw-sinceVersion: 1.5.0
    PriorPolicy:
      title: Prior policy
      type: object
      properties:
        annualPremium:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        carrier:
          title: Carrier
          type: string
          description: Name of the carrier
          x-gw-nullable: true
          x-gw-extensions:
            sortable: true
        effectiveDate:
          title: Effective date
          type: string
          description: The start effective date for this `PriorPolicy`
          format: date
          x-gw-extensions:
            sortable: true
        expirationDate:
          title: Expiration date
          type: string
          description: The end effective date for this `PriorPolicy`
          format: date
          x-gw-nullable: true
          x-gw-extensions:
            sortable: true
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        numLosses:
          title: Number of losses
          minimum: 0
          type: integer
          description: Number of losses in the last 3 years
          x-gw-nullable: true
          x-gw-extensions:
            sortable: true
        policyLinePatternCode:
          title: Policy line pattern code
          type: string
          description: The `id` of the `PolicyLinePattern` associated with the prior policy
          x-gw-nullable: true
        policyNumber:
          title: Policy number
          type: string
          description: Policy number
          x-gw-nullable: true
        totalLosses:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        totalPremium:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
      description: >-
        Details prior coverage information including policy term, carrier,
        premiums and losses (Since 1.5.0)
      x-gw-sinceVersion: 1.5.0
    ProductEditionReference:
      title: Product edition reference
      type: object
      properties:
        editionCode:
          title: Edition code
          type: string
          description: The code of the product edition
          readOnly: true
        worksetUid:
          title: Workset UID
          type: string
          description: The unique identifier of the workset associated with this edition
          readOnly: true
      description: A reference to a specific edition of a product
    ProductModelChoice:
      title: Product model choice
      required:
        - code
      type: object
      properties:
        code:
          title: Code
          minLength: 1
          type: string
          description: The unique code that identifies the choice
        name:
          title: Name
          type: string
          description: The name of the choice
      description: >-
        A specific enumerated value available in the context of an option or
        package coverage term
    ProductModelReference:
      title: Product model reference
      required:
        - id
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The formatted name of the referenced element
        id:
          title: ID
          minLength: 1
          type: string
          description: The unique identifier of the referenced element
        type:
          title: Type
          type: string
          description: The type of the referenced element
      description: >-
        A reference to some product model element, such as a `CoveragePattern`
        or `PolicyLinePattern`
    QuestionAnswer:
      title: Question answer
      type: object
      properties:
        booleanValue:
          title: Boolean value
          type: boolean
          description: >-
            The value of this answer as a Boolean. Only applicable if
            `questionType` is `Boolean`.
          x-gw-nullable: true
        choiceValue:
          $ref: '#/components/schemas/ProductModelChoice'
        dateValue:
          title: Date value
          type: string
          description: >-
            The value of this answer as a date-time value. Only applicable if
            `questionType` is `Date`.
          format: date-time
          x-gw-nullable: true
        displayValue:
          title: Display value
          type: string
          description: A formatted, read-only view of the value of this answer
          readOnly: true
        integerValue:
          title: Integer value
          type: integer
          description: >-
            The value of this answer as an integer. Only applicable if
            `questionType` is `Integer`.
          x-gw-nullable: true
        question:
          $ref: '#/components/schemas/ProductModelReference'
        questionType:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        textValue:
          title: Text value
          type: string
          description: >-
            The value of this answer as a string. Only applicable if
            `questionType` is `String`.
          x-gw-nullable: true
      description: Contains the value of the answer to a single question
    QuestionAnswers:
      title: Question answers
      required:
        - answers
      type: object
      properties:
        answers:
          $ref: '#/components/schemas/QuestionAnswersMap'
      description: >-
        An object that contains answers to the questions on the containing
        object
    QuestionAnswersMap:
      title: Question answers map
      type: object
      additionalProperties:
        $ref: '#/components/schemas/QuestionAnswer'
      description: >-
        An object that contains answers to the questions on the containing
        element. The keys in this object are the `id` values for the
        `QuestionPattern` elements that apply to the containing element.
    policyperiod_QueueDetail:
      title: Queue detail
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The name of the `Queue`
        id:
          title: ID
          type: string
          description: The unique identifier of the `Queue`
      description: Used to represent a reference to a `Queue`
      xml:
        name: QueueDetail
    RateFactor:
      title: Rate factor
      type: object
      properties:
        assessment:
          title: Assessment
          type: string
          description: The credit or debit multiplier for this rate factor
          format: gw-bigdecimal
        justification:
          title: Justification
          type: string
          description: An additional comment to justify this rate factor
          x-gw-nullable: true
        pattern:
          $ref: '#/components/schemas/ProductModelReference'
      description: >-
        A `RateFactor` represents a single rating factor that is one component
        of the calculation of a `Modifier` value
    RateFactorsMap:
      title: Rate factors map
      type: object
      additionalProperties:
        $ref: '#/components/schemas/RateFactor'
      description: >-
        An object that contains a set of `RateFactor` values for a `Modifier`.
        The keys in this object are the `code` values for the
        `RateFactorPattern` elements that apply to the containing `Modifier`.
    policyperiod_ReferenceTableEntry:
      title: Reference table entry
      type: object
      properties:
        code:
          title: Code
          type: string
          description: The code of the reference table entry
        description:
          title: Description
          type: string
          description: The description of the reference table entry
        id:
          title: ID
          type: string
          description: The unique identifier of this element
      description: >-
        A single element from a reference table. Reference tables typically
        represent things like standardized lists of codes.
      xml:
        name: ReferenceTableEntry
    policyperiod_RelatedCollection:
      title: Related collection
      type: object
      properties:
        count:
          title: Count
          type: integer
          description: The number of elements included in the `data` array
        data:
          title: Data
          type: array
          description: The list of references to the related elements
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/policyperiod_SimpleReference'
        total:
          title: Total
          type: integer
          description: >-
            The total number of elements in the related set of elements. Only
            present if the `includeTotal` query parameter is used to request
            that the total be calculated for an included collection.
      description: >-
        A set of element references that are related to the element in some way.
        Used to link elements with their relations when a request is made using
        the `include` query parameter.
      xml:
        name: RelatedCollection
    policyperiod_RelatedCollections:
      title: Related collections
      type: object
      additionalProperties:
        $ref: '#/components/schemas/policyperiod_RelatedCollection'
      description: >-
        A set of `RelatedCollection` elements that contain references to
        elements included using the `include` query parameter on a request
      xml:
        name: RelatedCollections
    ReleaseEditLockAttributes:
      title: Release edit lock attributes
      type: object
      properties:
        activity:
          $ref: '#/components/schemas/policyperiod_Activity'
        note:
          $ref: '#/components/schemas/policyperiod_Note'
      description: Details of releasing an edit lock on a job (Since 1.3.0)
      x-gw-sinceVersion: 1.3.0
    RequestApprovalAttributes:
      title: Request approval attributes
      type: object
      properties:
        activity:
          $ref: '#/components/schemas/policyperiod_Activity'
        note:
          $ref: '#/components/schemas/policyperiod_Note'
      description: Details of requesting approval on a job (Since 1.3.0)
      x-gw-sinceVersion: 1.3.0
    RescheduleAttributes:
      title: Reschedule attributes
      required:
        - processDate
      type: object
      properties:
        processDate:
          title: Process date
          type: string
          description: The new date that the cancellation should be scheduled for
          format: date
      description: Details of rescheduling the cancellation (Since 1.1.0)
      x-gw-sinceVersion: 1.1.0
    ResolveOOSConflictsAttributes:
      title: Resolve out-of-sequence conflicts attributes
      required:
        - overrides
      type: object
      properties:
        overrides:
          title: Overrides
          type: array
          description: >-
            The list of `OOSConflictOverride` values that specify how
            out-of-sequence conflicts should be resolved
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/OOSConflictOverride'
      description: >-
        Details of how the out-of-sequence conflicts should be resolved (Since
        1.2.0)
      x-gw-sinceVersion: 1.2.0
    ScheduledItem:
      title: Scheduled item
      type: object
      properties:
        id:
          title: ID
          type: string
          description: The unique identifier of this element
        properties:
          $ref: '#/components/schemas/ScheduledItemPropertyMap'
      description: >-
        A scheduled item on a coverage, such as one item on a list of high-value
        items on a personal property policy
    ScheduledItemProperty:
      title: Scheduled item property
      type: object
      properties:
        booleanValue:
          title: Boolean value
          type: boolean
          description: >-
            The value of this property as a Boolean. Only applicable if
            `valueType` is `boolean`.
          x-gw-nullable: true
        choiceValue:
          $ref: '#/components/schemas/ProductModelChoice'
        dateOnlyValue:
          title: Date value
          type: string
          description: >-
            The value of this property as a date. Only applicable if `valueType`
            is `date`.
          format: date
          x-gw-nullable: true
        dateTimeValue:
          title: Date-time value
          type: string
          description: >-
            The value of this property as a date and time. Only applicable if
            `valueType` is `datetime`.
          format: date-time
          x-gw-nullable: true
        decimalValue:
          title: Decimal value
          type: string
          description: >-
            The value of this property as a decimal. Only applicable if
            `valueType` is `decimal`.
          format: gw-bigdecimal
          x-gw-nullable: true
        displayValue:
          title: Display value
          type: string
          description: The formatted, read-only value of this property
          readOnly: true
        integerValue:
          title: Integer value
          type: string
          description: >-
            The value of this property as an integer. Only applicable if
            `valueType` is `integer`.
          format: gw-biginteger
          x-gw-nullable: true
        locationValue:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        partyValue:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        stringValue:
          title: String value
          type: string
          description: >-
            The value of this property as a string. Only applicable if
            `valueType` is `string`.
          x-gw-nullable: true
        typekeyValue:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        valueType:
          title: Value type
          type: string
          description: >-
            The value type of this property. This field determines which value
            field is applicable.
          readOnly: true
      description: The value of a single field on a scheduled item
    ScheduledItemPropertyMap:
      title: Scheduled item property map
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ScheduledItemProperty'
      description: >-
        This object contains the values for a `ScheduledItem` element. Each key
        in this object is the `id` of a `ScheduledItemPropertyPattern` that
        applies to the containing element.
    policyperiod_SimpleReference:
      title: Simple reference
      type: object
      properties:
        displayName:
          title: Display name
          type: string
          description: The formatted name of the element
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        jsonPath:
          title: JSON path
          type: string
          description: >-
            The path to the referenced element within the overall JSON document
            (Since 1.2.0)
          readOnly: true
          x-gw-sinceVersion: 1.2.0
          x-gw-extensions:
            defaultViews:
              - none
        refid:
          title: Reference ID
          type: string
          description: >-
            A unique identifier given to the newly created element in the
            context of the current request
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: A reference to an element
      xml:
        name: SimpleReference
      x-gw-extensions:
        resourceReference: true
    policyperiod_SpatialPoint:
      title: Spatial point
      required:
        - latitude
        - longitude
      type: object
      properties:
        latitude:
          title: Latitude
          type: string
          description: The latitude of the spatial point
          format: gw-bigdecimal
        longitude:
          title: Longitude
          type: string
          description: The longitude of the spatial point
          format: gw-bigdecimal
      description: An object that combines a latitude with a longitude (Since 1.2.0)
      xml:
        name: SpatialPoint
      x-gw-sinceVersion: 1.2.0
    TerritoryCode:
      title: Territory code
      type: object
      properties:
        code:
          title: Code
          type: string
          description: The `code` of the territory code
      description: >-
        The value of a `TerritoryCode` for a particular policy line (Since
        1.5.0)
      x-gw-sinceVersion: 1.5.0
    TerritoryCodesMap:
      title: Territory codes map
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TerritoryCode'
      description: Territory codes map (Since 1.5.0)
      x-gw-sinceVersion: 1.5.0
    policyperiod_TypeFilter:
      title: TypeFilter
      type: object
      properties:
        description:
          title: Description
          type: string
          description: The description of this `TypeFilter`
        name:
          title: Name
          type: string
          description: The name of this `TypeFilter`
        typeKeys:
          title: TypeKeys
          type: array
          description: >-
            The `code` values for the `TypeKeys` that are included by this
            `TypeFilter`
          xml:
            wrapped: true
          items:
            type: string
          x-gw-extensions:
            defaultViews:
              - detail
      description: >-
        A `TypeFilter` represents a filtered set of the `TypeKey` values from a
        `TypeList`
      xml:
        name: TypeFilter
    policyperiod_TypeKey:
      title: TypeKey
      type: object
      properties:
        categories:
          title: Categories
          type: array
          description: >-
            The categories that this `TypeKey` belongs to. Categories are
            formatted by combining the name of the `TypeList` with the `code`
            for its `TypeKey`, separated by a `.` character.
          xml:
            wrapped: true
          items:
            type: string
          x-gw-extensions:
            defaultViews:
              - none
        code:
          title: Code
          type: string
          description: >-
            The code for this `TypeKey`. `TypeKey` codes are unique within a
            `TypeList`.
        description:
          title: Description
          type: string
          description: The longer description of this `TypeKey`
        name:
          title: Name
          type: string
          description: The human-readable name of this `TypeKey`
        priority:
          title: Priority
          type: integer
          description: >-
            The order of this `TypeKey` relative to other `TypeKeys` in the same
            `TypeList`. A `TypeKey` with a lower `priority` will appear before a
            `TypeKey` with a higher priority when the values for a `TypeList`
            are presented in sorted order.
        retired:
          title: Retried
          type: boolean
          description: >-
            A `true` value for this field indicates that the `TypeKey` value
            should no longer be used. Retired `TypeKey` values are retained only
            for the sake of historical data that may already be using the
            `TypeKey`.
          x-gw-extensions:
            defaultViews:
              - none
      description: >-
        A `TypeKey` represents one of the possible enumerated values of a
        `TypeList`
      xml:
        name: TypeKey
    policyperiod_TypeKeyReference:
      title: TypeKey reference
      required:
        - code
      type: object
      properties:
        code:
          title: Code
          type: string
          description: The `code` of the `TypeKey`
        name:
          title: Name
          type: string
          description: The `name` of the `TypeKey`
      description: >-
        A reference to a `TypeKey` element that defines an enumerated value from
        a `TypeList`
      xml:
        name: TypeKeyReference
    policyperiod_TypeList:
      title: TypeList
      type: object
      properties:
        description:
          title: Description
          type: string
          description: The description of this `TypeList`
        name:
          title: Name
          type: string
          description: The name of this `TypeList`
          x-gw-extensions:
            filterable: true
            sortable: true
        typeFilters:
          title: TypeFilters
          type: array
          description: >-
            The set of `TypeFilters` available on this `TypeList`. A
            `TypeFilter` represents a filtered subset of the `TypeKeys` in this
            `TypeList`.
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/policyperiod_TypeFilter'
          x-gw-extensions:
            defaultViews:
              - detail
        typeKeys:
          title: TypeKeys
          type: array
          description: >-
            The list of `TypeKeys` available on this `TypeList`. A `TypeKey`
            represents one of the enumerated values that comprise this
            `TypeList`.
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/policyperiod_TypeKey'
          x-gw-extensions:
            defaultViews:
              - detail
      description: A `TypeList` represents a list of enumerated `TypeKey` values
      xml:
        name: TypeList
    UWCompanyReference:
      title: Underwriting company reference
      type: object
      properties:
        code:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        displayName:
          title: Display name
          type: string
          description: The formatted name of the referenced element
        id:
          title: ID
          type: string
          description: The unique identifier of the referenced element
        jsonPath:
          title: JSON path
          type: string
          description: The path to the referenced element within the overall JSON document
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - none
        refid:
          title: Reference ID
          type: string
          description: >-
            A unique identifier given to the newly created element in the
            context of the current request
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: A reference to an underwriting company (Since 1.3.0)
      x-gw-sinceVersion: 1.3.0
      x-gw-extensions:
        resourceReference: true
    UWIssue:
      title: Underwriting issue
      type: object
      properties:
        longDescription:
          title: Long description
          type: string
          description: A longer description of this issue
          x-gw-extensions:
            createOnly: true
        rejected:
          title: Rejected
          type: boolean
          description: A `true` value indicates that this issue has been rejected
          readOnly: true
        automaticApprovalCause:
          title: Automatic approval cause
          type: string
          description: >-
            An identifier for the specific policy transaction that automatically
            approved the issue
          readOnly: true
        hasApprovalOrRejection:
          title: Has approval or rejection
          type: boolean
          description: >-
            A `true` value indicates that the issue has been either approved or
            rejected
          readOnly: true
          x-gw-extensions:
            sortable: true
        decimalValue:
          title: Decimal value
          type: string
          description: >-
            The value of the issue as a decimal. Only applicable if `valueType`
            is `decimal`.
          format: gw-bigdecimal
          x-gw-extensions:
            createOnly: true
        autoApprovable:
          title: Auto-approvable
          type: boolean
          description: >-
            A `true` value indicates that the issue will be automatically
            approved during appropriate lifecycle actions if the caller has
            sufficient authority. Issues that are not auto-approvable must be
            manually approved instead.
          readOnly: true
        currentBlockingPoint:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        approvalInvalidFrom:
          title: Approval invalid from
          type: string
          description: >-
            The date on which the approval ceases to be valid. Only applicable
            if `approvalDurationType` is set to a value that specifies a
            particular amount of time, such as an approval that is valid for one
            year.
          format: date-time
          readOnly: true
        displayApprovalValue:
          title: Display approval value
          type: string
          description: The formatted, read-only value of the issue's approval
          readOnly: true
        valueType:
          title: Value type
          type: string
          description: >-
            The type of value for this issue and its approvals. This field will
            determine which of the value fields is applicable to this issue.
          readOnly: true
        integerValue:
          title: Integer value
          type: string
          description: >-
            The value of the issue as an integer. Only applicable if `valueType`
            is `integer`.
          format: gw-biginteger
          x-gw-extensions:
            createOnly: true
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        stateSetValue:
          $ref: '#/components/schemas/policyperiod_ExclusiveStateSet'
        rejectingUser:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        stateSetApprovalValue:
          $ref: '#/components/schemas/policyperiod_ExclusiveStateSet'
        decimalApprovalValue:
          title: Decimal approval value
          type: string
          description: >-
            The value of the issue's approval as a decimal. Only applicable if
            `valueType` is `decimal`.
          format: gw-bigdecimal
        issueKey:
          title: Issue key
          type: string
          description: >-
            A unique identifier for this issue that combines the type of issue
            with the policy element the issue applies to, if any
          readOnly: true
          x-gw-extensions:
            sortable: true
        approvalDurationType:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        active:
          title: Active
          type: boolean
          description: >-
            A `true` value indicates that the issue still applies to this
            policy. An issue will be marked inactive when it no longer applies
            to the policy, but can still be retained for historical purposes.
          readOnly: true
          x-gw-extensions:
            filterable: true
        shortDescription:
          title: Short description
          type: string
          description: A short description of this issue
          x-gw-nullable: true
          x-gw-extensions:
            createOnly: true
        displayValue:
          title: Display value
          type: string
          description: The formatted, read-only value of the issue
          readOnly: true
        issueType:
          $ref: '#/components/schemas/policyperiod_UWIssueTypeReference'
        moneyApprovalValue:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        comparator:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        integerApprovalValue:
          title: Integer approval value
          type: string
          description: >-
            The value of the issue's approval as an integer. Only applicable if
            `valueType` is `integer`.
          format: gw-biginteger
        valueVariesAcrossSlices:
          title: Value varies across slices
          type: boolean
          description: >-
            A `true` value for this field indicates that the value of the issue
            varies at different effective dates within the policy term
          readOnly: true
        blockingPoint:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        canEditApprovalBeforeBind:
          title: Can edit approval before bind
          type: boolean
          description: >-
            A `true` value indicates that this approval can still be edited
            before the containing `Job` is bound
        moneyValue:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        approvingUser:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        approvalBlockingPoint:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
      description: >-
        A `UWIssue` represents an issue identified as part of underwriting
        evaluation, either by automated rules or during manual review (Since
        1.2.0)
      x-gw-sinceVersion: 1.2.0
    UWIssueBase:
      title: Underwriting issue base
      type: object
      properties:
        approvalBlockingPoint:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        approvalDurationType:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        approvalInvalidFrom:
          title: Approval invalid from
          type: string
          description: >-
            The date on which the approval ceases to be valid. Only applicable
            if `approvalDurationType` is set to a value that specifies a
            particular amount of time, such as an approval that is valid for one
            year.
          format: date-time
          readOnly: true
        approvingUser:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        automaticApprovalCause:
          title: Automatic approval cause
          type: string
          description: >-
            An identifier for the specific policy transaction that automatically
            approved the issue
          readOnly: true
        blockingPoint:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        canEditApprovalBeforeBind:
          title: Can edit approval before bind
          type: boolean
          description: >-
            A `true` value indicates that this approval can still be edited
            before the containing `Job` is bound
        comparator:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        decimalApprovalValue:
          title: Decimal approval value
          type: string
          description: >-
            The value of the issue's approval as a decimal. Only applicable if
            `valueType` is `decimal`.
          format: gw-bigdecimal
        decimalValue:
          title: Decimal value
          type: string
          description: >-
            The value of the issue as a decimal. Only applicable if `valueType`
            is `decimal`.
          format: gw-bigdecimal
          x-gw-extensions:
            createOnly: true
        displayApprovalValue:
          title: Display approval value
          type: string
          description: The formatted, read-only value of the issue's approval
          readOnly: true
        displayValue:
          title: Display value
          type: string
          description: The formatted, read-only value of the issue
          readOnly: true
        hasApprovalOrRejection:
          title: Has approval or rejection
          type: boolean
          description: >-
            A `true` value indicates that the issue has been either approved or
            rejected
          readOnly: true
          x-gw-extensions:
            sortable: true
        integerApprovalValue:
          title: Integer approval value
          type: string
          description: >-
            The value of the issue's approval as an integer. Only applicable if
            `valueType` is `integer`.
          format: gw-biginteger
        integerValue:
          title: Integer value
          type: string
          description: >-
            The value of the issue as an integer. Only applicable if `valueType`
            is `integer`.
          format: gw-biginteger
          x-gw-extensions:
            createOnly: true
        issueKey:
          title: Issue key
          type: string
          description: >-
            A unique identifier for this issue that combines the type of issue
            with the policy element the issue applies to, if any
          readOnly: true
          x-gw-extensions:
            sortable: true
        issueType:
          $ref: '#/components/schemas/policyperiod_UWIssueTypeReference'
        moneyApprovalValue:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        moneyValue:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        rejected:
          title: Rejected
          type: boolean
          description: A `true` value indicates that this issue has been rejected
          readOnly: true
        rejectingUser:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        stateSetApprovalValue:
          $ref: '#/components/schemas/policyperiod_ExclusiveStateSet'
        stateSetValue:
          $ref: '#/components/schemas/policyperiod_ExclusiveStateSet'
        valueType:
          title: Value type
          type: string
          description: >-
            The type of value for this issue and its approvals. This field will
            determine which of the value fields is applicable to this issue.
          readOnly: true
      description: Base schema for both `UWIssue` and `UWIssueHistory`
    UWIssueHistory:
      title: Underwriting issue history
      type: object
      properties:
        rejected:
          title: Rejected
          type: boolean
          description: A `true` value indicates that this issue has been rejected
          readOnly: true
        automaticApprovalCause:
          title: Automatic approval cause
          type: string
          description: >-
            An identifier for the specific policy transaction that automatically
            approved the issue
          readOnly: true
        hasApprovalOrRejection:
          title: Has approval or rejection
          type: boolean
          description: >-
            A `true` value indicates that the issue has been either approved or
            rejected
          readOnly: true
          x-gw-extensions:
            sortable: true
        decimalValue:
          title: Decimal value
          type: string
          description: >-
            The value of the issue as a decimal. Only applicable if `valueType`
            is `decimal`.
          format: gw-bigdecimal
          x-gw-extensions:
            createOnly: true
        approvalInvalidFrom:
          title: Approval invalid from
          type: string
          description: >-
            The date on which the approval ceases to be valid. Only applicable
            if `approvalDurationType` is set to a value that specifies a
            particular amount of time, such as an approval that is valid for one
            year.
          format: date-time
          readOnly: true
        displayApprovalValue:
          title: Display approval value
          type: string
          description: The formatted, read-only value of the issue's approval
          readOnly: true
        valueType:
          title: Value type
          type: string
          description: >-
            The type of value for this issue and its approvals. This field will
            determine which of the value fields is applicable to this issue.
          readOnly: true
        integerValue:
          title: Integer value
          type: string
          description: >-
            The value of the issue as an integer. Only applicable if `valueType`
            is `integer`.
          format: gw-biginteger
          x-gw-extensions:
            createOnly: true
        stateSetValue:
          $ref: '#/components/schemas/policyperiod_ExclusiveStateSet'
        createDate:
          title: Create date
          type: string
          description: The date and time when this version of the issue was created
          format: date-time
          x-gw-extensions:
            sortable: true
        rejectingUser:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        stateSetApprovalValue:
          $ref: '#/components/schemas/policyperiod_ExclusiveStateSet'
        decimalApprovalValue:
          title: Decimal approval value
          type: string
          description: >-
            The value of the issue's approval as a decimal. Only applicable if
            `valueType` is `decimal`.
          format: gw-bigdecimal
        issueKey:
          title: Issue key
          type: string
          description: >-
            A unique identifier for this issue that combines the type of issue
            with the policy element the issue applies to, if any
          readOnly: true
          x-gw-extensions:
            sortable: true
        approvalDurationType:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        displayValue:
          title: Display value
          type: string
          description: The formatted, read-only value of the issue
          readOnly: true
        issueType:
          $ref: '#/components/schemas/policyperiod_UWIssueTypeReference'
        moneyApprovalValue:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        comparator:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        integerApprovalValue:
          title: Integer approval value
          type: string
          description: >-
            The value of the issue's approval as an integer. Only applicable if
            `valueType` is `integer`.
          format: gw-biginteger
        blockingPoint:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        canEditApprovalBeforeBind:
          title: Can edit approval before bind
          type: boolean
          description: >-
            A `true` value indicates that this approval can still be edited
            before the containing `Job` is bound
        moneyValue:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        approvingUser:
          $ref: '#/components/schemas/policyperiod_SimpleReference'
        effectiveDate:
          title: Effective date
          type: string
          description: The effective date and time when the issue applies
          format: date-time
        status:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        approvalBlockingPoint:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
      description: >-
        A historical record of the prior values of an underwriting issue (Since
        1.2.0)
      x-gw-sinceVersion: 1.2.0
    policyperiod_UWIssueTypeReference:
      title: Underwriting issue type reference
      type: object
      properties:
        code:
          title: Code
          type: string
          description: The `code` of the `UWIssueType`
          x-gw-extensions:
            sortable: true
        displayName:
          title: Display name
          type: string
          description: The formatted name of the `UWIssueType`
        id:
          title: ID
          type: string
          description: The unique identifier of this element
        jsonPath:
          title: JSON path
          type: string
          description: >-
            The path to the referenced `UWIssueType` within the overall JSON
            document
          readOnly: true
          x-gw-extensions:
            defaultViews:
              - none
        refid:
          title: Reference ID
          type: string
          description: >-
            A unique identifier given to the newly created element in the
            context of the current request
        type:
          title: Type
          type: string
          description: The type of the referenced element
        uri:
          title: URI
          type: string
          description: The canonical URI for the referenced element
      description: >-
        A reference to a `UWIssueType` that represents a type of underwriting
        issue (Since 1.2.0)
      xml:
        name: UWIssueTypeReference
      x-gw-sinceVersion: 1.2.0
      x-gw-extensions:
        resourceReference: true
    UWReferralReason:
      title: Underwriting referral reason
      required:
        - issueType
      type: object
      properties:
        autoApprovable:
          title: Auto-approvable
          type: boolean
          description: >-
            A `true` value indicates that the referral reason will be
            automatically approved during appropriate lifecycle actions if the
            caller has sufficient authority. Reasons that are not
            auto-approvable must be manually approved instead.
          readOnly: true
        blockingPoint:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        comparator:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        decimalValue:
          title: Decimal value
          type: string
          description: >-
            The value of the referral reason as a decimal. Only applicable if
            `valueType` is `decimal`.
          format: gw-bigdecimal
        displayValue:
          title: Display value
          type: string
          description: The formatted, read-only value of this referral reason
          readOnly: true
        id:
          title: ID
          type: string
          description: The unique identifier of this element
          readOnly: true
        integerValue:
          title: Integer value
          type: string
          description: >-
            The value of the referral reason as an integer. Only applicable if
            `valueType` is `integer`.
          format: gw-biginteger
        issueKey:
          title: Issue key
          type: string
          description: >-
            A unique identifier for this referral reason that combines the type
            of the reason with the policy element the reason applies to, if any
          readOnly: true
          x-gw-extensions:
            sortable: true
        issueType:
          $ref: '#/components/schemas/policyperiod_UWIssueTypeReference'
        longDescription:
          title: Long description
          type: string
          description: A longer description of the reason for the referral to underwriting
        moneyValue:
          $ref: '#/components/schemas/policyperiod_MonetaryAmount'
        shortDescription:
          title: Short description
          type: string
          description: A short description of the reason for the referral to underwriting
        stateSetValue:
          $ref: '#/components/schemas/policyperiod_ExclusiveStateSet'
        status:
          $ref: '#/components/schemas/policyperiod_TypeKeyReference'
        valueType:
          title: Value type
          type: string
          description: >-
            The type of value for this referral reason. This field will
            determine which of the value fields is applicable to this referral
            reason.
          readOnly: true
      description: A reason that a policy has been referred to underwriting (Since 1.3.0)
      x-gw-sinceVersion: 1.3.0
    ErrorCause:
      title: Error cause
      type: object
      properties:
        message:
          title: Message
          type: string
          description: The exception message
      description: Basic information of an unexpected server exception
    ErrorDetail:
      type: object
      properties:
        message:
          title: Message
          type: string
          description: A message associated with this specific error
        properties:
          title: Properties
          type: object
          properties: {}
          description: >-
            Properties of this specific error.  The specific properties will
            depend on the specific type of error.
    ErrorInfo:
      title: Error info
      type: object
      properties:
        cause:
          $ref: '#/components/schemas/ErrorCause'
        details:
          title: Details
          type: array
          description: >-
            Additional details of the error. For example, if this overall error
            response was caused by a schema validation failure, the error
            details might represent specific validation errors.
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/ErrorDetail'
        developerMessage:
          title: Developer message
          type: string
          description: >-
            An error message that might be more technical than the `userMessage`
            and is more suitable for use by a developer who built the code that
            made the API call
        stackTrace:
          title: Stack trace
          type: string
          description: >-
            The stack trace associated with the error, if this error was caused
            by an internal server error.  Stack traces will not appear if the
            server is set to production mode.
        status:
          title: Status
          type: integer
          description: The HTTP status code associated with the error
        userMessage:
          title: User message
          type: string
          description: >-
            An error message suitable for displaying to an end user, such as
            someone using a UI that made the API call
      description: Generic schema that REST error responses follow
  responses:
    AuthenticationError:
      description: 401 error that is returned if the request's user cannot be authenticated
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorInfo'
    BadInput:
      description: >-
        400 error that is returned if the input to this endpoint is not valid;
        this can happen because of missing required parameters, malformed json,
        json that does not validate against the declared schema, etc.
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorInfo'
    InternalServerError:
      description: >-
        500 error that is returned if a server-side error prevented this request
        from being processed
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorInfo'
    NotAcceptable:
      description: >-
        406 error that is returned if the Accept header provided by the client
        does not match any types produced by this endpoint
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorInfo'
    NotAuthorized:
      description: >-
        403 error that is returned if the authenticated user is not authorized
        to access a given resource
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorInfo'
    NotFound:
      description: 404 error that is returned if the specified resource does not exist
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorInfo'
    OperationNotSupported:
      description: >-
        405 error that is returned if the specified HTTP verb is not allowed on
        a given resource
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorInfo'
    ServiceUnavailable:
      description: >-
        503 error that is returned if the server's runlevel is not adequate to
        service this request
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorInfo'
    UnsupportedContentType:
      description: >-
        415 error that is returned if the Content-Type of the request is not
        consumable by this endpoint
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ErrorInfo'
  parameters:
    accountId:
      name: accountId
      in: path
      description: The identifier for the account
      required: true
      schema:
        type: string
    contactId:
      name: contactId
      in: path
      description: The identifier for the contact
      required: true
      schema:
        type: string
    enablePolymorphism:
      name: enablePolymorphism
      in: query
      description: >-
        Whether or not to use the `discriminator`/`oneOf` pattern to output
        schemas in cases where the valid set of fields can vary based on some
        attribute of the data such as the country or subtype.  Defaults to
        `true`. See the documentation for more information.
      schema:
        type: boolean
        default: true
    fields:
      name: fields
      in: query
      description: >-
        Allows the caller to specify the set of fields that should be included
        on the response. This can be used to limit the set of fields returned as
        well as to include optional fields that otherwise wouldn't normally be
        returned. The parameter is either of the form `fields=<field list>` or
        `fields=<include>:<field list>`, where `<field list>` consists of a
        comma-separated list of field or field set names. See the documentation
        for more information.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
        x-gw-extensions:
          allowForCompositeApi: true
      x-gw-extensions:
        allowForCompositeApi: true
    filter:
      name: filter
      in: query
      description: >-
        Filters the list of results based on the specified field, operator, and
        value. The parameter is either of the form
        `filter=<field>:<operator>:<value>` or
        `filter=<include>:<field>:<operator>:<value>`. See the documentation for
        more information.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
        x-gw-extensions:
          allowForCompositeApi: true
      x-gw-extensions:
        allowForCompositeApi: true
    filterByUser:
      name: filterByUser
      in: query
      description: >-
        Whether or not to filter endpoints and schema properties by the
        authorization of the caller. Defaults to `false`.
      schema:
        type: boolean
        default: false
    gwLanguageHeader:
      name: GW-Language
      in: header
      description: >-
        If specified, this header will set the language used when processing the
        request
      schema:
        type: string
    gwLocaleHeader:
      name: GW-Locale
      in: header
      description: >-
        If specified, this header will set the locale used when processing the
        request
      schema:
        type: string
    gwSchemaProperty:
      name: GW-IncludeSchemaProperty
      in: header
      description: >-
        If specified and the operation returns json with a defined schema, this
        will add a property, '$GW-Schema',  with the fully qualified name of the
        object's schema.
      schema:
        type: boolean
    gwTraceability:
      name: X-Correlation-ID
      in: header
      description: >-
        This header permits a customer to trace a request from its initial
        reception through all of the subsequent applications that were invoked
        to handle that request. The actual traceability id present in the MDC
        and logs (and returned in the response), is dependent on the
        implementation of TraceabilityIDPlugin. The default implementation uses
        this value, if specified, or a generated UID.  However, another
        implementation may always generate a unique id and just log  the
        relationship between these incoming values and the generated UID. Note:
        that this header can be repeated, but the resulting string will just be
        the comma separated values.
      schema:
        type: string
    gwTransactionID:
      name: GW-DBTransaction-ID
      in: header
      description: >-
        If specified and this operation results in a database commit, this
        header's value must not have been submitted before.  This value must be
        globally unique across all clients, apis and webservices. It is used for
        those transaction that are not idempotent. Unless this is explicitly
        referenced for an operation it is not required.
      required: true
      schema:
        type: string
    gwUnknownPropertyHeader:
      name: GW-UnknownPropertyHandling
      in: header
      description: >-
        If specified, this header will drive the behavior for unknown property
        handling
      schema:
        type: string
        enum:
          - log
          - reject
          - ignore
    gwUnknownQueryParameterHeader:
      name: GW-UnknownQueryParamHandling
      in: header
      description: >-
        If specified, this header will drive the behavior for unknown query
        parameter handling.  Default is to reject them.
      schema:
        type: string
        enum:
          - log
          - reject
          - ignore
    gwValidateResponseHandling:
      name: GW-ValidateResponseHandling
      in: header
      description: >-
        If specified, this header permits the client to override the behavior
        around validating response
      schema:
        type: boolean
    include:
      name: include
      in: query
      description: >-
        Used to request that additional resources be returned with the API
        response in the `included` section of the responses. The `include`
        parameter can appear multiple times, and is a comma-separated list of
        additional resources to include. See the documentation for more
        information.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    includeTotal:
      name: includeTotal
      in: query
      description: >-
        Used to request that results should include a count of the total number
        of results available, which may be more than the total number of results
        currently being returned. This parameter is of the form
        `includeTotal=<true|false>` or `includeTotal=<include>:<true|false>`. If
        not specified, the default is considered to be `false`. See the
        documentation for more information about response pagination.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
        x-gw-extensions:
          allowForCompositeApi: true
      x-gw-extensions:
        allowForCompositeApi: true
    locationId:
      name: locationId
      in: path
      description: The identifier for the location
      required: true
      schema:
        type: string
    omitInclusions:
      name: omitInclusions
      in: query
      description: >-
        Whether or not to omit the `included` properties on request and response
        schemas.  Defaults to `false`. See the documentation for more
        information. (Since 1.4.0)
      schema:
        type: boolean
        default: false
        x-gw-sinceVersion: 1.4.0
      x-gw-sinceVersion: 1.4.0
    pageOffset:
      name: pageOffset
      in: query
      description: >-
        The offset of the first result to fetch when fetching a paginated set of
        results. The parameter is of the form `pageOffset=<number>` where the
        first result has an offset of 0. For example, `pageOffset=25` will skip
        the first 25 results in sorted order. If not specified, the default
        value is 0. See the documentation for more information about response
        pagination.
      schema:
        type: string
        x-gw-extensions:
          allowForCompositeApi: true
      x-gw-extensions:
        allowForCompositeApi: true
    pageSize:
      name: pageSize
      in: query
      description: >-
        The maximum number of results to return in the response. The parameter
        is of the form `pageSize=<size>` or `pageSize=<include>:<size>`. The
        maximum allowed `pageSize` and the default `pageSize` both depend on the
        specific API endpoint the request is made to. See the documentation for
        more information about response pagination.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
        x-gw-extensions:
          allowForCompositeApi: true
      x-gw-extensions:
        allowForCompositeApi: true
    prettyPrintSchema:
      name: prettyPrint
      in: query
      description: >-
        Whether or not to pretty-print the returned schema, making it larger but
        more human readable.  Defaults to `false`.
      schema:
        type: boolean
        default: false
    sort:
      name: sort
      in: query
      description: >-
        Controls the sorting of elements within a response. The sort parameter
        is of the form `sort=<fields>` or `sort=<include>:<fields>`, where
        `<fields>` represents a comma-separated list of field names to sort on.
        Field names can be prefixed with `-` to request a descending sort,
        otherwise the sort will be ascending. See the documentation for more
        information.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
        x-gw-extensions:
          allowForCompositeApi: true
      x-gw-extensions:
        allowForCompositeApi: true
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic